
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ARROW ASSIGN BOOL BOOLEAN BREAK CALLMETHOD CASE CHARACTER CLASS COLLECTIONTYPE COLON COMMA COMMENT CONTINUE DECIMAL DEFAULT DICTIONARYTYPE DIVIDE DOUBLE ELSE ENUM EQUALS FALSE FLOAT FOR FUNC GREATERTHAN GUARD IF IMPORT IN INIT INT INTEGER LBRACES LESSTHAN LET LPAREN LSQUAREBRACKET MINUS MINUSONE MULTIPLY NOT NOTEQUALS NUMBER OPTIONALVARIABLE OR PLUS PLUSONE PRINT PRIVATE PUBLIC RANGE RBRACES READLN REPEAT RESIDUE RETURN RPAREN RSQUAREBRACKET SET SETVARIABLE STATIC STRING STRUCT SWITCH TRUE TYPEALIAS VALUESTYPE VAR VARIABLE WHILE WSTRING\n    program : statements\n    \n    statements : statements statement\n               | statement\n    \n    statement : assignment_to_type\n              | assignment_to_type_collection \n              | assignment_to_type_collection_set\n              | variable_declarator VARIABLE ASSIGN expression\n              | ifComp\n              | print_statement\n              | while_statement\n              | switch_statement\n              | import_statement\n              | for_statement \n              | function_general\n              | function_call\n              | function_init\n              | comment\n    \n    variable_declarator : LET\n                        | VAR\n    \n    print_statement : PRINT LPAREN expression RPAREN\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression GREATERTHAN expression\n               | expression LESSTHAN expression\n               | expression EQUALS expression\n               | expression NOTEQUALS expression\n               | expression AND expression\n               | expression OR expression\n               | expression COMMA expression\n               | expression COLON expression\n               | LPAREN expression RPAREN\n               | NOT expression\n               | VARIABLE\n               | type\n               | comparacion\n               | boolean_expresion\n               \n    \n  assignment_to_type : variable_declarator VARIABLE COLON STRING ASSIGN WSTRING\n                    | variable_declarator VARIABLE COLON integer_options ASSIGN NUMBER\n                    | variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE\n                    | variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE\n                    | variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL\n  \n  assignment_to_type_collection : variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET\n                                | variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET\n                                | variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET\n                                | variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET\n  \n   integer_options : INTEGER\n                    | INT\n   mul_integuer : mul_integuer COMMA NUMBER\n                    | NUMBER\n   mul_string : mul_string COMMA WSTRING\n                    | WSTRING\n   \n   mul_booleano : mul_booleano COMMA boolean_option\n                    | boolean_option\n   \n   boolean_option : TRUE \n                  | FALSE\n   mul_float : mul_float COMMA DECIMAL\n                    | DECIMAL\n   \n   comparacion : VARIABLE operadorComp VARIABLE\n               | DECIMAL operadorComp DECIMAL\n               | WSTRING operadorComp WSTRING\n               | NUMBER operadorComp NUMBER\n               | VARIABLE operadorComp DECIMAL  \n               | DECIMAL operadorComp VARIABLE\n               | WSTRING operadorComp VARIABLE\n               | VARIABLE operadorComp WSTRING\n               | NUMBER operadorComp VARIABLE\n               | VARIABLE operadorComp NUMBER\n   operadorComp :  GREATERTHAN\n                     | LESSTHAN\n                     | EQUALS\n                     | NOTEQUALS\n  \n   ifComp : IF LPAREN comparacion RPAREN LBRACES statements RBRACES\n         | IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES\n   \n    type : TRUE\n        | FALSE\n        | DECIMAL\n        | WSTRING\n        | NUMBER\n    \n  assignment_to_type_collection_set : variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET\n                                    | variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET\n                                    | variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET\n                                    | variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET\n  \n  boolean_expresion : LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion\n                    | boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN \n                    | boolean_option logical_operator boolean_option\n                    | logical_operator boolean_option\n                    | boolean_option logical_operator\n  \n  logical_operator : AND\n                   | OR  \n  \n    import_statement : IMPORT VARIABLE\n    \n    for_statement : FOR VARIABLE IN NUMBER RANGE NUMBER LBRACES statements RBRACES\n                    | FOR VARIABLE IN VARIABLE LBRACES statements RBRACES\n    \n    while_statement : WHILE LPAREN expression RPAREN LBRACES statements RBRACES\n                    | REPEAT LBRACES statements RBRACES WHILE LPAREN expression RPAREN                   \n    \n    switch_statement : SWITCH VARIABLE LBRACES caso RBRACES\n    \n    caso : CASE expression COLON cuerpo_caso caso\n         | CASE expression COLON cuerpo_caso DEFAULT COLON cuerpo_caso\n    \n    cuerpo_caso : expression \n                | statement\n    \n    functionstatements : functionstatements functionbody\n                        | functionbody\n    \n    functionbody : assignment_to_type\n                | print_statement\n                | ifComp\n                | while_statement\n                | switch_statement\n                | import_statement\n                | for_statement\n                | empty\n                | comment\n    \n    function_general : function_declaration\n                    | function_declaration_empty\n                    \n\n    \n    function_declaration : FUNC VARIABLE LPAREN function_parameters RPAREN function_return_type LBRACES functionstatements return_statement RBRACES\n    \n    function_declaration_empty : FUNC VARIABLE LPAREN empty  RPAREN function_return_type LBRACES functionstatements return_statement RBRACES\n    \n    data_type : INTEGER\n              | STRING\n              | BOOLEAN\n              | DOUBLE\n              | FLOAT\n              | INT\n    \n    function_parameters : function_parameters COMMA VARIABLE COLON data_type\n                        | VARIABLE COLON data_type\n                        \n    \n    function_return_type : ARROW data_type\n                         | ARROW LPAREN function_parameters RPAREN\n                         | empty\n    \n    return_statement : RETURN expression\n    \n    function_init : INIT LPAREN function_parameters RPAREN LBRACES statements RBRACES\n                    | INIT LPAREN empty RPAREN LBRACES statements RBRACES\n    \n    function_call : VARIABLE LPAREN function_arguments RPAREN\n    \n    function_arguments : function_arguments COMMA expression\n                       | expression\n                       | empty\n    \n    empty :\n    \n    comment : COMMENT\n    '
    
_lr_action_items = {'LET':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,39,41,47,52,53,55,56,57,58,59,60,61,62,72,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,173,175,177,179,189,190,191,192,193,204,205,207,208,210,212,227,228,234,235,236,238,239,242,252,253,255,258,259,260,261,262,263,264,265,266,267,268,269,272,286,287,288,290,295,297,299,301,308,311,314,319,320,321,322,324,],[19,19,-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,19,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,19,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,19,19,-97,19,19,19,-39,-40,-41,-42,-43,19,19,19,19,19,19,-74,-95,-94,19,-129,-130,19,19,-85,-86,-96,19,19,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,19,19,19,-93,-102,-44,-45,-46,-47,19,-115,-116,-81,-82,-83,-84,-75,]),'VAR':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,39,41,47,52,53,55,56,57,58,59,60,61,62,72,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,173,175,177,179,189,190,191,192,193,204,205,207,208,210,212,227,228,234,235,236,238,239,242,252,253,255,258,259,260,261,262,263,264,265,266,267,268,269,272,286,287,288,290,295,297,299,301,308,311,314,319,320,321,322,324,],[20,20,-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,20,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,20,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,20,20,-97,20,20,20,-39,-40,-41,-42,-43,20,20,20,20,20,20,-74,-95,-94,20,-129,-130,20,20,-85,-86,-96,20,20,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,20,20,20,-93,-102,-44,-45,-46,-47,20,-115,-116,-81,-82,-83,-84,-75,]),'IF':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,39,41,47,52,53,55,56,57,58,59,60,61,62,72,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,173,175,177,179,189,190,191,192,193,204,205,207,208,210,212,227,228,234,235,236,238,239,242,252,253,255,258,259,260,261,262,263,264,265,266,267,268,269,272,286,287,288,290,295,297,299,301,308,311,314,319,320,321,322,324,],[21,21,-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,21,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,21,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,21,21,-97,21,21,21,-39,-40,-41,-42,-43,21,21,21,21,21,21,-74,-95,-94,21,-129,-130,21,21,-85,-86,-96,21,21,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,21,21,21,-93,-102,-44,-45,-46,-47,21,-115,-116,-81,-82,-83,-84,-75,]),'PRINT':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,39,41,47,52,53,55,56,57,58,59,60,61,62,72,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,173,175,177,179,189,190,191,192,193,204,205,207,208,210,212,227,228,234,235,236,238,239,242,252,253,255,258,259,260,261,262,263,264,265,266,267,268,269,272,286,287,288,290,295,297,299,301,308,311,314,319,320,321,322,324,],[22,22,-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,22,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,22,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,22,22,-97,22,22,22,-39,-40,-41,-42,-43,22,22,22,22,22,22,-74,-95,-94,22,-129,-130,22,22,-85,-86,-96,22,22,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,22,22,22,-93,-102,-44,-45,-46,-47,22,-115,-116,-81,-82,-83,-84,-75,]),'WHILE':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,39,41,47,52,53,55,56,57,58,59,60,61,62,72,79,97,111,116,117,118,119,121,123,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,173,175,177,179,189,190,191,192,193,204,205,207,208,210,212,227,228,234,235,236,238,239,242,252,253,255,258,259,260,261,262,263,264,265,266,267,268,269,272,286,287,288,290,295,297,299,301,308,311,314,319,320,321,322,324,],[23,23,-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,23,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,23,-7,-131,-34,-89,-88,-56,-57,-20,172,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,23,23,-97,23,23,23,-39,-40,-41,-42,-43,23,23,23,23,23,23,-74,-95,-94,23,-129,-130,23,23,-85,-86,-96,23,23,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,23,23,23,-93,-102,-44,-45,-46,-47,23,-115,-116,-81,-82,-83,-84,-75,]),'REPEAT':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,39,41,47,52,53,55,56,57,58,59,60,61,62,72,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,173,175,177,179,189,190,191,192,193,204,205,207,208,210,212,227,228,234,235,236,238,239,242,252,253,255,258,259,260,261,262,263,264,265,266,267,268,269,272,286,287,288,290,295,297,299,301,308,311,314,319,320,321,322,324,],[24,24,-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,24,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,24,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,24,24,-97,24,24,24,-39,-40,-41,-42,-43,24,24,24,24,24,24,-74,-95,-94,24,-129,-130,24,24,-85,-86,-96,24,24,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,24,24,24,-93,-102,-44,-45,-46,-47,24,-115,-116,-81,-82,-83,-84,-75,]),'SWITCH':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,39,41,47,52,53,55,56,57,58,59,60,61,62,72,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,173,175,177,179,189,190,191,192,193,204,205,207,208,210,212,227,228,234,235,236,238,239,242,252,253,255,258,259,260,261,262,263,264,265,266,267,268,269,272,286,287,288,290,295,297,299,301,308,311,314,319,320,321,322,324,],[25,25,-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,25,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,25,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,25,25,-97,25,25,25,-39,-40,-41,-42,-43,25,25,25,25,25,25,-74,-95,-94,25,-129,-130,25,25,-85,-86,-96,25,25,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,25,25,25,-93,-102,-44,-45,-46,-47,25,-115,-116,-81,-82,-83,-84,-75,]),'IMPORT':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,39,41,47,52,53,55,56,57,58,59,60,61,62,72,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,173,175,177,179,189,190,191,192,193,204,205,207,208,210,212,227,228,234,235,236,238,239,242,252,253,255,258,259,260,261,262,263,264,265,266,267,268,269,272,286,287,288,290,295,297,299,301,308,311,314,319,320,321,322,324,],[26,26,-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,26,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,26,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,26,26,-97,26,26,26,-39,-40,-41,-42,-43,26,26,26,26,26,26,-74,-95,-94,26,-129,-130,26,26,-85,-86,-96,26,26,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,26,26,26,-93,-102,-44,-45,-46,-47,26,-115,-116,-81,-82,-83,-84,-75,]),'FOR':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,39,41,47,52,53,55,56,57,58,59,60,61,62,72,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,173,175,177,179,189,190,191,192,193,204,205,207,208,210,212,227,228,234,235,236,238,239,242,252,253,255,258,259,260,261,262,263,264,265,266,267,268,269,272,286,287,288,290,295,297,299,301,308,311,314,319,320,321,322,324,],[27,27,-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,27,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,27,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,27,27,-97,27,27,27,-39,-40,-41,-42,-43,27,27,27,27,27,27,-74,-95,-94,27,-129,-130,27,27,-85,-86,-96,27,27,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,27,27,27,-93,-102,-44,-45,-46,-47,27,-115,-116,-81,-82,-83,-84,-75,]),'VARIABLE':([0,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,25,26,27,28,29,31,32,33,35,36,37,38,39,41,43,45,47,48,52,53,54,55,56,57,58,59,60,61,62,72,74,78,79,88,89,90,91,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,121,125,129,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,173,175,177,179,189,190,191,192,193,204,205,206,207,208,210,212,227,228,234,235,236,238,241,252,253,255,258,270,286,287,288,291,295,297,299,301,308,311,314,319,320,321,322,324,],[8,8,-3,-4,-5,-6,34,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,40,41,42,-113,-114,-136,44,-2,47,66,47,47,8,-92,77,47,-35,47,-90,-91,47,-36,-37,-38,-76,-77,-78,-79,-80,8,126,77,-7,143,-70,-71,-72,-73,-131,47,47,47,47,47,47,47,47,47,47,47,47,47,-34,164,166,168,-89,-88,-56,-57,-20,47,178,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,8,8,-97,8,8,8,-39,-40,-41,-42,-43,8,8,47,233,8,8,8,-74,-95,-94,8,-129,-130,77,-85,-86,-96,8,292,8,233,-93,47,-44,-45,-46,-47,8,-115,-116,-81,-82,-83,-84,-75,]),'INIT':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,39,41,47,52,53,55,56,57,58,59,60,61,62,72,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,173,175,177,179,189,190,191,192,193,204,205,207,208,210,212,227,228,234,235,236,238,252,253,255,258,286,287,288,295,297,299,301,308,311,314,319,320,321,322,324,],[30,30,-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,30,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,30,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,30,30,-97,30,30,30,-39,-40,-41,-42,-43,30,30,30,30,30,30,-74,-95,-94,30,-129,-130,-85,-86,-96,30,30,30,-93,-44,-45,-46,-47,30,-115,-116,-81,-82,-83,-84,-75,]),'COMMENT':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,39,41,47,52,53,55,56,57,58,59,60,61,62,72,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,173,175,177,179,189,190,191,192,193,204,205,207,208,210,212,227,228,234,235,236,238,239,242,252,253,255,258,259,260,261,262,263,264,265,266,267,268,269,272,286,287,288,290,295,297,299,301,308,311,314,319,320,321,322,324,],[31,31,-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,31,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,31,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,31,31,-97,31,31,31,-39,-40,-41,-42,-43,31,31,31,31,31,31,-74,-95,-94,31,-129,-130,31,31,-85,-86,-96,31,31,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,31,31,31,-93,-102,-44,-45,-46,-47,31,-115,-116,-81,-82,-83,-84,-75,]),'FUNC':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,39,41,47,52,53,55,56,57,58,59,60,61,62,72,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,173,175,177,179,189,190,191,192,193,204,205,207,208,210,212,227,228,234,235,236,238,252,253,255,258,286,287,288,295,297,299,301,308,311,314,319,320,321,322,324,],[32,32,-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,32,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,32,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,32,32,-97,32,32,32,-39,-40,-41,-42,-43,32,32,32,32,32,32,-74,-95,-94,32,-129,-130,-85,-86,-96,32,32,32,-93,-44,-45,-46,-47,32,-115,-116,-81,-82,-83,-84,-75,]),'$end':([1,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,41,47,52,53,55,56,57,58,59,60,61,62,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,173,189,190,191,192,193,227,228,234,236,238,252,253,255,288,295,297,299,301,311,314,319,320,321,322,324,],[0,-1,-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,-97,-39,-40,-41,-42,-43,-74,-95,-94,-129,-130,-85,-86,-96,-93,-44,-45,-46,-47,-115,-116,-81,-82,-83,-84,-75,]),'RBRACES':([3,4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,33,41,47,52,53,55,56,57,58,59,60,61,62,72,79,97,111,116,117,118,119,121,124,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,173,189,190,191,192,193,204,205,208,210,212,227,228,232,233,234,236,238,252,253,255,256,258,288,289,294,295,297,299,301,308,309,310,311,312,314,319,320,321,322,324,],[-3,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-2,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,123,-7,-131,-34,-89,-88,-56,-57,-20,173,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,-97,-39,-40,-41,-42,-43,227,228,234,236,238,-74,-95,-101,-35,-94,-129,-130,-85,-86,-96,-98,288,-93,311,314,-44,-45,-46,-47,324,-100,-99,-115,-128,-116,-81,-82,-83,-84,-75,]),'DEFAULT':([4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,41,47,52,53,55,56,57,58,59,60,61,62,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,173,189,190,191,192,193,227,228,230,231,232,233,234,236,238,252,253,255,288,295,297,299,301,311,314,319,320,321,322,324,],[-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,-97,-39,-40,-41,-42,-43,-74,-95,-100,257,-101,-35,-94,-129,-130,-85,-86,-96,-93,-44,-45,-46,-47,-115,-116,-81,-82,-83,-84,-75,]),'CASE':([4,5,6,9,10,11,12,13,14,15,16,17,18,28,29,31,41,47,52,53,55,56,57,58,59,60,61,62,73,79,97,111,116,117,118,119,121,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,173,189,190,191,192,193,227,228,230,231,232,233,234,236,238,252,253,255,288,295,297,299,301,311,314,319,320,321,322,324,],[-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-113,-114,-136,-92,-35,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,125,-7,-131,-34,-89,-88,-56,-57,-20,-60,-64,-67,-69,-33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,-97,-39,-40,-41,-42,-43,-74,-95,-100,125,-101,-35,-94,-129,-130,-85,-86,-96,-93,-44,-45,-46,-47,-115,-116,-81,-82,-83,-84,-75,]),'LPAREN':([8,21,22,23,30,35,37,38,44,45,48,52,53,54,57,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,119,125,148,169,172,202,206,207,214,225,233,252,253,287,291,],[35,36,37,38,43,48,48,48,78,48,48,-90,-91,48,112,48,48,48,48,48,48,48,48,48,48,48,48,48,-89,-88,-56,-57,48,-89,-87,206,-87,48,48,241,251,35,112,-86,48,48,]),'LBRACES':([24,40,120,122,126,128,130,181,182,183,184,185,186,187,188,209,213,215,216,240,254,293,],[39,73,170,171,175,177,179,-117,-118,-119,-120,-121,-122,-135,-135,235,239,-127,242,-125,286,-126,]),'RETURN':([31,41,121,173,189,190,191,192,193,227,228,234,239,242,255,259,260,261,262,263,264,265,266,267,268,269,272,288,290,324,],[-136,-92,-20,-97,-39,-40,-41,-42,-43,-74,-95,-94,-135,-135,-96,291,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,291,-93,-102,-75,]),'ASSIGN':([34,80,81,82,83,86,87,194,195,196,197,221,222,223,224,],[45,134,135,136,137,-48,-49,217,218,219,220,247,248,249,250,]),'COLON':([34,47,50,52,53,55,56,57,58,59,60,61,62,70,71,77,79,93,95,96,111,116,117,118,119,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,174,178,202,229,230,233,252,253,257,292,309,312,],[46,-35,110,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,110,110,131,110,110,-76,-77,110,-89,-88,-56,-57,-60,-64,-67,-69,-33,-89,110,110,110,110,110,110,110,110,110,110,110,110,110,-61,-65,-62,-66,-63,-68,-87,207,211,-87,110,110,-35,-85,-86,287,313,110,110,]),'NOT':([35,37,38,45,48,54,98,99,100,101,102,103,104,105,106,107,108,109,110,125,206,207,287,291,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'RPAREN':([35,43,47,49,50,51,52,53,55,56,57,58,59,60,61,62,65,70,71,75,76,78,93,95,96,111,116,117,118,119,132,133,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,180,181,182,183,184,185,186,202,226,229,237,252,253,271,323,],[-135,-135,-35,97,-133,-134,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,120,121,122,128,130,-135,147,-76,-77,-34,-89,-88,-56,-57,187,188,-60,-64,-67,-69,-33,-89,-132,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-61,-65,-62,-66,-63,-68,-87,-124,-117,-118,-119,-120,-121,-122,225,253,255,-123,-85,-86,293,225,]),'COMMA':([35,47,49,50,51,52,53,55,56,57,58,59,60,61,62,70,71,75,79,93,95,96,111,116,117,118,119,132,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,174,180,181,182,183,184,185,186,202,229,230,233,237,252,253,271,273,274,275,276,277,278,279,280,303,304,305,306,309,312,315,316,317,318,],[-135,-35,98,109,-134,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,109,109,129,109,109,-76,-77,109,-89,-88,-56,-57,129,-60,-64,-67,-69,-33,-89,109,109,109,109,109,109,109,109,109,109,109,109,109,-61,-65,-62,-66,-63,-68,-87,109,-124,-117,-118,-119,-120,-121,-122,-87,109,109,-35,-123,-85,-86,129,296,-51,298,-53,300,-55,302,-59,296,298,300,302,109,109,-50,-52,-54,-58,]),'TRUE':([35,37,38,45,48,52,53,54,64,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,125,136,148,203,206,207,225,245,251,283,287,291,300,307,],[58,58,58,58,95,-90,-91,58,118,58,58,58,58,58,58,58,58,58,58,58,58,58,118,118,58,191,118,118,58,58,118,118,118,118,58,58,118,118,]),'FALSE':([35,37,38,45,48,52,53,54,64,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,125,136,148,203,206,207,225,245,251,283,287,291,300,307,],[59,59,59,59,96,-90,-91,59,119,59,59,59,59,59,59,59,59,59,59,59,59,59,119,119,59,192,119,119,59,59,119,119,119,119,59,59,119,119,]),'DECIMAL':([35,36,37,38,45,48,54,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,113,125,137,206,207,246,284,287,291,302,],[60,67,60,60,60,60,60,144,-70,-71,-72,-73,60,60,60,60,60,60,60,60,60,60,60,60,60,163,60,193,60,60,280,280,60,60,318,]),'WSTRING':([35,36,37,38,45,48,54,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,114,125,134,206,207,244,282,287,291,298,],[61,68,61,61,61,61,61,145,-70,-71,-72,-73,61,61,61,61,61,61,61,61,61,61,61,61,61,165,61,189,61,61,276,276,61,61,316,]),'NUMBER':([35,36,37,38,45,48,54,74,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,115,125,135,176,206,207,243,281,287,291,296,],[62,69,62,62,62,62,62,127,146,-70,-71,-72,-73,62,62,62,62,62,62,62,62,62,62,62,62,62,167,62,190,209,62,62,274,274,62,62,315,]),'AND':([35,37,38,45,47,48,50,52,53,54,55,56,57,58,59,60,61,62,63,70,71,79,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,116,117,118,119,125,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,174,202,206,207,225,229,230,233,252,253,285,287,291,309,312,],[52,52,52,52,-35,52,107,-90,-91,52,-36,-37,-38,-56,-57,-78,-79,-80,52,107,107,107,107,52,-56,-57,52,52,52,52,52,52,52,52,52,52,52,52,52,107,-89,-88,-56,-57,52,-60,-64,-67,-69,-33,-89,107,107,107,107,107,107,107,107,107,107,107,107,107,52,-61,-65,-62,-66,-63,-68,-87,107,-87,52,52,52,107,107,-35,-85,-86,52,52,52,107,107,]),'OR':([35,37,38,45,47,48,50,52,53,54,55,56,57,58,59,60,61,62,63,70,71,79,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,116,117,118,119,125,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,174,202,206,207,225,229,230,233,252,253,285,287,291,309,312,],[53,53,53,53,-35,53,108,-90,-91,53,-36,-37,-38,-56,-57,-78,-79,-80,53,108,108,108,108,53,-56,-57,53,53,53,53,53,53,53,53,53,53,53,53,53,108,-89,-88,-56,-57,53,-60,-64,-67,-69,-33,-89,108,108,108,108,108,108,108,108,108,108,108,108,108,53,-61,-65,-62,-66,-63,-68,-87,108,-87,53,53,53,108,108,-35,-85,-86,53,53,53,108,108,]),'IN':([42,],[74,]),'STRING':([46,84,131,142,211,214,313,],[80,139,182,199,182,182,80,]),'BOOLEAN':([46,84,131,142,211,214,313,],[82,140,183,200,183,183,82,]),'FLOAT':([46,84,131,142,211,214,313,],[83,141,185,201,185,185,83,]),'LSQUAREBRACKET':([46,217,218,219,220,247,248,249,250,],[84,243,244,245,246,281,282,283,284,]),'SET':([46,],[85,]),'INTEGER':([46,84,131,142,211,214,313,],[86,86,181,86,181,181,86,]),'INT':([46,84,131,142,211,214,313,],[87,87,186,87,186,186,87,]),'PLUS':([47,50,52,53,55,56,57,58,59,60,61,62,70,71,79,93,95,96,111,116,117,118,119,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,174,202,229,230,233,252,253,309,312,],[-35,99,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,99,99,99,99,-76,-77,99,-89,-88,-56,-57,-60,-64,-67,-69,-33,-89,99,99,99,99,99,99,99,99,99,99,99,99,99,-61,-65,-62,-66,-63,-68,-87,99,-87,99,99,-35,-85,-86,99,99,]),'MINUS':([47,50,52,53,55,56,57,58,59,60,61,62,70,71,79,93,95,96,111,116,117,118,119,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,174,202,229,230,233,252,253,309,312,],[-35,100,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,100,100,100,100,-76,-77,100,-89,-88,-56,-57,-60,-64,-67,-69,-33,-89,100,100,100,100,100,100,100,100,100,100,100,100,100,-61,-65,-62,-66,-63,-68,-87,100,-87,100,100,-35,-85,-86,100,100,]),'MULTIPLY':([47,50,52,53,55,56,57,58,59,60,61,62,70,71,79,93,95,96,111,116,117,118,119,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,174,202,229,230,233,252,253,309,312,],[-35,101,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,101,101,101,101,-76,-77,101,-89,-88,-56,-57,-60,-64,-67,-69,-33,-89,101,101,101,101,101,101,101,101,101,101,101,101,101,-61,-65,-62,-66,-63,-68,-87,101,-87,101,101,-35,-85,-86,101,101,]),'DIVIDE':([47,50,52,53,55,56,57,58,59,60,61,62,70,71,79,93,95,96,111,116,117,118,119,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,174,202,229,230,233,252,253,309,312,],[-35,102,-90,-91,-36,-37,-38,-76,-77,-78,-79,-80,102,102,102,102,-76,-77,102,-89,-88,-56,-57,-60,-64,-67,-69,-33,-89,102,102,102,102,102,102,102,102,102,102,102,102,102,-61,-65,-62,-66,-63,-68,-87,102,-87,102,102,-35,-85,-86,102,102,]),'GREATERTHAN':([47,50,52,53,55,56,57,58,59,60,61,62,66,67,68,69,70,71,79,86,87,93,95,96,111,116,117,118,119,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,174,198,199,200,201,202,229,230,233,252,253,309,312,],[89,103,-90,-91,-36,-37,-38,-76,-77,89,89,89,89,89,89,89,103,103,103,-48,-49,103,-76,-77,103,-89,-88,-56,-57,-60,-64,-67,-69,-33,-89,103,103,103,103,103,103,103,103,103,103,103,103,103,-61,-65,-62,-66,-63,-68,-87,103,221,222,223,224,-87,103,103,89,-85,-86,103,103,]),'LESSTHAN':([47,50,52,53,55,56,57,58,59,60,61,62,66,67,68,69,70,71,79,85,93,95,96,111,116,117,118,119,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,174,202,229,230,233,252,253,309,312,],[90,104,-90,-91,-36,-37,-38,-76,-77,90,90,90,90,90,90,90,104,104,104,142,104,-76,-77,104,-89,-88,-56,-57,-60,-64,-67,-69,-33,-89,104,104,104,104,104,104,104,104,104,104,104,104,104,-61,-65,-62,-66,-63,-68,-87,104,-87,104,104,90,-85,-86,104,104,]),'EQUALS':([47,50,52,53,55,56,57,58,59,60,61,62,66,67,68,69,70,71,79,93,95,96,111,116,117,118,119,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,174,202,229,230,233,252,253,309,312,],[91,105,-90,-91,-36,-37,-38,-76,-77,91,91,91,91,91,91,91,105,105,105,105,-76,-77,105,-89,-88,-56,-57,-60,-64,-67,-69,-33,-89,105,105,105,105,105,105,105,105,105,105,105,105,105,-61,-65,-62,-66,-63,-68,-87,105,-87,105,105,91,-85,-86,105,105,]),'NOTEQUALS':([47,50,52,53,55,56,57,58,59,60,61,62,66,67,68,69,70,71,79,93,95,96,111,116,117,118,119,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,174,202,229,230,233,252,253,309,312,],[92,106,-90,-91,-36,-37,-38,-76,-77,92,92,92,92,92,92,92,106,106,106,106,-76,-77,106,-89,-88,-56,-57,-60,-64,-67,-69,-33,-89,106,106,106,106,106,106,106,106,106,106,106,106,106,-61,-65,-62,-66,-63,-68,-87,106,-87,106,106,92,-85,-86,106,106,]),'RSQUAREBRACKET':([86,87,118,119,138,139,140,141,273,274,275,276,277,278,279,280,303,304,305,306,315,316,317,318,],[-48,-49,-56,-57,194,195,196,197,295,-51,297,-53,299,-55,301,-59,319,320,321,322,-50,-52,-54,-58,]),'RANGE':([127,],[176,]),'DOUBLE':([131,211,214,],[184,184,184,]),'ARROW':([187,188,],[214,214,]),'ELSE':([227,],[254,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,39,170,171,175,177,179,235,286,],[2,72,204,205,208,210,212,258,308,]),'statement':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,258,286,287,308,],[3,33,3,33,3,3,3,3,3,33,33,232,33,33,33,3,33,3,232,33,]),'assignment_to_type':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,239,242,258,259,272,286,287,308,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,261,261,4,261,261,4,4,4,]),'assignment_to_type_collection':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,258,286,287,308,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assignment_to_type_collection_set':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,258,286,287,308,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'variable_declarator':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,239,242,258,259,272,286,287,308,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,270,270,7,270,270,7,7,7,]),'ifComp':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,239,242,258,259,272,286,287,308,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,263,263,9,263,263,9,9,9,]),'print_statement':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,239,242,258,259,272,286,287,308,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,262,262,10,262,262,10,10,10,]),'while_statement':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,239,242,258,259,272,286,287,308,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,264,264,11,264,264,11,11,11,]),'switch_statement':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,239,242,258,259,272,286,287,308,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,265,265,12,265,265,12,12,12,]),'import_statement':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,239,242,258,259,272,286,287,308,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,266,266,13,266,266,13,13,13,]),'for_statement':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,239,242,258,259,272,286,287,308,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,267,267,14,267,267,14,14,14,]),'function_general':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,258,286,287,308,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'function_call':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,258,286,287,308,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'function_init':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,258,286,287,308,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'comment':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,239,242,258,259,272,286,287,308,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,269,269,18,269,269,18,18,18,]),'function_declaration':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,258,286,287,308,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'function_declaration_empty':([0,2,39,72,170,171,175,177,179,204,205,207,208,210,212,235,258,286,287,308,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'function_arguments':([35,],[49,]),'expression':([35,37,38,45,48,54,98,99,100,101,102,103,104,105,106,107,108,109,110,125,206,207,287,291,],[50,70,71,79,93,111,149,150,151,152,153,154,155,156,157,158,159,160,161,174,229,230,309,312,]),'empty':([35,43,78,187,188,239,242,259,272,],[51,76,133,215,215,268,268,268,268,]),'type':([35,37,38,45,48,54,98,99,100,101,102,103,104,105,106,107,108,109,110,125,206,207,287,291,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'comparacion':([35,36,37,38,45,48,54,98,99,100,101,102,103,104,105,106,107,108,109,110,125,206,207,287,291,],[56,65,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'boolean_expresion':([35,37,38,45,48,54,98,99,100,101,102,103,104,105,106,107,108,109,110,125,206,207,225,287,291,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,252,57,57,]),'boolean_option':([35,37,38,45,48,54,64,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,125,148,203,206,207,225,245,251,283,287,291,300,307,],[63,63,63,63,94,63,117,63,63,63,63,63,63,63,63,63,63,63,63,63,162,169,63,202,226,63,63,63,278,285,278,63,63,317,323,]),'logical_operator':([35,37,38,45,48,54,63,94,98,99,100,101,102,103,104,105,106,107,108,109,110,125,162,206,207,225,285,287,291,],[64,64,64,64,64,64,116,148,64,64,64,64,64,64,64,64,64,64,64,64,64,64,203,64,64,64,307,64,64,]),'function_parameters':([43,78,241,],[75,132,271,]),'integer_options':([46,84,142,313,],[81,138,198,81,]),'operadorComp':([47,60,61,62,66,67,68,69,233,],[88,113,114,115,88,113,114,115,88,]),'caso':([73,231,],[124,256,]),'data_type':([131,211,214,],[180,237,240,]),'function_return_type':([187,188,],[213,216,]),'cuerpo_caso':([207,287,],[231,310,]),'functionstatements':([239,242,],[259,272,]),'functionbody':([239,242,259,272,],[260,260,290,290,]),'mul_integuer':([243,281,],[273,303,]),'mul_string':([244,282,],[275,304,]),'mul_booleano':([245,283,],[277,305,]),'mul_float':([246,284,],[279,306,]),'return_statement':([259,272,],[289,294,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','AnalisisSemantico.py',10),
  ('statements -> statements statement','statements',2,'p_statements','AnalisisSemantico.py',14),
  ('statements -> statement','statements',1,'p_statements','AnalisisSemantico.py',15),
  ('statement -> assignment_to_type','statement',1,'p_statement','AnalisisSemantico.py',19),
  ('statement -> assignment_to_type_collection','statement',1,'p_statement','AnalisisSemantico.py',20),
  ('statement -> assignment_to_type_collection_set','statement',1,'p_statement','AnalisisSemantico.py',21),
  ('statement -> variable_declarator VARIABLE ASSIGN expression','statement',4,'p_statement','AnalisisSemantico.py',22),
  ('statement -> ifComp','statement',1,'p_statement','AnalisisSemantico.py',23),
  ('statement -> print_statement','statement',1,'p_statement','AnalisisSemantico.py',24),
  ('statement -> while_statement','statement',1,'p_statement','AnalisisSemantico.py',25),
  ('statement -> switch_statement','statement',1,'p_statement','AnalisisSemantico.py',26),
  ('statement -> import_statement','statement',1,'p_statement','AnalisisSemantico.py',27),
  ('statement -> for_statement','statement',1,'p_statement','AnalisisSemantico.py',28),
  ('statement -> function_general','statement',1,'p_statement','AnalisisSemantico.py',29),
  ('statement -> function_call','statement',1,'p_statement','AnalisisSemantico.py',30),
  ('statement -> function_init','statement',1,'p_statement','AnalisisSemantico.py',31),
  ('statement -> comment','statement',1,'p_statement','AnalisisSemantico.py',32),
  ('variable_declarator -> LET','variable_declarator',1,'p_variable_declarator','AnalisisSemantico.py',38),
  ('variable_declarator -> VAR','variable_declarator',1,'p_variable_declarator','AnalisisSemantico.py',39),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','AnalisisSemantico.py',43),
  ('expression -> expression PLUS expression','expression',3,'p_expression','AnalisisSemantico.py',48),
  ('expression -> expression MINUS expression','expression',3,'p_expression','AnalisisSemantico.py',49),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','AnalisisSemantico.py',50),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','AnalisisSemantico.py',51),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression','AnalisisSemantico.py',52),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression','AnalisisSemantico.py',53),
  ('expression -> expression EQUALS expression','expression',3,'p_expression','AnalisisSemantico.py',54),
  ('expression -> expression NOTEQUALS expression','expression',3,'p_expression','AnalisisSemantico.py',55),
  ('expression -> expression AND expression','expression',3,'p_expression','AnalisisSemantico.py',56),
  ('expression -> expression OR expression','expression',3,'p_expression','AnalisisSemantico.py',57),
  ('expression -> expression COMMA expression','expression',3,'p_expression','AnalisisSemantico.py',58),
  ('expression -> expression COLON expression','expression',3,'p_expression','AnalisisSemantico.py',59),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','AnalisisSemantico.py',60),
  ('expression -> NOT expression','expression',2,'p_expression','AnalisisSemantico.py',61),
  ('expression -> VARIABLE','expression',1,'p_expression','AnalisisSemantico.py',62),
  ('expression -> type','expression',1,'p_expression','AnalisisSemantico.py',63),
  ('expression -> comparacion','expression',1,'p_expression','AnalisisSemantico.py',64),
  ('expression -> boolean_expresion','expression',1,'p_expression','AnalisisSemantico.py',65),
  ('assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING','assignment_to_type',6,'p_assignment_to_type','AnalisisSemantico.py',74),
  ('assignment_to_type -> variable_declarator VARIABLE COLON integer_options ASSIGN NUMBER','assignment_to_type',6,'p_assignment_to_type','AnalisisSemantico.py',75),
  ('assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE','assignment_to_type',6,'p_assignment_to_type','AnalisisSemantico.py',76),
  ('assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE','assignment_to_type',6,'p_assignment_to_type','AnalisisSemantico.py',77),
  ('assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL','assignment_to_type',6,'p_assignment_to_type','AnalisisSemantico.py',78),
  ('assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET','assignment_to_type_collection',10,'p_assignment_to_type_collection','AnalisisSemantico.py',85),
  ('assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET','assignment_to_type_collection',10,'p_assignment_to_type_collection','AnalisisSemantico.py',86),
  ('assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET','assignment_to_type_collection',10,'p_assignment_to_type_collection','AnalisisSemantico.py',87),
  ('assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET','assignment_to_type_collection',10,'p_assignment_to_type_collection','AnalisisSemantico.py',88),
  ('integer_options -> INTEGER','integer_options',1,'p_integer_options','AnalisisSemantico.py',92),
  ('integer_options -> INT','integer_options',1,'p_integer_options','AnalisisSemantico.py',93),
  ('mul_integuer -> mul_integuer COMMA NUMBER','mul_integuer',3,'p_mul_integuer','AnalisisSemantico.py',96),
  ('mul_integuer -> NUMBER','mul_integuer',1,'p_mul_integuer','AnalisisSemantico.py',97),
  ('mul_string -> mul_string COMMA WSTRING','mul_string',3,'p_mul_string','AnalisisSemantico.py',100),
  ('mul_string -> WSTRING','mul_string',1,'p_mul_string','AnalisisSemantico.py',101),
  ('mul_booleano -> mul_booleano COMMA boolean_option','mul_booleano',3,'p_mul_booleano','AnalisisSemantico.py',105),
  ('mul_booleano -> boolean_option','mul_booleano',1,'p_mul_booleano','AnalisisSemantico.py',106),
  ('boolean_option -> TRUE','boolean_option',1,'p_boolean_option','AnalisisSemantico.py',110),
  ('boolean_option -> FALSE','boolean_option',1,'p_boolean_option','AnalisisSemantico.py',111),
  ('mul_float -> mul_float COMMA DECIMAL','mul_float',3,'p_mul_float','AnalisisSemantico.py',114),
  ('mul_float -> DECIMAL','mul_float',1,'p_mul_float','AnalisisSemantico.py',115),
  ('comparacion -> VARIABLE operadorComp VARIABLE','comparacion',3,'p_comparacion','AnalisisSemantico.py',122),
  ('comparacion -> DECIMAL operadorComp DECIMAL','comparacion',3,'p_comparacion','AnalisisSemantico.py',123),
  ('comparacion -> WSTRING operadorComp WSTRING','comparacion',3,'p_comparacion','AnalisisSemantico.py',124),
  ('comparacion -> NUMBER operadorComp NUMBER','comparacion',3,'p_comparacion','AnalisisSemantico.py',125),
  ('comparacion -> VARIABLE operadorComp DECIMAL','comparacion',3,'p_comparacion','AnalisisSemantico.py',126),
  ('comparacion -> DECIMAL operadorComp VARIABLE','comparacion',3,'p_comparacion','AnalisisSemantico.py',127),
  ('comparacion -> WSTRING operadorComp VARIABLE','comparacion',3,'p_comparacion','AnalisisSemantico.py',128),
  ('comparacion -> VARIABLE operadorComp WSTRING','comparacion',3,'p_comparacion','AnalisisSemantico.py',129),
  ('comparacion -> NUMBER operadorComp VARIABLE','comparacion',3,'p_comparacion','AnalisisSemantico.py',130),
  ('comparacion -> VARIABLE operadorComp NUMBER','comparacion',3,'p_comparacion','AnalisisSemantico.py',131),
  ('operadorComp -> GREATERTHAN','operadorComp',1,'p_operadorComp','AnalisisSemantico.py',136),
  ('operadorComp -> LESSTHAN','operadorComp',1,'p_operadorComp','AnalisisSemantico.py',137),
  ('operadorComp -> EQUALS','operadorComp',1,'p_operadorComp','AnalisisSemantico.py',138),
  ('operadorComp -> NOTEQUALS','operadorComp',1,'p_operadorComp','AnalisisSemantico.py',139),
  ('ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES','ifComp',7,'p_ifComp','AnalisisSemantico.py',146),
  ('ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES','ifComp',11,'p_ifComp','AnalisisSemantico.py',147),
  ('type -> TRUE','type',1,'p_type','AnalisisSemantico.py',154),
  ('type -> FALSE','type',1,'p_type','AnalisisSemantico.py',155),
  ('type -> DECIMAL','type',1,'p_type','AnalisisSemantico.py',156),
  ('type -> WSTRING','type',1,'p_type','AnalisisSemantico.py',157),
  ('type -> NUMBER','type',1,'p_type','AnalisisSemantico.py',158),
  ('assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET','assignment_to_type_collection_set',11,'p_assignment_to_type_collection_set','AnalisisSemantico.py',164),
  ('assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET','assignment_to_type_collection_set',11,'p_assignment_to_type_collection_set','AnalisisSemantico.py',165),
  ('assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET','assignment_to_type_collection_set',11,'p_assignment_to_type_collection_set','AnalisisSemantico.py',166),
  ('assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET','assignment_to_type_collection_set',11,'p_assignment_to_type_collection_set','AnalisisSemantico.py',167),
  ('boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion','boolean_expresion',6,'p_boolean_expresion','AnalisisSemantico.py',172),
  ('boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN','boolean_expresion',6,'p_boolean_expresion','AnalisisSemantico.py',173),
  ('boolean_expresion -> boolean_option logical_operator boolean_option','boolean_expresion',3,'p_boolean_expresion','AnalisisSemantico.py',174),
  ('boolean_expresion -> logical_operator boolean_option','boolean_expresion',2,'p_boolean_expresion','AnalisisSemantico.py',175),
  ('boolean_expresion -> boolean_option logical_operator','boolean_expresion',2,'p_boolean_expresion','AnalisisSemantico.py',176),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','AnalisisSemantico.py',181),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','AnalisisSemantico.py',182),
  ('import_statement -> IMPORT VARIABLE','import_statement',2,'p_import_statement','AnalisisSemantico.py',188),
  ('for_statement -> FOR VARIABLE IN NUMBER RANGE NUMBER LBRACES statements RBRACES','for_statement',9,'p_for_statement','AnalisisSemantico.py',192),
  ('for_statement -> FOR VARIABLE IN VARIABLE LBRACES statements RBRACES','for_statement',7,'p_for_statement','AnalisisSemantico.py',193),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACES statements RBRACES','while_statement',7,'p_while_statement','AnalisisSemantico.py',197),
  ('while_statement -> REPEAT LBRACES statements RBRACES WHILE LPAREN expression RPAREN','while_statement',8,'p_while_statement','AnalisisSemantico.py',198),
  ('switch_statement -> SWITCH VARIABLE LBRACES caso RBRACES','switch_statement',5,'p_switch_statement','AnalisisSemantico.py',203),
  ('caso -> CASE expression COLON cuerpo_caso caso','caso',5,'p_caso','AnalisisSemantico.py',208),
  ('caso -> CASE expression COLON cuerpo_caso DEFAULT COLON cuerpo_caso','caso',7,'p_caso','AnalisisSemantico.py',209),
  ('cuerpo_caso -> expression','cuerpo_caso',1,'p_cuerpo_caso','AnalisisSemantico.py',214),
  ('cuerpo_caso -> statement','cuerpo_caso',1,'p_cuerpo_caso','AnalisisSemantico.py',215),
  ('functionstatements -> functionstatements functionbody','functionstatements',2,'p_functionstatements','AnalisisSemantico.py',220),
  ('functionstatements -> functionbody','functionstatements',1,'p_functionstatements','AnalisisSemantico.py',221),
  ('functionbody -> assignment_to_type','functionbody',1,'p_functionbody','AnalisisSemantico.py',225),
  ('functionbody -> print_statement','functionbody',1,'p_functionbody','AnalisisSemantico.py',226),
  ('functionbody -> ifComp','functionbody',1,'p_functionbody','AnalisisSemantico.py',227),
  ('functionbody -> while_statement','functionbody',1,'p_functionbody','AnalisisSemantico.py',228),
  ('functionbody -> switch_statement','functionbody',1,'p_functionbody','AnalisisSemantico.py',229),
  ('functionbody -> import_statement','functionbody',1,'p_functionbody','AnalisisSemantico.py',230),
  ('functionbody -> for_statement','functionbody',1,'p_functionbody','AnalisisSemantico.py',231),
  ('functionbody -> empty','functionbody',1,'p_functionbody','AnalisisSemantico.py',232),
  ('functionbody -> comment','functionbody',1,'p_functionbody','AnalisisSemantico.py',233),
  ('function_general -> function_declaration','function_general',1,'p_function_general','AnalisisSemantico.py',238),
  ('function_general -> function_declaration_empty','function_general',1,'p_function_general','AnalisisSemantico.py',239),
  ('function_declaration -> FUNC VARIABLE LPAREN function_parameters RPAREN function_return_type LBRACES functionstatements return_statement RBRACES','function_declaration',10,'p_function_declaration','AnalisisSemantico.py',245),
  ('function_declaration_empty -> FUNC VARIABLE LPAREN empty RPAREN function_return_type LBRACES functionstatements return_statement RBRACES','function_declaration_empty',10,'p_function_declaration_empty','AnalisisSemantico.py',250),
  ('data_type -> INTEGER','data_type',1,'p_data_type','AnalisisSemantico.py',254),
  ('data_type -> STRING','data_type',1,'p_data_type','AnalisisSemantico.py',255),
  ('data_type -> BOOLEAN','data_type',1,'p_data_type','AnalisisSemantico.py',256),
  ('data_type -> DOUBLE','data_type',1,'p_data_type','AnalisisSemantico.py',257),
  ('data_type -> FLOAT','data_type',1,'p_data_type','AnalisisSemantico.py',258),
  ('data_type -> INT','data_type',1,'p_data_type','AnalisisSemantico.py',259),
  ('function_parameters -> function_parameters COMMA VARIABLE COLON data_type','function_parameters',5,'p_function_parameters','AnalisisSemantico.py',263),
  ('function_parameters -> VARIABLE COLON data_type','function_parameters',3,'p_function_parameters','AnalisisSemantico.py',264),
  ('function_return_type -> ARROW data_type','function_return_type',2,'p_function_return_type','AnalisisSemantico.py',270),
  ('function_return_type -> ARROW LPAREN function_parameters RPAREN','function_return_type',4,'p_function_return_type','AnalisisSemantico.py',271),
  ('function_return_type -> empty','function_return_type',1,'p_function_return_type','AnalisisSemantico.py',272),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','AnalisisSemantico.py',276),
  ('function_init -> INIT LPAREN function_parameters RPAREN LBRACES statements RBRACES','function_init',7,'p_function_init','AnalisisSemantico.py',280),
  ('function_init -> INIT LPAREN empty RPAREN LBRACES statements RBRACES','function_init',7,'p_function_init','AnalisisSemantico.py',281),
  ('function_call -> VARIABLE LPAREN function_arguments RPAREN','function_call',4,'p_function_call','AnalisisSemantico.py',285),
  ('function_arguments -> function_arguments COMMA expression','function_arguments',3,'p_function_arguments','AnalisisSemantico.py',289),
  ('function_arguments -> expression','function_arguments',1,'p_function_arguments','AnalisisSemantico.py',290),
  ('function_arguments -> empty','function_arguments',1,'p_function_arguments','AnalisisSemantico.py',291),
  ('empty -> <empty>','empty',0,'p_empty','AnalisisSemantico.py',295),
  ('comment -> COMMENT','comment',1,'p_comment','AnalisisSemantico.py',299),
]
