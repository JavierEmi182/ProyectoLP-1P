
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ARROW ASSIGN BOOL BOOLEAN BREAK CALLMETHOD CASE CHARACTER CLASS COLLECTIONTYPE COLON COMMA COMMENT CONTINUE DECIMAL DEFAULT DICTIONARYTYPE DIVIDE DOUBLE ELSE ENUM EQUALS FALSE FLOAT FOR FUNC GREATERTHAN GUARD IF IMPORT IN INIT INT INTEGER LBRACES LESSTHAN LET LPAREN LSQUAREBRACKET MINUS MINUSONE MULTIPLY NOT NOTEQUALS NUMBER OPTIONALVARIABLE OR PLUS PLUSONE PRINT PRIVATE PUBLIC RANGE RBRACES READLN REPEAT RESIDUE RETURN RPAREN RSQUAREBRACKET SET SETVARIABLE STATIC STRING STRUCT SWITCH TRUE TYPEALIAS VALUESTYPE VAR VARIABLE WHILE WSTRING\n    program : statements\n    \n    statements : statements statement\n               | statement\n    \n    statement : assignment_statement\n              | assignment_statement_type\n              | print_statement\n              | if_statement\n              | function_general\n              | function_call\n              | function_init\n              | while_statement\n              | switch_statement\n              | import_statement\n              | for_statement \n    \n    functionstatements : functionstatements functionbody\n                        | functionbody\n    \n    functionbody : assignment_statement\n                | assignment_statement_type\n                | print_statement\n                | if_statement\n                | while_statement\n                | switch_statement\n                | import_statement\n                | for_statement\n                | empty\n    \n    assignment_statement : variable_declarator VARIABLE ASSIGN expression\n                        |  variable_declarator VARIABLE ASSIGN READLN\n                        | variable_declarator VARIABLE COLON data_collection_type ASSIGN collection_block\n                        | variable_declarator VARIABLE COLON SET ASSIGN collection_block \n                        | variable_declarator VARIABLE COLON DICTIONARYTYPE ASSIGN collection_block\n                        | VARIABLE ASSIGN expression\n                        | VARIABLE ASSIGN READLN\n    \n    assignment_statement_type : variable_declarator VARIABLE COLON data_type\n                                | variable_declarator VARIABLE COLON data_type OPTIONALVARIABLE\n                                | variable_declarator multiple_variables COLON data_type\n                                | variable_declarator VARIABLE COLON data_type ASSIGN expression\n                                | variable_declarator VARIABLE COLON data_type ASSIGN READLN\n                                 \n    \n    multiple_assign : multiple_assign assignment_statement\n                    | assignment_statement\n    \n    import_statement : IMPORT VARIABLE\n    \n    for_statement : FOR VARIABLE IN NUMBER RANGE NUMBER LBRACES statements RBRACES\n                    | FOR VARIABLE IN VARIABLE LBRACES statements RBRACES\n    \n    multiple_variables : multiple_variables COMMA VARIABLE\n                        | VARIABLE\n                        \n    \n    collection_block : LSQUAREBRACKET expression RSQUAREBRACKET\n    \n    print_statement : PRINT LPAREN expression RPAREN\n    \n    if_statement : IF LPAREN expression RPAREN LBRACES statements RBRACES\n                 | IF LPAREN expression RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES\n    \n    while_statement : WHILE LPAREN expression RPAREN LBRACES statements RBRACES\n                    | REPEAT LBRACES statements RBRACES WHILE LPAREN expression RPAREN                   \n    \n    switch_statement : SWITCH VARIABLE LBRACES caso RBRACES\n    \n    caso : CASE expression COLON cuerpo_caso caso\n         | CASE expression COLON cuerpo_caso DEFAULT COLON cuerpo_caso\n    \n    cuerpo_caso : expression \n                | statement\n    \n    function_general : function_declaration\n                    | function_declaration_empty\n                    \n\n    \n    function_declaration : FUNC VARIABLE LPAREN function_parameters RPAREN function_return_type LBRACES functionstatements return_statement RBRACES\n    \n    function_declaration_empty : FUNC VARIABLE LPAREN empty  RPAREN function_return_type LBRACES functionstatements return_statement RBRACES\n    \n    function_parameters : function_parameters COMMA VARIABLE COLON data_type\n                        | VARIABLE COLON data_type\n                        \n    \n    function_return_type : ARROW data_type\n                         | ARROW LPAREN function_parameters RPAREN\n                         | empty\n    \n    return_statement : RETURN expression\n    \n    function_init : INIT LPAREN function_parameters RPAREN LBRACES statements RBRACES\n    \n    variable_declarator : LET\n                        | VAR\n    \n    data_type : INTEGER\n              | STRING\n              | BOOLEAN\n              | DOUBLE\n              | FLOAT\n              | INT\n    \n    data_collection_type : LSQUAREBRACKET INTEGER RSQUAREBRACKET\n                        | LSQUAREBRACKET STRING RSQUAREBRACKET\n                        | LSQUAREBRACKET BOOLEAN RSQUAREBRACKET\n                        | LSQUAREBRACKET DOUBLE RSQUAREBRACKET\n                        | LSQUAREBRACKET INT RSQUAREBRACKET\n    \n    break_statement : BREAK\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression GREATERTHAN expression\n               | expression LESSTHAN expression\n               | expression EQUALS expression\n               | expression NOTEQUALS expression\n               | expression AND expression\n               | expression OR expression\n               | expression COMMA expression\n               | expression COLON expression\n               | LPAREN expression RPAREN\n               | NOT expression\n               | VARIABLE\n               | type\n               | function_call\n               \n    \n    type : TRUE\n        | FALSE\n        | DECIMAL\n        | WSTRING\n        | NUMBER\n    \n    function_call : VARIABLE LPAREN function_arguments RPAREN\n    \n    function_arguments : function_arguments COMMA expression\n                       | expression\n                       | empty\n    \n    empty :\n    '
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,44,47,48,49,50,51,52,53,54,55,56,57,58,59,68,70,71,72,73,77,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,106,111,119,120,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,144,146,148,152,153,154,155,156,157,163,164,166,167,168,169,176,177,179,186,187,188,190,191,192,194,197,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,216,217,220,223,225,226,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,31,-56,-57,40,41,42,-67,-68,43,-2,48,48,48,48,66,48,16,-40,48,86,-95,-31,-32,48,48,-96,-97,-98,-99,-100,-101,-102,16,112,66,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,48,48,48,48,48,48,48,48,48,48,48,48,-94,-103,48,-46,142,48,-34,48,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,16,16,16,-51,16,-28,48,-29,-30,-36,-37,16,16,16,48,184,16,-47,-66,-49,-42,16,198,66,198,-45,-50,16,198,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,198,16,184,-41,-15,48,16,-58,-59,-48,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,30,39,41,48,49,50,53,54,55,56,57,58,59,68,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,144,146,148,152,154,155,156,157,163,164,166,168,169,176,177,179,186,187,188,191,192,194,197,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,216,220,223,225,226,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-56,-57,-2,17,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,17,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,17,17,17,-51,17,-28,-29,-30,-36,-37,17,17,17,17,17,-47,-66,-49,-42,17,17,17,-45,-50,17,17,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,17,17,17,-41,-15,17,-58,-59,-48,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,30,39,41,48,49,50,53,54,55,56,57,58,59,68,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,144,146,148,152,154,155,156,157,163,164,166,168,169,176,177,179,186,187,188,191,192,194,197,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,216,220,223,225,226,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-56,-57,-2,18,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,18,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,18,18,18,-51,18,-28,-29,-30,-36,-37,18,18,18,18,18,-47,-66,-49,-42,18,18,18,-45,-50,18,18,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,18,18,18,-41,-15,18,-58,-59,-48,]),'INIT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,30,39,41,48,49,50,53,54,55,56,57,58,59,68,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,144,146,148,152,154,155,156,157,163,164,166,168,169,176,177,179,186,187,192,194,197,212,213,214,220,223,225,226,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-56,-57,-2,21,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,21,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,21,21,21,-51,21,-28,-29,-30,-36,-37,21,21,21,21,21,-47,-66,-49,-42,21,-45,-50,21,21,21,-41,21,-58,-59,-48,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,30,39,41,48,49,50,53,54,55,56,57,58,59,68,72,73,77,79,80,81,82,83,84,85,100,101,103,109,119,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,144,146,148,152,154,155,156,157,163,164,166,168,169,176,177,179,186,187,188,191,192,194,197,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,216,220,223,225,226,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-56,-57,-2,22,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,22,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,145,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,22,22,22,-51,22,-28,-29,-30,-36,-37,22,22,22,22,22,-47,-66,-49,-42,22,22,22,-45,-50,22,22,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,22,22,22,-41,-15,22,-58,-59,-48,]),'REPEAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,30,39,41,48,49,50,53,54,55,56,57,58,59,68,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,144,146,148,152,154,155,156,157,163,164,166,168,169,176,177,179,186,187,188,191,192,194,197,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,216,220,223,225,226,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-56,-57,-2,23,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,23,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,23,23,23,-51,23,-28,-29,-30,-36,-37,23,23,23,23,23,-47,-66,-49,-42,23,23,23,-45,-50,23,23,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,23,23,23,-41,-15,23,-58,-59,-48,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,30,39,41,48,49,50,53,54,55,56,57,58,59,68,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,144,146,148,152,154,155,156,157,163,164,166,168,169,176,177,179,186,187,188,191,192,194,197,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,216,220,223,225,226,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-56,-57,-2,24,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,24,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,24,24,24,-51,24,-28,-29,-30,-36,-37,24,24,24,24,24,-47,-66,-49,-42,24,24,24,-45,-50,24,24,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,24,24,24,-41,-15,24,-58,-59,-48,]),'IMPORT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,30,39,41,48,49,50,53,54,55,56,57,58,59,68,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,144,146,148,152,154,155,156,157,163,164,166,168,169,176,177,179,186,187,188,191,192,194,197,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,216,220,223,225,226,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-56,-57,-2,25,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,25,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,25,25,25,-51,25,-28,-29,-30,-36,-37,25,25,25,25,25,-47,-66,-49,-42,25,25,25,-45,-50,25,25,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,25,25,25,-41,-15,25,-58,-59,-48,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,30,39,41,48,49,50,53,54,55,56,57,58,59,68,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,144,146,148,152,154,155,156,157,163,164,166,168,169,176,177,179,186,187,188,191,192,194,197,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,216,220,223,225,226,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-56,-57,-2,26,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,26,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,26,26,26,-51,26,-28,-29,-30,-36,-37,26,26,26,26,26,-47,-66,-49,-42,26,26,26,-45,-50,26,26,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,26,26,26,-41,-15,26,-58,-59,-48,]),'LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,30,39,41,48,49,50,53,54,55,56,57,58,59,68,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,144,146,148,152,154,155,156,157,163,164,166,168,169,176,177,179,186,187,188,191,192,194,197,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,216,220,223,225,226,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-56,-57,-2,27,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,27,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,27,27,27,-51,27,-28,-29,-30,-36,-37,27,27,27,27,27,-47,-66,-49,-42,27,27,27,-45,-50,27,27,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,27,27,27,-41,-15,27,-58,-59,-48,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,30,39,41,48,49,50,53,54,55,56,57,58,59,68,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,144,146,148,152,154,155,156,157,163,164,166,168,169,176,177,179,186,187,188,191,192,194,197,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,216,220,223,225,226,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-56,-57,-2,28,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,28,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,28,28,28,-51,28,-28,-29,-30,-36,-37,28,28,28,28,28,-47,-66,-49,-42,28,28,28,-45,-50,28,28,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,28,28,28,-41,-15,28,-58,-59,-48,]),'FUNC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,30,39,41,48,49,50,53,54,55,56,57,58,59,68,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,144,146,148,152,154,155,156,157,163,164,166,168,169,176,177,179,186,187,192,194,197,212,213,214,220,223,225,226,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-56,-57,-2,29,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,29,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,29,29,29,-51,29,-28,-29,-30,-36,-37,29,29,29,29,29,-47,-66,-49,-42,29,-45,-50,29,29,29,-41,29,-58,-59,-48,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,30,41,48,49,50,53,54,55,56,57,58,59,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,146,152,154,155,156,157,176,177,179,186,192,194,214,223,225,226,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-56,-57,-2,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-51,-28,-29,-30,-36,-37,-47,-66,-49,-42,-45,-50,-41,-58,-59,-48,]),'RBRACES':([3,4,5,6,7,8,9,10,11,12,13,14,19,20,30,41,48,49,50,53,54,55,56,57,58,59,68,72,73,77,79,80,81,82,83,84,85,100,101,103,110,119,126,127,128,129,130,131,132,133,134,135,136,137,138,146,152,154,155,156,157,163,164,166,169,176,177,179,183,184,185,186,192,194,195,197,214,215,219,220,221,222,223,224,225,226,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-56,-57,-2,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,109,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,146,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-51,-28,-29,-30,-36,-37,176,177,179,186,-47,-66,-49,-55,-95,-9,-42,-45,-50,-52,214,-41,223,225,226,-54,-53,-58,-65,-59,-48,]),'DEFAULT':([4,5,6,7,8,10,11,12,13,14,19,20,41,48,49,50,53,54,55,56,57,58,59,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,146,152,154,155,156,157,176,177,179,181,182,183,184,185,186,192,194,214,223,225,226,],[-4,-5,-6,-7,-8,-10,-11,-12,-13,-14,-56,-57,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-51,-28,-29,-30,-36,-37,-47,-66,-49,-54,196,-55,-95,-9,-42,-45,-50,-41,-58,-59,-48,]),'CASE':([4,5,6,7,8,10,11,12,13,14,19,20,41,48,49,50,53,54,55,56,57,58,59,69,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,146,152,154,155,156,157,176,177,179,181,182,183,184,185,186,192,194,214,223,225,226,],[-4,-5,-6,-7,-8,-10,-11,-12,-13,-14,-56,-57,-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,111,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-51,-28,-29,-30,-36,-37,-47,-66,-49,-54,111,-55,-95,-9,-42,-45,-50,-41,-58,-59,-48,]),'ASSIGN':([16,31,74,75,76,77,79,80,81,82,83,84,158,159,160,161,162,184,198,],[33,44,116,117,118,120,-69,-70,-71,-72,-74,-73,-75,-76,-77,-78,-79,33,33,]),'LPAREN':([16,17,18,21,22,33,34,35,36,38,43,44,48,51,52,87,88,89,90,91,92,93,94,95,96,97,98,102,111,120,145,153,167,168,172,184,213,217,],[34,35,36,37,38,51,51,51,51,51,71,51,34,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,167,51,51,51,190,34,51,51,]),'LBRACES':([23,40,79,80,81,82,83,84,104,105,108,112,150,151,170,171,173,174,189,193,218,],[39,69,-69,-70,-71,-72,-74,-73,140,141,144,148,-107,-107,187,188,-64,191,-62,212,-63,]),'COLON':([31,32,48,49,53,54,55,56,57,58,59,61,63,64,66,67,72,86,99,100,101,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,147,156,175,180,181,184,185,196,221,224,],[45,46,-95,98,-96,-97,-98,-99,-100,-101,-102,98,98,98,107,98,98,-43,98,98,-103,98,98,98,98,98,98,98,98,98,98,98,98,-93,98,165,168,98,98,98,98,-95,-97,213,98,98,]),'COMMA':([31,32,34,48,49,53,54,55,56,57,58,59,60,61,62,63,64,65,67,72,79,80,81,82,83,84,86,99,100,101,114,126,127,128,129,130,131,132,133,134,135,136,137,138,139,143,147,156,175,178,180,181,184,185,210,221,224,],[-44,47,-107,-95,97,-96,-97,-98,-99,-100,-101,-102,102,97,-106,97,97,106,97,97,-69,-70,-71,-72,-74,-73,-43,97,97,-103,106,97,97,97,97,97,97,97,97,97,97,97,97,-93,97,-61,97,97,97,-60,97,97,-95,-97,106,97,97,]),'READLN':([33,44,120,],[50,73,157,]),'NOT':([33,34,35,36,38,44,51,52,87,88,89,90,91,92,93,94,95,96,97,98,102,111,120,153,167,168,213,217,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'TRUE':([33,34,35,36,38,44,51,52,87,88,89,90,91,92,93,94,95,96,97,98,102,111,120,153,167,168,213,217,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'FALSE':([33,34,35,36,38,44,51,52,87,88,89,90,91,92,93,94,95,96,97,98,102,111,120,153,167,168,213,217,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'DECIMAL':([33,34,35,36,38,44,51,52,87,88,89,90,91,92,93,94,95,96,97,98,102,111,120,153,167,168,213,217,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'WSTRING':([33,34,35,36,38,44,51,52,87,88,89,90,91,92,93,94,95,96,97,98,102,111,120,153,167,168,213,217,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'NUMBER':([33,34,35,36,38,44,51,52,70,87,88,89,90,91,92,93,94,95,96,97,98,102,111,120,149,153,167,168,213,217,],[59,59,59,59,59,59,59,59,113,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,170,59,59,59,59,59,]),'RPAREN':([34,48,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,79,80,81,82,83,84,99,100,101,114,115,126,127,128,129,130,131,132,133,134,135,136,137,138,139,143,178,180,210,],[-107,-95,-96,-97,-98,-99,-100,-101,-102,101,-105,-106,103,104,105,108,-107,-69,-70,-71,-72,-74,-73,138,-94,-103,150,151,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-104,-61,-60,194,218,]),'RETURN':([41,48,49,50,53,54,55,56,57,58,59,72,73,77,79,80,81,82,83,84,85,100,101,103,119,126,127,128,129,130,131,132,133,134,135,136,137,138,146,152,154,155,156,157,176,179,186,188,191,192,194,199,200,201,202,203,204,205,206,207,208,209,211,214,216,226,],[-40,-95,-31,-32,-96,-97,-98,-99,-100,-101,-102,-26,-27,-33,-69,-70,-71,-72,-74,-73,-35,-94,-103,-46,-34,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-51,-28,-29,-30,-36,-37,-47,-49,-42,-107,-107,-45,-50,217,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,217,-41,-15,-48,]),'IN':([42,],[70,]),'SET':([45,],[75,]),'DICTIONARYTYPE':([45,],[76,]),'LSQUAREBRACKET':([45,116,117,118,],[78,153,153,153,]),'INTEGER':([45,46,78,107,165,172,],[79,79,121,79,79,79,]),'STRING':([45,46,78,107,165,172,],[80,80,122,80,80,80,]),'BOOLEAN':([45,46,78,107,165,172,],[81,81,123,81,81,81,]),'DOUBLE':([45,46,78,107,165,172,],[82,82,124,82,82,82,]),'FLOAT':([45,46,107,165,172,],[84,84,84,84,84,]),'INT':([45,46,78,107,165,172,],[83,83,125,83,83,83,]),'PLUS':([48,49,53,54,55,56,57,58,59,61,63,64,67,72,99,100,101,126,127,128,129,130,131,132,133,134,135,136,137,138,139,147,156,175,180,181,184,185,221,224,],[-95,87,-96,-97,-98,-99,-100,-101,-102,87,87,87,87,87,87,87,-103,87,87,87,87,87,87,87,87,87,87,87,87,-93,87,87,87,87,87,87,-95,-97,87,87,]),'MINUS':([48,49,53,54,55,56,57,58,59,61,63,64,67,72,99,100,101,126,127,128,129,130,131,132,133,134,135,136,137,138,139,147,156,175,180,181,184,185,221,224,],[-95,88,-96,-97,-98,-99,-100,-101,-102,88,88,88,88,88,88,88,-103,88,88,88,88,88,88,88,88,88,88,88,88,-93,88,88,88,88,88,88,-95,-97,88,88,]),'MULTIPLY':([48,49,53,54,55,56,57,58,59,61,63,64,67,72,99,100,101,126,127,128,129,130,131,132,133,134,135,136,137,138,139,147,156,175,180,181,184,185,221,224,],[-95,89,-96,-97,-98,-99,-100,-101,-102,89,89,89,89,89,89,89,-103,89,89,89,89,89,89,89,89,89,89,89,89,-93,89,89,89,89,89,89,-95,-97,89,89,]),'DIVIDE':([48,49,53,54,55,56,57,58,59,61,63,64,67,72,99,100,101,126,127,128,129,130,131,132,133,134,135,136,137,138,139,147,156,175,180,181,184,185,221,224,],[-95,90,-96,-97,-98,-99,-100,-101,-102,90,90,90,90,90,90,90,-103,90,90,90,90,90,90,90,90,90,90,90,90,-93,90,90,90,90,90,90,-95,-97,90,90,]),'GREATERTHAN':([48,49,53,54,55,56,57,58,59,61,63,64,67,72,99,100,101,126,127,128,129,130,131,132,133,134,135,136,137,138,139,147,156,175,180,181,184,185,221,224,],[-95,91,-96,-97,-98,-99,-100,-101,-102,91,91,91,91,91,91,91,-103,91,91,91,91,91,91,91,91,91,91,91,91,-93,91,91,91,91,91,91,-95,-97,91,91,]),'LESSTHAN':([48,49,53,54,55,56,57,58,59,61,63,64,67,72,99,100,101,126,127,128,129,130,131,132,133,134,135,136,137,138,139,147,156,175,180,181,184,185,221,224,],[-95,92,-96,-97,-98,-99,-100,-101,-102,92,92,92,92,92,92,92,-103,92,92,92,92,92,92,92,92,92,92,92,92,-93,92,92,92,92,92,92,-95,-97,92,92,]),'EQUALS':([48,49,53,54,55,56,57,58,59,61,63,64,67,72,99,100,101,126,127,128,129,130,131,132,133,134,135,136,137,138,139,147,156,175,180,181,184,185,221,224,],[-95,93,-96,-97,-98,-99,-100,-101,-102,93,93,93,93,93,93,93,-103,93,93,93,93,93,93,93,93,93,93,93,93,-93,93,93,93,93,93,93,-95,-97,93,93,]),'NOTEQUALS':([48,49,53,54,55,56,57,58,59,61,63,64,67,72,99,100,101,126,127,128,129,130,131,132,133,134,135,136,137,138,139,147,156,175,180,181,184,185,221,224,],[-95,94,-96,-97,-98,-99,-100,-101,-102,94,94,94,94,94,94,94,-103,94,94,94,94,94,94,94,94,94,94,94,94,-93,94,94,94,94,94,94,-95,-97,94,94,]),'AND':([48,49,53,54,55,56,57,58,59,61,63,64,67,72,99,100,101,126,127,128,129,130,131,132,133,134,135,136,137,138,139,147,156,175,180,181,184,185,221,224,],[-95,95,-96,-97,-98,-99,-100,-101,-102,95,95,95,95,95,95,95,-103,95,95,95,95,95,95,95,95,95,95,95,95,-93,95,95,95,95,95,95,-95,-97,95,95,]),'OR':([48,49,53,54,55,56,57,58,59,61,63,64,67,72,99,100,101,126,127,128,129,130,131,132,133,134,135,136,137,138,139,147,156,175,180,181,184,185,221,224,],[-95,96,-96,-97,-98,-99,-100,-101,-102,96,96,96,96,96,96,96,-103,96,96,96,96,96,96,96,96,96,96,96,96,-93,96,96,96,96,96,96,-95,-97,96,96,]),'RSQUAREBRACKET':([48,53,54,55,56,57,58,59,100,101,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,175,],[-95,-96,-97,-98,-99,-100,-101,-102,-94,-103,158,159,160,161,162,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,192,]),'OPTIONALVARIABLE':([77,79,80,81,82,83,84,],[119,-69,-70,-71,-72,-74,-73,]),'RANGE':([113,],[149,]),'ARROW':([150,151,],[172,172,]),'ELSE':([176,],[193,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,39,140,141,144,148,187,212,],[2,68,163,164,166,169,197,220,]),'statement':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,197,212,213,220,],[3,30,3,30,3,3,3,3,30,30,30,183,30,3,30,3,183,30,]),'assignment_statement':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,188,191,197,199,211,212,213,220,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,201,201,4,201,201,4,4,4,]),'assignment_statement_type':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,188,191,197,199,211,212,213,220,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,202,202,5,202,202,5,5,5,]),'print_statement':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,188,191,197,199,211,212,213,220,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,203,203,6,203,203,6,6,6,]),'if_statement':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,188,191,197,199,211,212,213,220,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,204,204,7,204,204,7,7,7,]),'function_general':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,197,212,213,220,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'function_call':([0,2,33,34,35,36,38,39,44,51,52,68,87,88,89,90,91,92,93,94,95,96,97,98,102,111,120,140,141,144,148,153,163,164,166,167,168,169,187,197,212,213,217,220,],[9,9,54,54,54,54,54,9,54,54,54,9,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,9,9,9,9,54,9,9,9,54,185,9,9,9,9,185,54,9,]),'function_init':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,197,212,213,220,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'while_statement':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,188,191,197,199,211,212,213,220,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,205,205,11,205,205,11,11,11,]),'switch_statement':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,188,191,197,199,211,212,213,220,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,206,206,12,206,206,12,12,12,]),'import_statement':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,188,191,197,199,211,212,213,220,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,207,207,13,207,207,13,13,13,]),'for_statement':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,188,191,197,199,211,212,213,220,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,208,208,14,208,208,14,14,14,]),'variable_declarator':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,188,191,197,199,211,212,213,220,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'function_declaration':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,197,212,213,220,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'function_declaration_empty':([0,2,39,68,140,141,144,148,163,164,166,168,169,187,197,212,213,220,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'multiple_variables':([15,],[32,]),'expression':([33,34,35,36,38,44,51,52,87,88,89,90,91,92,93,94,95,96,97,98,102,111,120,153,167,168,213,217,],[49,61,63,64,67,72,99,100,126,127,128,129,130,131,132,133,134,135,136,137,139,147,156,175,180,181,221,224,]),'type':([33,34,35,36,38,44,51,52,87,88,89,90,91,92,93,94,95,96,97,98,102,111,120,153,167,168,213,217,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'function_arguments':([34,],[60,]),'empty':([34,71,150,151,188,191,199,211,],[62,115,173,173,209,209,209,209,]),'function_parameters':([37,71,190,],[65,114,210,]),'data_collection_type':([45,],[74,]),'data_type':([45,46,107,165,172,],[77,85,143,178,189,]),'caso':([69,182,],[110,195,]),'collection_block':([116,117,118,],[152,154,155,]),'function_return_type':([150,151,],[171,174,]),'cuerpo_caso':([168,213,],[182,222,]),'functionstatements':([188,191,],[199,211,]),'functionbody':([188,191,199,211,],[200,200,216,216,]),'return_statement':([199,211,],[215,219,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','AnalisisSintactico.py',9),
  ('statements -> statements statement','statements',2,'p_statements','AnalisisSintactico.py',14),
  ('statements -> statement','statements',1,'p_statements','AnalisisSintactico.py',15),
  ('statement -> assignment_statement','statement',1,'p_statement','AnalisisSintactico.py',21),
  ('statement -> assignment_statement_type','statement',1,'p_statement','AnalisisSintactico.py',22),
  ('statement -> print_statement','statement',1,'p_statement','AnalisisSintactico.py',23),
  ('statement -> if_statement','statement',1,'p_statement','AnalisisSintactico.py',24),
  ('statement -> function_general','statement',1,'p_statement','AnalisisSintactico.py',25),
  ('statement -> function_call','statement',1,'p_statement','AnalisisSintactico.py',26),
  ('statement -> function_init','statement',1,'p_statement','AnalisisSintactico.py',27),
  ('statement -> while_statement','statement',1,'p_statement','AnalisisSintactico.py',28),
  ('statement -> switch_statement','statement',1,'p_statement','AnalisisSintactico.py',29),
  ('statement -> import_statement','statement',1,'p_statement','AnalisisSintactico.py',30),
  ('statement -> for_statement','statement',1,'p_statement','AnalisisSintactico.py',31),
  ('functionstatements -> functionstatements functionbody','functionstatements',2,'p_functionstatements','AnalisisSintactico.py',36),
  ('functionstatements -> functionbody','functionstatements',1,'p_functionstatements','AnalisisSintactico.py',37),
  ('functionbody -> assignment_statement','functionbody',1,'p_functionbody','AnalisisSintactico.py',41),
  ('functionbody -> assignment_statement_type','functionbody',1,'p_functionbody','AnalisisSintactico.py',42),
  ('functionbody -> print_statement','functionbody',1,'p_functionbody','AnalisisSintactico.py',43),
  ('functionbody -> if_statement','functionbody',1,'p_functionbody','AnalisisSintactico.py',44),
  ('functionbody -> while_statement','functionbody',1,'p_functionbody','AnalisisSintactico.py',45),
  ('functionbody -> switch_statement','functionbody',1,'p_functionbody','AnalisisSintactico.py',46),
  ('functionbody -> import_statement','functionbody',1,'p_functionbody','AnalisisSintactico.py',47),
  ('functionbody -> for_statement','functionbody',1,'p_functionbody','AnalisisSintactico.py',48),
  ('functionbody -> empty','functionbody',1,'p_functionbody','AnalisisSintactico.py',49),
  ('assignment_statement -> variable_declarator VARIABLE ASSIGN expression','assignment_statement',4,'p_assignment_statement','AnalisisSintactico.py',54),
  ('assignment_statement -> variable_declarator VARIABLE ASSIGN READLN','assignment_statement',4,'p_assignment_statement','AnalisisSintactico.py',55),
  ('assignment_statement -> variable_declarator VARIABLE COLON data_collection_type ASSIGN collection_block','assignment_statement',6,'p_assignment_statement','AnalisisSintactico.py',56),
  ('assignment_statement -> variable_declarator VARIABLE COLON SET ASSIGN collection_block','assignment_statement',6,'p_assignment_statement','AnalisisSintactico.py',57),
  ('assignment_statement -> variable_declarator VARIABLE COLON DICTIONARYTYPE ASSIGN collection_block','assignment_statement',6,'p_assignment_statement','AnalisisSintactico.py',58),
  ('assignment_statement -> VARIABLE ASSIGN expression','assignment_statement',3,'p_assignment_statement','AnalisisSintactico.py',59),
  ('assignment_statement -> VARIABLE ASSIGN READLN','assignment_statement',3,'p_assignment_statement','AnalisisSintactico.py',60),
  ('assignment_statement_type -> variable_declarator VARIABLE COLON data_type','assignment_statement_type',4,'p_assignment_statement_type','AnalisisSintactico.py',64),
  ('assignment_statement_type -> variable_declarator VARIABLE COLON data_type OPTIONALVARIABLE','assignment_statement_type',5,'p_assignment_statement_type','AnalisisSintactico.py',65),
  ('assignment_statement_type -> variable_declarator multiple_variables COLON data_type','assignment_statement_type',4,'p_assignment_statement_type','AnalisisSintactico.py',66),
  ('assignment_statement_type -> variable_declarator VARIABLE COLON data_type ASSIGN expression','assignment_statement_type',6,'p_assignment_statement_type','AnalisisSintactico.py',67),
  ('assignment_statement_type -> variable_declarator VARIABLE COLON data_type ASSIGN READLN','assignment_statement_type',6,'p_assignment_statement_type','AnalisisSintactico.py',68),
  ('multiple_assign -> multiple_assign assignment_statement','multiple_assign',2,'p_multiple_assign','AnalisisSintactico.py',73),
  ('multiple_assign -> assignment_statement','multiple_assign',1,'p_multiple_assign','AnalisisSintactico.py',74),
  ('import_statement -> IMPORT VARIABLE','import_statement',2,'p_import_statement','AnalisisSintactico.py',78),
  ('for_statement -> FOR VARIABLE IN NUMBER RANGE NUMBER LBRACES statements RBRACES','for_statement',9,'p_for_statement','AnalisisSintactico.py',82),
  ('for_statement -> FOR VARIABLE IN VARIABLE LBRACES statements RBRACES','for_statement',7,'p_for_statement','AnalisisSintactico.py',83),
  ('multiple_variables -> multiple_variables COMMA VARIABLE','multiple_variables',3,'p_multiple_variables','AnalisisSintactico.py',89),
  ('multiple_variables -> VARIABLE','multiple_variables',1,'p_multiple_variables','AnalisisSintactico.py',90),
  ('collection_block -> LSQUAREBRACKET expression RSQUAREBRACKET','collection_block',3,'p_collection_block','AnalisisSintactico.py',97),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','AnalisisSintactico.py',101),
  ('if_statement -> IF LPAREN expression RPAREN LBRACES statements RBRACES','if_statement',7,'p_if_statement','AnalisisSintactico.py',107),
  ('if_statement -> IF LPAREN expression RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES','if_statement',11,'p_if_statement','AnalisisSintactico.py',108),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACES statements RBRACES','while_statement',7,'p_while_statement','AnalisisSintactico.py',113),
  ('while_statement -> REPEAT LBRACES statements RBRACES WHILE LPAREN expression RPAREN','while_statement',8,'p_while_statement','AnalisisSintactico.py',114),
  ('switch_statement -> SWITCH VARIABLE LBRACES caso RBRACES','switch_statement',5,'p_switch_statement','AnalisisSintactico.py',119),
  ('caso -> CASE expression COLON cuerpo_caso caso','caso',5,'p_caso','AnalisisSintactico.py',124),
  ('caso -> CASE expression COLON cuerpo_caso DEFAULT COLON cuerpo_caso','caso',7,'p_caso','AnalisisSintactico.py',125),
  ('cuerpo_caso -> expression','cuerpo_caso',1,'p_cuerpo_caso','AnalisisSintactico.py',130),
  ('cuerpo_caso -> statement','cuerpo_caso',1,'p_cuerpo_caso','AnalisisSintactico.py',131),
  ('function_general -> function_declaration','function_general',1,'p_function_general','AnalisisSintactico.py',136),
  ('function_general -> function_declaration_empty','function_general',1,'p_function_general','AnalisisSintactico.py',137),
  ('function_declaration -> FUNC VARIABLE LPAREN function_parameters RPAREN function_return_type LBRACES functionstatements return_statement RBRACES','function_declaration',10,'p_function_declaration','AnalisisSintactico.py',143),
  ('function_declaration_empty -> FUNC VARIABLE LPAREN empty RPAREN function_return_type LBRACES functionstatements return_statement RBRACES','function_declaration_empty',10,'p_function_declaration_empty','AnalisisSintactico.py',148),
  ('function_parameters -> function_parameters COMMA VARIABLE COLON data_type','function_parameters',5,'p_function_parameters','AnalisisSintactico.py',153),
  ('function_parameters -> VARIABLE COLON data_type','function_parameters',3,'p_function_parameters','AnalisisSintactico.py',154),
  ('function_return_type -> ARROW data_type','function_return_type',2,'p_function_return_type','AnalisisSintactico.py',160),
  ('function_return_type -> ARROW LPAREN function_parameters RPAREN','function_return_type',4,'p_function_return_type','AnalisisSintactico.py',161),
  ('function_return_type -> empty','function_return_type',1,'p_function_return_type','AnalisisSintactico.py',162),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','AnalisisSintactico.py',166),
  ('function_init -> INIT LPAREN function_parameters RPAREN LBRACES statements RBRACES','function_init',7,'p_function_init','AnalisisSintactico.py',170),
  ('variable_declarator -> LET','variable_declarator',1,'p_variable_declarator','AnalisisSintactico.py',174),
  ('variable_declarator -> VAR','variable_declarator',1,'p_variable_declarator','AnalisisSintactico.py',175),
  ('data_type -> INTEGER','data_type',1,'p_data_type','AnalisisSintactico.py',179),
  ('data_type -> STRING','data_type',1,'p_data_type','AnalisisSintactico.py',180),
  ('data_type -> BOOLEAN','data_type',1,'p_data_type','AnalisisSintactico.py',181),
  ('data_type -> DOUBLE','data_type',1,'p_data_type','AnalisisSintactico.py',182),
  ('data_type -> FLOAT','data_type',1,'p_data_type','AnalisisSintactico.py',183),
  ('data_type -> INT','data_type',1,'p_data_type','AnalisisSintactico.py',184),
  ('data_collection_type -> LSQUAREBRACKET INTEGER RSQUAREBRACKET','data_collection_type',3,'p_data_collection_type','AnalisisSintactico.py',189),
  ('data_collection_type -> LSQUAREBRACKET STRING RSQUAREBRACKET','data_collection_type',3,'p_data_collection_type','AnalisisSintactico.py',190),
  ('data_collection_type -> LSQUAREBRACKET BOOLEAN RSQUAREBRACKET','data_collection_type',3,'p_data_collection_type','AnalisisSintactico.py',191),
  ('data_collection_type -> LSQUAREBRACKET DOUBLE RSQUAREBRACKET','data_collection_type',3,'p_data_collection_type','AnalisisSintactico.py',192),
  ('data_collection_type -> LSQUAREBRACKET INT RSQUAREBRACKET','data_collection_type',3,'p_data_collection_type','AnalisisSintactico.py',193),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement','AnalisisSintactico.py',198),
  ('expression -> expression PLUS expression','expression',3,'p_expression','AnalisisSintactico.py',204),
  ('expression -> expression MINUS expression','expression',3,'p_expression','AnalisisSintactico.py',205),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','AnalisisSintactico.py',206),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','AnalisisSintactico.py',207),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression','AnalisisSintactico.py',208),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression','AnalisisSintactico.py',209),
  ('expression -> expression EQUALS expression','expression',3,'p_expression','AnalisisSintactico.py',210),
  ('expression -> expression NOTEQUALS expression','expression',3,'p_expression','AnalisisSintactico.py',211),
  ('expression -> expression AND expression','expression',3,'p_expression','AnalisisSintactico.py',212),
  ('expression -> expression OR expression','expression',3,'p_expression','AnalisisSintactico.py',213),
  ('expression -> expression COMMA expression','expression',3,'p_expression','AnalisisSintactico.py',214),
  ('expression -> expression COLON expression','expression',3,'p_expression','AnalisisSintactico.py',215),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','AnalisisSintactico.py',216),
  ('expression -> NOT expression','expression',2,'p_expression','AnalisisSintactico.py',217),
  ('expression -> VARIABLE','expression',1,'p_expression','AnalisisSintactico.py',218),
  ('expression -> type','expression',1,'p_expression','AnalisisSintactico.py',219),
  ('expression -> function_call','expression',1,'p_expression','AnalisisSintactico.py',220),
  ('type -> TRUE','type',1,'p_type','AnalisisSintactico.py',225),
  ('type -> FALSE','type',1,'p_type','AnalisisSintactico.py',226),
  ('type -> DECIMAL','type',1,'p_type','AnalisisSintactico.py',227),
  ('type -> WSTRING','type',1,'p_type','AnalisisSintactico.py',228),
  ('type -> NUMBER','type',1,'p_type','AnalisisSintactico.py',229),
  ('function_call -> VARIABLE LPAREN function_arguments RPAREN','function_call',4,'p_function_call','AnalisisSintactico.py',234),
  ('function_arguments -> function_arguments COMMA expression','function_arguments',3,'p_function_arguments','AnalisisSintactico.py',238),
  ('function_arguments -> expression','function_arguments',1,'p_function_arguments','AnalisisSintactico.py',239),
  ('function_arguments -> empty','function_arguments',1,'p_function_arguments','AnalisisSintactico.py',240),
  ('empty -> <empty>','empty',0,'p_empty','AnalisisSintactico.py',244),
]
