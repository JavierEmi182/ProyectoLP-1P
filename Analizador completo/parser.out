Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    ARROW
    BREAK
    CALLMETHOD
    CASE
    CHARACTER
    CLASS
    COLLECTIONTYPE
    COMMENT
    CONTINUE
    DEFAULT
    DICTIONARYTYPE
    DOUBLE
    ENUM
    FOR
    FUNC
    GUARD
    IMPORT
    IN
    INIT
    MINUSONE
    OPTIONALVARIABLE
    PLUSONE
    PRIVATE
    PUBLIC
    RANGE
    REPEAT
    RETURN
    SET
    SETVARIABLE
    STATIC
    STRUCT
    SWITCH
    TYPEALIAS
    VALUESTYPE
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> assignment_to_type
Rule 5     statement -> assignment_to_type_collection
Rule 6     statement -> variable_declarator VARIABLE ASSIGN expression
Rule 7     statement -> ifComp
Rule 8     statement -> print_statement
Rule 9     variable_declarator -> LET
Rule 10    variable_declarator -> VAR
Rule 11    print_statement -> PRINT LPAREN expression RPAREN
Rule 12    expression -> expression PLUS expression
Rule 13    expression -> expression MINUS expression
Rule 14    expression -> expression MULTIPLY expression
Rule 15    expression -> expression DIVIDE expression
Rule 16    expression -> expression GREATERTHAN expression
Rule 17    expression -> expression LESSTHAN expression
Rule 18    expression -> expression EQUALS expression
Rule 19    expression -> expression NOTEQUALS expression
Rule 20    expression -> expression AND expression
Rule 21    expression -> expression OR expression
Rule 22    expression -> expression COMMA expression
Rule 23    expression -> expression COLON expression
Rule 24    expression -> LPAREN expression RPAREN
Rule 25    expression -> NOT expression
Rule 26    expression -> VARIABLE
Rule 27    expression -> type
Rule 28    expression -> comparacion
Rule 29    assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
Rule 30    assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
Rule 31    assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
Rule 32    assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
Rule 33    assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
Rule 34    assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
Rule 35    assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
Rule 36    assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
Rule 37    assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
Rule 38    integer_options -> INTEGER
Rule 39    integer_options -> INT
Rule 40    mul_integuer -> mul_integuer COMMA NUMBER
Rule 41    mul_integuer -> NUMBER
Rule 42    mul_string -> mul_string COMMA WSTRING
Rule 43    mul_string -> WSTRING
Rule 44    mul_booleano -> mul_booleano COMMA boolean_option
Rule 45    mul_booleano -> boolean_option
Rule 46    boolean_option -> TRUE
Rule 47    boolean_option -> FALSE
Rule 48    mul_float -> mul_float COMMA DECIMAL
Rule 49    mul_float -> DECIMAL
Rule 50    comparacion -> VARIABLE operadorComp VARIABLE
Rule 51    comparacion -> DECIMAL operadorComp DECIMAL
Rule 52    comparacion -> WSTRING operadorComp WSTRING
Rule 53    comparacion -> NUMBER operadorComp NUMBER
Rule 54    comparacion -> VARIABLE operadorComp DECIMAL
Rule 55    comparacion -> DECIMAL operadorComp VARIABLE
Rule 56    comparacion -> WSTRING operadorComp VARIABLE
Rule 57    comparacion -> VARIABLE operadorComp WSTRING
Rule 58    comparacion -> NUMBER operadorComp VARIABLE
Rule 59    comparacion -> VARIABLE operadorComp NUMBER
Rule 60    operadorComp -> GREATERTHAN
Rule 61    operadorComp -> LESSTHAN
Rule 62    operadorComp -> EQUALS
Rule 63    operadorComp -> NOTEQUALS
Rule 64    ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES
Rule 65    ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
Rule 66    type -> BOOL
Rule 67    type -> DECIMAL
Rule 68    type -> WSTRING
Rule 69    type -> NUMBER

Terminals, with rules where they appear

AND                  : 20
ARRAY                : 
ARROW                : 
ASSIGN               : 6 29 30 31 32 33 34 35 36 37
BOOL                 : 66
BOOLEAN              : 31 32 36
BREAK                : 
CALLMETHOD           : 
CASE                 : 
CHARACTER            : 
CLASS                : 
COLLECTIONTYPE       : 
COLON                : 23 29 30 31 32 33 34 35 36 37
COMMA                : 22 40 42 44 48
COMMENT              : 
CONTINUE             : 
DECIMAL              : 33 48 49 51 51 54 55 67
DEFAULT              : 
DICTIONARYTYPE       : 
DIVIDE               : 15
DOUBLE               : 
ELSE                 : 65
ENUM                 : 
EQUALS               : 18 62
FALSE                : 32 47
FLOAT                : 33 37
FOR                  : 
FUNC                 : 
GREATERTHAN          : 16 60
GUARD                : 
IF                   : 64 65
IMPORT               : 
IN                   : 
INIT                 : 
INT                  : 39
INTEGER              : 30 38
LBRACES              : 64 65 65
LESSTHAN             : 17 61
LET                  : 9
LPAREN               : 11 24 64 65
LSQUAREBRACKET       : 34 34 35 35 36 36 37 37
MINUS                : 13
MINUSONE             : 
MULTIPLY             : 14
NOT                  : 25
NOTEQUALS            : 19 63
NUMBER               : 30 40 41 53 53 58 59 69
OPTIONALVARIABLE     : 
OR                   : 21
PLUS                 : 12
PLUSONE              : 
PRINT                : 11
PRIVATE              : 
PUBLIC               : 
RANGE                : 
RBRACES              : 64 65 65
REPEAT               : 
RETURN               : 
RPAREN               : 11 24 64 65
RSQUAREBRACKET       : 34 34 35 35 36 36 37 37
SET                  : 
SETVARIABLE          : 
STATIC               : 
STRING               : 29 35
STRUCT               : 
SWITCH               : 
TRUE                 : 31 46
TYPEALIAS            : 
VALUESTYPE           : 
VAR                  : 10
VARIABLE             : 6 26 29 30 31 32 33 34 35 36 37 50 50 54 55 56 57 58 59
WHILE                : 
WSTRING              : 29 42 43 52 52 56 57 68
error                : 

Nonterminals, with rules where they appear

assignment_to_type   : 4
assignment_to_type_collection : 5
boolean_option       : 44 45
comparacion          : 28 64 65
expression           : 6 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 25
ifComp               : 7
integer_options      : 34
mul_booleano         : 36 44
mul_float            : 37 48
mul_integuer         : 34 40
mul_string           : 35 42
operadorComp         : 50 51 52 53 54 55 56 57 58 59
print_statement      : 8
program              : 0
statement            : 2 3
statements           : 1 2 64 65 65
type                 : 27
variable_declarator  : 6 29 30 31 32 33 34 35 36 37

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment_to_type
    (5) statement -> . assignment_to_type_collection
    (6) statement -> . variable_declarator VARIABLE ASSIGN expression
    (7) statement -> . ifComp
    (8) statement -> . print_statement
    (29) assignment_to_type -> . variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
    (30) assignment_to_type -> . variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
    (31) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
    (32) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
    (33) assignment_to_type -> . variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
    (34) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (35) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (36) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (37) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (9) variable_declarator -> . LET
    (10) variable_declarator -> . VAR
    (64) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES
    (65) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (11) print_statement -> . PRINT LPAREN expression RPAREN

    LET             shift and go to state 9
    VAR             shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    assignment_to_type             shift and go to state 4
    assignment_to_type_collection  shift and go to state 5
    variable_declarator            shift and go to state 6
    ifComp                         shift and go to state 7
    print_statement                shift and go to state 8

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (2) statements -> statements . statement
    (4) statement -> . assignment_to_type
    (5) statement -> . assignment_to_type_collection
    (6) statement -> . variable_declarator VARIABLE ASSIGN expression
    (7) statement -> . ifComp
    (8) statement -> . print_statement
    (29) assignment_to_type -> . variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
    (30) assignment_to_type -> . variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
    (31) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
    (32) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
    (33) assignment_to_type -> . variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
    (34) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (35) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (36) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (37) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (9) variable_declarator -> . LET
    (10) variable_declarator -> . VAR
    (64) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES
    (65) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (11) print_statement -> . PRINT LPAREN expression RPAREN

    $end            reduce using rule 1 (program -> statements .)
    LET             shift and go to state 9
    VAR             shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 13
    assignment_to_type             shift and go to state 4
    assignment_to_type_collection  shift and go to state 5
    variable_declarator            shift and go to state 6
    ifComp                         shift and go to state 7
    print_statement                shift and go to state 8

state 3

    (3) statements -> statement .

    LET             reduce using rule 3 (statements -> statement .)
    VAR             reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    PRINT           reduce using rule 3 (statements -> statement .)
    $end            reduce using rule 3 (statements -> statement .)
    RBRACES         reduce using rule 3 (statements -> statement .)


state 4

    (4) statement -> assignment_to_type .

    LET             reduce using rule 4 (statement -> assignment_to_type .)
    VAR             reduce using rule 4 (statement -> assignment_to_type .)
    IF              reduce using rule 4 (statement -> assignment_to_type .)
    PRINT           reduce using rule 4 (statement -> assignment_to_type .)
    $end            reduce using rule 4 (statement -> assignment_to_type .)
    RBRACES         reduce using rule 4 (statement -> assignment_to_type .)


state 5

    (5) statement -> assignment_to_type_collection .

    LET             reduce using rule 5 (statement -> assignment_to_type_collection .)
    VAR             reduce using rule 5 (statement -> assignment_to_type_collection .)
    IF              reduce using rule 5 (statement -> assignment_to_type_collection .)
    PRINT           reduce using rule 5 (statement -> assignment_to_type_collection .)
    $end            reduce using rule 5 (statement -> assignment_to_type_collection .)
    RBRACES         reduce using rule 5 (statement -> assignment_to_type_collection .)


state 6

    (6) statement -> variable_declarator . VARIABLE ASSIGN expression
    (29) assignment_to_type -> variable_declarator . VARIABLE COLON STRING ASSIGN WSTRING
    (30) assignment_to_type -> variable_declarator . VARIABLE COLON INTEGER ASSIGN NUMBER
    (31) assignment_to_type -> variable_declarator . VARIABLE COLON BOOLEAN ASSIGN TRUE
    (32) assignment_to_type -> variable_declarator . VARIABLE COLON BOOLEAN ASSIGN FALSE
    (33) assignment_to_type -> variable_declarator . VARIABLE COLON FLOAT ASSIGN DECIMAL
    (34) assignment_to_type_collection -> variable_declarator . VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (35) assignment_to_type_collection -> variable_declarator . VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (36) assignment_to_type_collection -> variable_declarator . VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (37) assignment_to_type_collection -> variable_declarator . VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET

    VARIABLE        shift and go to state 14


state 7

    (7) statement -> ifComp .

    LET             reduce using rule 7 (statement -> ifComp .)
    VAR             reduce using rule 7 (statement -> ifComp .)
    IF              reduce using rule 7 (statement -> ifComp .)
    PRINT           reduce using rule 7 (statement -> ifComp .)
    $end            reduce using rule 7 (statement -> ifComp .)
    RBRACES         reduce using rule 7 (statement -> ifComp .)


state 8

    (8) statement -> print_statement .

    LET             reduce using rule 8 (statement -> print_statement .)
    VAR             reduce using rule 8 (statement -> print_statement .)
    IF              reduce using rule 8 (statement -> print_statement .)
    PRINT           reduce using rule 8 (statement -> print_statement .)
    $end            reduce using rule 8 (statement -> print_statement .)
    RBRACES         reduce using rule 8 (statement -> print_statement .)


state 9

    (9) variable_declarator -> LET .

    VARIABLE        reduce using rule 9 (variable_declarator -> LET .)


state 10

    (10) variable_declarator -> VAR .

    VARIABLE        reduce using rule 10 (variable_declarator -> VAR .)


state 11

    (64) ifComp -> IF . LPAREN comparacion RPAREN LBRACES statements RBRACES
    (65) ifComp -> IF . LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES

    LPAREN          shift and go to state 15


state 12

    (11) print_statement -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 16


state 13

    (2) statements -> statements statement .

    LET             reduce using rule 2 (statements -> statements statement .)
    VAR             reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    PRINT           reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)
    RBRACES         reduce using rule 2 (statements -> statements statement .)


state 14

    (6) statement -> variable_declarator VARIABLE . ASSIGN expression
    (29) assignment_to_type -> variable_declarator VARIABLE . COLON STRING ASSIGN WSTRING
    (30) assignment_to_type -> variable_declarator VARIABLE . COLON INTEGER ASSIGN NUMBER
    (31) assignment_to_type -> variable_declarator VARIABLE . COLON BOOLEAN ASSIGN TRUE
    (32) assignment_to_type -> variable_declarator VARIABLE . COLON BOOLEAN ASSIGN FALSE
    (33) assignment_to_type -> variable_declarator VARIABLE . COLON FLOAT ASSIGN DECIMAL
    (34) assignment_to_type_collection -> variable_declarator VARIABLE . COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (35) assignment_to_type_collection -> variable_declarator VARIABLE . COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (36) assignment_to_type_collection -> variable_declarator VARIABLE . COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (37) assignment_to_type_collection -> variable_declarator VARIABLE . COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET

    ASSIGN          shift and go to state 17
    COLON           shift and go to state 18


state 15

    (64) ifComp -> IF LPAREN . comparacion RPAREN LBRACES statements RBRACES
    (65) ifComp -> IF LPAREN . comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    VARIABLE        shift and go to state 20
    DECIMAL         shift and go to state 21
    WSTRING         shift and go to state 22
    NUMBER          shift and go to state 23

    comparacion                    shift and go to state 19

state 16

    (11) print_statement -> PRINT LPAREN . expression RPAREN
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 25
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 17

    (6) statement -> variable_declarator VARIABLE ASSIGN . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 34
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 18

    (29) assignment_to_type -> variable_declarator VARIABLE COLON . STRING ASSIGN WSTRING
    (30) assignment_to_type -> variable_declarator VARIABLE COLON . INTEGER ASSIGN NUMBER
    (31) assignment_to_type -> variable_declarator VARIABLE COLON . BOOLEAN ASSIGN TRUE
    (32) assignment_to_type -> variable_declarator VARIABLE COLON . BOOLEAN ASSIGN FALSE
    (33) assignment_to_type -> variable_declarator VARIABLE COLON . FLOAT ASSIGN DECIMAL
    (34) assignment_to_type_collection -> variable_declarator VARIABLE COLON . LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (35) assignment_to_type_collection -> variable_declarator VARIABLE COLON . LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON . LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON . LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET

    STRING          shift and go to state 35
    INTEGER         shift and go to state 36
    BOOLEAN         shift and go to state 37
    FLOAT           shift and go to state 38
    LSQUAREBRACKET  shift and go to state 39


state 19

    (64) ifComp -> IF LPAREN comparacion . RPAREN LBRACES statements RBRACES
    (65) ifComp -> IF LPAREN comparacion . RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES

    RPAREN          shift and go to state 40


state 20

    (50) comparacion -> VARIABLE . operadorComp VARIABLE
    (54) comparacion -> VARIABLE . operadorComp DECIMAL
    (57) comparacion -> VARIABLE . operadorComp WSTRING
    (59) comparacion -> VARIABLE . operadorComp NUMBER
    (60) operadorComp -> . GREATERTHAN
    (61) operadorComp -> . LESSTHAN
    (62) operadorComp -> . EQUALS
    (63) operadorComp -> . NOTEQUALS

    GREATERTHAN     shift and go to state 42
    LESSTHAN        shift and go to state 43
    EQUALS          shift and go to state 44
    NOTEQUALS       shift and go to state 45

    operadorComp                   shift and go to state 41

state 21

    (51) comparacion -> DECIMAL . operadorComp DECIMAL
    (55) comparacion -> DECIMAL . operadorComp VARIABLE
    (60) operadorComp -> . GREATERTHAN
    (61) operadorComp -> . LESSTHAN
    (62) operadorComp -> . EQUALS
    (63) operadorComp -> . NOTEQUALS

    GREATERTHAN     shift and go to state 42
    LESSTHAN        shift and go to state 43
    EQUALS          shift and go to state 44
    NOTEQUALS       shift and go to state 45

    operadorComp                   shift and go to state 46

state 22

    (52) comparacion -> WSTRING . operadorComp WSTRING
    (56) comparacion -> WSTRING . operadorComp VARIABLE
    (60) operadorComp -> . GREATERTHAN
    (61) operadorComp -> . LESSTHAN
    (62) operadorComp -> . EQUALS
    (63) operadorComp -> . NOTEQUALS

    GREATERTHAN     shift and go to state 42
    LESSTHAN        shift and go to state 43
    EQUALS          shift and go to state 44
    NOTEQUALS       shift and go to state 45

    operadorComp                   shift and go to state 47

state 23

    (53) comparacion -> NUMBER . operadorComp NUMBER
    (58) comparacion -> NUMBER . operadorComp VARIABLE
    (60) operadorComp -> . GREATERTHAN
    (61) operadorComp -> . LESSTHAN
    (62) operadorComp -> . EQUALS
    (63) operadorComp -> . NOTEQUALS

    GREATERTHAN     shift and go to state 42
    LESSTHAN        shift and go to state 43
    EQUALS          shift and go to state 44
    NOTEQUALS       shift and go to state 45

    operadorComp                   shift and go to state 48

state 24

    (24) expression -> LPAREN . expression RPAREN
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 49
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 25

    (11) print_statement -> PRINT LPAREN expression . RPAREN
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

    RPAREN          shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62


state 26

    (25) expression -> NOT . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 63
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 27

    (26) expression -> VARIABLE .
    (50) comparacion -> VARIABLE . operadorComp VARIABLE
    (54) comparacion -> VARIABLE . operadorComp DECIMAL
    (57) comparacion -> VARIABLE . operadorComp WSTRING
    (59) comparacion -> VARIABLE . operadorComp NUMBER
    (60) operadorComp -> . GREATERTHAN
    (61) operadorComp -> . LESSTHAN
    (62) operadorComp -> . EQUALS
    (63) operadorComp -> . NOTEQUALS

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RPAREN          reduce using rule 26 (expression -> VARIABLE .)
    PLUS            reduce using rule 26 (expression -> VARIABLE .)
    MINUS           reduce using rule 26 (expression -> VARIABLE .)
    MULTIPLY        reduce using rule 26 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 26 (expression -> VARIABLE .)
    AND             reduce using rule 26 (expression -> VARIABLE .)
    OR              reduce using rule 26 (expression -> VARIABLE .)
    COMMA           reduce using rule 26 (expression -> VARIABLE .)
    COLON           reduce using rule 26 (expression -> VARIABLE .)
    LET             reduce using rule 26 (expression -> VARIABLE .)
    VAR             reduce using rule 26 (expression -> VARIABLE .)
    IF              reduce using rule 26 (expression -> VARIABLE .)
    PRINT           reduce using rule 26 (expression -> VARIABLE .)
    $end            reduce using rule 26 (expression -> VARIABLE .)
    RBRACES         reduce using rule 26 (expression -> VARIABLE .)
    GREATERTHAN     shift and go to state 42
    LESSTHAN        shift and go to state 43
    EQUALS          shift and go to state 44
    NOTEQUALS       shift and go to state 45

  ! GREATERTHAN     [ reduce using rule 26 (expression -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 26 (expression -> VARIABLE .) ]
  ! EQUALS          [ reduce using rule 26 (expression -> VARIABLE .) ]
  ! NOTEQUALS       [ reduce using rule 26 (expression -> VARIABLE .) ]

    operadorComp                   shift and go to state 41

state 28

    (27) expression -> type .

    RPAREN          reduce using rule 27 (expression -> type .)
    PLUS            reduce using rule 27 (expression -> type .)
    MINUS           reduce using rule 27 (expression -> type .)
    MULTIPLY        reduce using rule 27 (expression -> type .)
    DIVIDE          reduce using rule 27 (expression -> type .)
    GREATERTHAN     reduce using rule 27 (expression -> type .)
    LESSTHAN        reduce using rule 27 (expression -> type .)
    EQUALS          reduce using rule 27 (expression -> type .)
    NOTEQUALS       reduce using rule 27 (expression -> type .)
    AND             reduce using rule 27 (expression -> type .)
    OR              reduce using rule 27 (expression -> type .)
    COMMA           reduce using rule 27 (expression -> type .)
    COLON           reduce using rule 27 (expression -> type .)
    LET             reduce using rule 27 (expression -> type .)
    VAR             reduce using rule 27 (expression -> type .)
    IF              reduce using rule 27 (expression -> type .)
    PRINT           reduce using rule 27 (expression -> type .)
    $end            reduce using rule 27 (expression -> type .)
    RBRACES         reduce using rule 27 (expression -> type .)


state 29

    (28) expression -> comparacion .

    RPAREN          reduce using rule 28 (expression -> comparacion .)
    PLUS            reduce using rule 28 (expression -> comparacion .)
    MINUS           reduce using rule 28 (expression -> comparacion .)
    MULTIPLY        reduce using rule 28 (expression -> comparacion .)
    DIVIDE          reduce using rule 28 (expression -> comparacion .)
    GREATERTHAN     reduce using rule 28 (expression -> comparacion .)
    LESSTHAN        reduce using rule 28 (expression -> comparacion .)
    EQUALS          reduce using rule 28 (expression -> comparacion .)
    NOTEQUALS       reduce using rule 28 (expression -> comparacion .)
    AND             reduce using rule 28 (expression -> comparacion .)
    OR              reduce using rule 28 (expression -> comparacion .)
    COMMA           reduce using rule 28 (expression -> comparacion .)
    COLON           reduce using rule 28 (expression -> comparacion .)
    LET             reduce using rule 28 (expression -> comparacion .)
    VAR             reduce using rule 28 (expression -> comparacion .)
    IF              reduce using rule 28 (expression -> comparacion .)
    PRINT           reduce using rule 28 (expression -> comparacion .)
    $end            reduce using rule 28 (expression -> comparacion .)
    RBRACES         reduce using rule 28 (expression -> comparacion .)


state 30

    (66) type -> BOOL .

    RPAREN          reduce using rule 66 (type -> BOOL .)
    PLUS            reduce using rule 66 (type -> BOOL .)
    MINUS           reduce using rule 66 (type -> BOOL .)
    MULTIPLY        reduce using rule 66 (type -> BOOL .)
    DIVIDE          reduce using rule 66 (type -> BOOL .)
    GREATERTHAN     reduce using rule 66 (type -> BOOL .)
    LESSTHAN        reduce using rule 66 (type -> BOOL .)
    EQUALS          reduce using rule 66 (type -> BOOL .)
    NOTEQUALS       reduce using rule 66 (type -> BOOL .)
    AND             reduce using rule 66 (type -> BOOL .)
    OR              reduce using rule 66 (type -> BOOL .)
    COMMA           reduce using rule 66 (type -> BOOL .)
    COLON           reduce using rule 66 (type -> BOOL .)
    LET             reduce using rule 66 (type -> BOOL .)
    VAR             reduce using rule 66 (type -> BOOL .)
    IF              reduce using rule 66 (type -> BOOL .)
    PRINT           reduce using rule 66 (type -> BOOL .)
    $end            reduce using rule 66 (type -> BOOL .)
    RBRACES         reduce using rule 66 (type -> BOOL .)


state 31

    (67) type -> DECIMAL .
    (51) comparacion -> DECIMAL . operadorComp DECIMAL
    (55) comparacion -> DECIMAL . operadorComp VARIABLE
    (60) operadorComp -> . GREATERTHAN
    (61) operadorComp -> . LESSTHAN
    (62) operadorComp -> . EQUALS
    (63) operadorComp -> . NOTEQUALS

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RPAREN          reduce using rule 67 (type -> DECIMAL .)
    PLUS            reduce using rule 67 (type -> DECIMAL .)
    MINUS           reduce using rule 67 (type -> DECIMAL .)
    MULTIPLY        reduce using rule 67 (type -> DECIMAL .)
    DIVIDE          reduce using rule 67 (type -> DECIMAL .)
    AND             reduce using rule 67 (type -> DECIMAL .)
    OR              reduce using rule 67 (type -> DECIMAL .)
    COMMA           reduce using rule 67 (type -> DECIMAL .)
    COLON           reduce using rule 67 (type -> DECIMAL .)
    LET             reduce using rule 67 (type -> DECIMAL .)
    VAR             reduce using rule 67 (type -> DECIMAL .)
    IF              reduce using rule 67 (type -> DECIMAL .)
    PRINT           reduce using rule 67 (type -> DECIMAL .)
    $end            reduce using rule 67 (type -> DECIMAL .)
    RBRACES         reduce using rule 67 (type -> DECIMAL .)
    GREATERTHAN     shift and go to state 42
    LESSTHAN        shift and go to state 43
    EQUALS          shift and go to state 44
    NOTEQUALS       shift and go to state 45

  ! GREATERTHAN     [ reduce using rule 67 (type -> DECIMAL .) ]
  ! LESSTHAN        [ reduce using rule 67 (type -> DECIMAL .) ]
  ! EQUALS          [ reduce using rule 67 (type -> DECIMAL .) ]
  ! NOTEQUALS       [ reduce using rule 67 (type -> DECIMAL .) ]

    operadorComp                   shift and go to state 46

state 32

    (68) type -> WSTRING .
    (52) comparacion -> WSTRING . operadorComp WSTRING
    (56) comparacion -> WSTRING . operadorComp VARIABLE
    (60) operadorComp -> . GREATERTHAN
    (61) operadorComp -> . LESSTHAN
    (62) operadorComp -> . EQUALS
    (63) operadorComp -> . NOTEQUALS

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RPAREN          reduce using rule 68 (type -> WSTRING .)
    PLUS            reduce using rule 68 (type -> WSTRING .)
    MINUS           reduce using rule 68 (type -> WSTRING .)
    MULTIPLY        reduce using rule 68 (type -> WSTRING .)
    DIVIDE          reduce using rule 68 (type -> WSTRING .)
    AND             reduce using rule 68 (type -> WSTRING .)
    OR              reduce using rule 68 (type -> WSTRING .)
    COMMA           reduce using rule 68 (type -> WSTRING .)
    COLON           reduce using rule 68 (type -> WSTRING .)
    LET             reduce using rule 68 (type -> WSTRING .)
    VAR             reduce using rule 68 (type -> WSTRING .)
    IF              reduce using rule 68 (type -> WSTRING .)
    PRINT           reduce using rule 68 (type -> WSTRING .)
    $end            reduce using rule 68 (type -> WSTRING .)
    RBRACES         reduce using rule 68 (type -> WSTRING .)
    GREATERTHAN     shift and go to state 42
    LESSTHAN        shift and go to state 43
    EQUALS          shift and go to state 44
    NOTEQUALS       shift and go to state 45

  ! GREATERTHAN     [ reduce using rule 68 (type -> WSTRING .) ]
  ! LESSTHAN        [ reduce using rule 68 (type -> WSTRING .) ]
  ! EQUALS          [ reduce using rule 68 (type -> WSTRING .) ]
  ! NOTEQUALS       [ reduce using rule 68 (type -> WSTRING .) ]

    operadorComp                   shift and go to state 47

state 33

    (69) type -> NUMBER .
    (53) comparacion -> NUMBER . operadorComp NUMBER
    (58) comparacion -> NUMBER . operadorComp VARIABLE
    (60) operadorComp -> . GREATERTHAN
    (61) operadorComp -> . LESSTHAN
    (62) operadorComp -> . EQUALS
    (63) operadorComp -> . NOTEQUALS

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RPAREN          reduce using rule 69 (type -> NUMBER .)
    PLUS            reduce using rule 69 (type -> NUMBER .)
    MINUS           reduce using rule 69 (type -> NUMBER .)
    MULTIPLY        reduce using rule 69 (type -> NUMBER .)
    DIVIDE          reduce using rule 69 (type -> NUMBER .)
    AND             reduce using rule 69 (type -> NUMBER .)
    OR              reduce using rule 69 (type -> NUMBER .)
    COMMA           reduce using rule 69 (type -> NUMBER .)
    COLON           reduce using rule 69 (type -> NUMBER .)
    LET             reduce using rule 69 (type -> NUMBER .)
    VAR             reduce using rule 69 (type -> NUMBER .)
    IF              reduce using rule 69 (type -> NUMBER .)
    PRINT           reduce using rule 69 (type -> NUMBER .)
    $end            reduce using rule 69 (type -> NUMBER .)
    RBRACES         reduce using rule 69 (type -> NUMBER .)
    GREATERTHAN     shift and go to state 42
    LESSTHAN        shift and go to state 43
    EQUALS          shift and go to state 44
    NOTEQUALS       shift and go to state 45

  ! GREATERTHAN     [ reduce using rule 69 (type -> NUMBER .) ]
  ! LESSTHAN        [ reduce using rule 69 (type -> NUMBER .) ]
  ! EQUALS          [ reduce using rule 69 (type -> NUMBER .) ]
  ! NOTEQUALS       [ reduce using rule 69 (type -> NUMBER .) ]

    operadorComp                   shift and go to state 48

state 34

    (6) statement -> variable_declarator VARIABLE ASSIGN expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

    LET             reduce using rule 6 (statement -> variable_declarator VARIABLE ASSIGN expression .)
    VAR             reduce using rule 6 (statement -> variable_declarator VARIABLE ASSIGN expression .)
    IF              reduce using rule 6 (statement -> variable_declarator VARIABLE ASSIGN expression .)
    PRINT           reduce using rule 6 (statement -> variable_declarator VARIABLE ASSIGN expression .)
    $end            reduce using rule 6 (statement -> variable_declarator VARIABLE ASSIGN expression .)
    RBRACES         reduce using rule 6 (statement -> variable_declarator VARIABLE ASSIGN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62


state 35

    (29) assignment_to_type -> variable_declarator VARIABLE COLON STRING . ASSIGN WSTRING

    ASSIGN          shift and go to state 64


state 36

    (30) assignment_to_type -> variable_declarator VARIABLE COLON INTEGER . ASSIGN NUMBER

    ASSIGN          shift and go to state 65


state 37

    (31) assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN . ASSIGN TRUE
    (32) assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN . ASSIGN FALSE

    ASSIGN          shift and go to state 66


state 38

    (33) assignment_to_type -> variable_declarator VARIABLE COLON FLOAT . ASSIGN DECIMAL

    ASSIGN          shift and go to state 67


state 39

    (34) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET . integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (35) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET . STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET . BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET . FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (38) integer_options -> . INTEGER
    (39) integer_options -> . INT

    STRING          shift and go to state 69
    BOOLEAN         shift and go to state 70
    FLOAT           shift and go to state 71
    INTEGER         shift and go to state 72
    INT             shift and go to state 73

    integer_options                shift and go to state 68

state 40

    (64) ifComp -> IF LPAREN comparacion RPAREN . LBRACES statements RBRACES
    (65) ifComp -> IF LPAREN comparacion RPAREN . LBRACES statements RBRACES ELSE LBRACES statements RBRACES

    LBRACES         shift and go to state 74


state 41

    (50) comparacion -> VARIABLE operadorComp . VARIABLE
    (54) comparacion -> VARIABLE operadorComp . DECIMAL
    (57) comparacion -> VARIABLE operadorComp . WSTRING
    (59) comparacion -> VARIABLE operadorComp . NUMBER

    VARIABLE        shift and go to state 75
    DECIMAL         shift and go to state 76
    WSTRING         shift and go to state 77
    NUMBER          shift and go to state 78


state 42

    (60) operadorComp -> GREATERTHAN .

    VARIABLE        reduce using rule 60 (operadorComp -> GREATERTHAN .)
    DECIMAL         reduce using rule 60 (operadorComp -> GREATERTHAN .)
    WSTRING         reduce using rule 60 (operadorComp -> GREATERTHAN .)
    NUMBER          reduce using rule 60 (operadorComp -> GREATERTHAN .)


state 43

    (61) operadorComp -> LESSTHAN .

    VARIABLE        reduce using rule 61 (operadorComp -> LESSTHAN .)
    DECIMAL         reduce using rule 61 (operadorComp -> LESSTHAN .)
    WSTRING         reduce using rule 61 (operadorComp -> LESSTHAN .)
    NUMBER          reduce using rule 61 (operadorComp -> LESSTHAN .)


state 44

    (62) operadorComp -> EQUALS .

    VARIABLE        reduce using rule 62 (operadorComp -> EQUALS .)
    DECIMAL         reduce using rule 62 (operadorComp -> EQUALS .)
    WSTRING         reduce using rule 62 (operadorComp -> EQUALS .)
    NUMBER          reduce using rule 62 (operadorComp -> EQUALS .)


state 45

    (63) operadorComp -> NOTEQUALS .

    VARIABLE        reduce using rule 63 (operadorComp -> NOTEQUALS .)
    DECIMAL         reduce using rule 63 (operadorComp -> NOTEQUALS .)
    WSTRING         reduce using rule 63 (operadorComp -> NOTEQUALS .)
    NUMBER          reduce using rule 63 (operadorComp -> NOTEQUALS .)


state 46

    (51) comparacion -> DECIMAL operadorComp . DECIMAL
    (55) comparacion -> DECIMAL operadorComp . VARIABLE

    DECIMAL         shift and go to state 79
    VARIABLE        shift and go to state 80


state 47

    (52) comparacion -> WSTRING operadorComp . WSTRING
    (56) comparacion -> WSTRING operadorComp . VARIABLE

    WSTRING         shift and go to state 81
    VARIABLE        shift and go to state 82


state 48

    (53) comparacion -> NUMBER operadorComp . NUMBER
    (58) comparacion -> NUMBER operadorComp . VARIABLE

    NUMBER          shift and go to state 83
    VARIABLE        shift and go to state 84


state 49

    (24) expression -> LPAREN expression . RPAREN
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

    RPAREN          shift and go to state 85
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62


state 50

    (11) print_statement -> PRINT LPAREN expression RPAREN .

    LET             reduce using rule 11 (print_statement -> PRINT LPAREN expression RPAREN .)
    VAR             reduce using rule 11 (print_statement -> PRINT LPAREN expression RPAREN .)
    IF              reduce using rule 11 (print_statement -> PRINT LPAREN expression RPAREN .)
    PRINT           reduce using rule 11 (print_statement -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 11 (print_statement -> PRINT LPAREN expression RPAREN .)
    RBRACES         reduce using rule 11 (print_statement -> PRINT LPAREN expression RPAREN .)


state 51

    (12) expression -> expression PLUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 86
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 52

    (13) expression -> expression MINUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 87
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 53

    (14) expression -> expression MULTIPLY . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 88
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 54

    (15) expression -> expression DIVIDE . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 89
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 55

    (16) expression -> expression GREATERTHAN . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 90
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 56

    (17) expression -> expression LESSTHAN . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 91
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 57

    (18) expression -> expression EQUALS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 92
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 58

    (19) expression -> expression NOTEQUALS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 93
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 59

    (20) expression -> expression AND . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 94
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 60

    (21) expression -> expression OR . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 95
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 61

    (22) expression -> expression COMMA . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 96
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 62

    (23) expression -> expression COLON . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression GREATERTHAN expression
    (17) expression -> . expression LESSTHAN expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression NOTEQUALS expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression COMMA expression
    (23) expression -> . expression COLON expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NOT expression
    (26) expression -> . VARIABLE
    (27) expression -> . type
    (28) expression -> . comparacion
    (66) type -> . BOOL
    (67) type -> . DECIMAL
    (68) type -> . WSTRING
    (69) type -> . NUMBER
    (50) comparacion -> . VARIABLE operadorComp VARIABLE
    (51) comparacion -> . DECIMAL operadorComp DECIMAL
    (52) comparacion -> . WSTRING operadorComp WSTRING
    (53) comparacion -> . NUMBER operadorComp NUMBER
    (54) comparacion -> . VARIABLE operadorComp DECIMAL
    (55) comparacion -> . DECIMAL operadorComp VARIABLE
    (56) comparacion -> . WSTRING operadorComp VARIABLE
    (57) comparacion -> . VARIABLE operadorComp WSTRING
    (58) comparacion -> . NUMBER operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp NUMBER

    LPAREN          shift and go to state 24
    NOT             shift and go to state 26
    VARIABLE        shift and go to state 27
    BOOL            shift and go to state 30
    DECIMAL         shift and go to state 31
    WSTRING         shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 97
    type                           shift and go to state 28
    comparacion                    shift and go to state 29

state 63

    (25) expression -> NOT expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 25 (expression -> NOT expression .)
    LET             reduce using rule 25 (expression -> NOT expression .)
    VAR             reduce using rule 25 (expression -> NOT expression .)
    IF              reduce using rule 25 (expression -> NOT expression .)
    PRINT           reduce using rule 25 (expression -> NOT expression .)
    $end            reduce using rule 25 (expression -> NOT expression .)
    RBRACES         reduce using rule 25 (expression -> NOT expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62

  ! PLUS            [ reduce using rule 25 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> NOT expression .) ]
  ! MULTIPLY        [ reduce using rule 25 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> NOT expression .) ]
  ! GREATERTHAN     [ reduce using rule 25 (expression -> NOT expression .) ]
  ! LESSTHAN        [ reduce using rule 25 (expression -> NOT expression .) ]
  ! EQUALS          [ reduce using rule 25 (expression -> NOT expression .) ]
  ! NOTEQUALS       [ reduce using rule 25 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 25 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 25 (expression -> NOT expression .) ]
  ! COMMA           [ reduce using rule 25 (expression -> NOT expression .) ]
  ! COLON           [ reduce using rule 25 (expression -> NOT expression .) ]


state 64

    (29) assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN . WSTRING

    WSTRING         shift and go to state 98


state 65

    (30) assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN . NUMBER

    NUMBER          shift and go to state 99


state 66

    (31) assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN . TRUE
    (32) assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN . FALSE

    TRUE            shift and go to state 100
    FALSE           shift and go to state 101


state 67

    (33) assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN . DECIMAL

    DECIMAL         shift and go to state 102


state 68

    (34) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options . RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 103


state 69

    (35) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING . RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 104


state 70

    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN . RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 105


state 71

    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT . RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 106


state 72

    (38) integer_options -> INTEGER .

    RSQUAREBRACKET  reduce using rule 38 (integer_options -> INTEGER .)


state 73

    (39) integer_options -> INT .

    RSQUAREBRACKET  reduce using rule 39 (integer_options -> INT .)


state 74

    (64) ifComp -> IF LPAREN comparacion RPAREN LBRACES . statements RBRACES
    (65) ifComp -> IF LPAREN comparacion RPAREN LBRACES . statements RBRACES ELSE LBRACES statements RBRACES
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment_to_type
    (5) statement -> . assignment_to_type_collection
    (6) statement -> . variable_declarator VARIABLE ASSIGN expression
    (7) statement -> . ifComp
    (8) statement -> . print_statement
    (29) assignment_to_type -> . variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
    (30) assignment_to_type -> . variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
    (31) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
    (32) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
    (33) assignment_to_type -> . variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
    (34) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (35) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (36) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (37) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (9) variable_declarator -> . LET
    (10) variable_declarator -> . VAR
    (64) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES
    (65) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (11) print_statement -> . PRINT LPAREN expression RPAREN

    LET             shift and go to state 9
    VAR             shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12

    statements                     shift and go to state 107
    statement                      shift and go to state 3
    assignment_to_type             shift and go to state 4
    assignment_to_type_collection  shift and go to state 5
    variable_declarator            shift and go to state 6
    ifComp                         shift and go to state 7
    print_statement                shift and go to state 8

state 75

    (50) comparacion -> VARIABLE operadorComp VARIABLE .

    RPAREN          reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    PLUS            reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    MINUS           reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    MULTIPLY        reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    DIVIDE          reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    GREATERTHAN     reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    LESSTHAN        reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    EQUALS          reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    NOTEQUALS       reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    AND             reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    OR              reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    COMMA           reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    COLON           reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    LET             reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    VAR             reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    IF              reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    PRINT           reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    $end            reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)
    RBRACES         reduce using rule 50 (comparacion -> VARIABLE operadorComp VARIABLE .)


state 76

    (54) comparacion -> VARIABLE operadorComp DECIMAL .

    RPAREN          reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    PLUS            reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    MINUS           reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    MULTIPLY        reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    DIVIDE          reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    GREATERTHAN     reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    LESSTHAN        reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    EQUALS          reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    NOTEQUALS       reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    AND             reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    OR              reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    COMMA           reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    COLON           reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    LET             reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    VAR             reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    IF              reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    PRINT           reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    $end            reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)
    RBRACES         reduce using rule 54 (comparacion -> VARIABLE operadorComp DECIMAL .)


state 77

    (57) comparacion -> VARIABLE operadorComp WSTRING .

    RPAREN          reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    PLUS            reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    MINUS           reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    MULTIPLY        reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    DIVIDE          reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    GREATERTHAN     reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    LESSTHAN        reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    EQUALS          reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    NOTEQUALS       reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    AND             reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    OR              reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    COMMA           reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    COLON           reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    LET             reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    VAR             reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    IF              reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    PRINT           reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    $end            reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)
    RBRACES         reduce using rule 57 (comparacion -> VARIABLE operadorComp WSTRING .)


state 78

    (59) comparacion -> VARIABLE operadorComp NUMBER .

    RPAREN          reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    PLUS            reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    MINUS           reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    MULTIPLY        reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    DIVIDE          reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    GREATERTHAN     reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    LESSTHAN        reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    EQUALS          reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    NOTEQUALS       reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    AND             reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    OR              reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    COMMA           reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    COLON           reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    LET             reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    VAR             reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    IF              reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    PRINT           reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    $end            reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)
    RBRACES         reduce using rule 59 (comparacion -> VARIABLE operadorComp NUMBER .)


state 79

    (51) comparacion -> DECIMAL operadorComp DECIMAL .

    RPAREN          reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    PLUS            reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    MINUS           reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    MULTIPLY        reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    DIVIDE          reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    GREATERTHAN     reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    LESSTHAN        reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    EQUALS          reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    NOTEQUALS       reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    AND             reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    OR              reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    COMMA           reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    COLON           reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    LET             reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    VAR             reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    IF              reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    PRINT           reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    $end            reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)
    RBRACES         reduce using rule 51 (comparacion -> DECIMAL operadorComp DECIMAL .)


state 80

    (55) comparacion -> DECIMAL operadorComp VARIABLE .

    RPAREN          reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    PLUS            reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    MINUS           reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    MULTIPLY        reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    DIVIDE          reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    GREATERTHAN     reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    LESSTHAN        reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    EQUALS          reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    NOTEQUALS       reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    AND             reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    OR              reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    COMMA           reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    COLON           reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    LET             reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    VAR             reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    IF              reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    PRINT           reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    $end            reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)
    RBRACES         reduce using rule 55 (comparacion -> DECIMAL operadorComp VARIABLE .)


state 81

    (52) comparacion -> WSTRING operadorComp WSTRING .

    RPAREN          reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    PLUS            reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    MINUS           reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    MULTIPLY        reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    DIVIDE          reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    GREATERTHAN     reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    LESSTHAN        reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    EQUALS          reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    NOTEQUALS       reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    AND             reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    OR              reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    COMMA           reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    COLON           reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    LET             reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    VAR             reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    IF              reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    PRINT           reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    $end            reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)
    RBRACES         reduce using rule 52 (comparacion -> WSTRING operadorComp WSTRING .)


state 82

    (56) comparacion -> WSTRING operadorComp VARIABLE .

    RPAREN          reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    PLUS            reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    MINUS           reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    MULTIPLY        reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    DIVIDE          reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    GREATERTHAN     reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    LESSTHAN        reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    EQUALS          reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    NOTEQUALS       reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    AND             reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    OR              reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    COMMA           reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    COLON           reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    LET             reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    VAR             reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    IF              reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    PRINT           reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    $end            reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)
    RBRACES         reduce using rule 56 (comparacion -> WSTRING operadorComp VARIABLE .)


state 83

    (53) comparacion -> NUMBER operadorComp NUMBER .

    RPAREN          reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    PLUS            reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    MINUS           reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    MULTIPLY        reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    DIVIDE          reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    GREATERTHAN     reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    LESSTHAN        reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    EQUALS          reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    NOTEQUALS       reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    AND             reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    OR              reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    COMMA           reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    COLON           reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    LET             reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    VAR             reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    IF              reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    PRINT           reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    $end            reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)
    RBRACES         reduce using rule 53 (comparacion -> NUMBER operadorComp NUMBER .)


state 84

    (58) comparacion -> NUMBER operadorComp VARIABLE .

    RPAREN          reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    PLUS            reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    MINUS           reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    MULTIPLY        reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    DIVIDE          reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    GREATERTHAN     reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    LESSTHAN        reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    EQUALS          reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    NOTEQUALS       reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    AND             reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    OR              reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    COMMA           reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    COLON           reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    LET             reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    VAR             reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    IF              reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    PRINT           reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    $end            reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)
    RBRACES         reduce using rule 58 (comparacion -> NUMBER operadorComp VARIABLE .)


state 85

    (24) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    NOTEQUALS       reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    LET             reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    VAR             reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    RBRACES         reduce using rule 24 (expression -> LPAREN expression RPAREN .)


state 86

    (12) expression -> expression PLUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 12 (expression -> expression PLUS expression .)
    LET             reduce using rule 12 (expression -> expression PLUS expression .)
    VAR             reduce using rule 12 (expression -> expression PLUS expression .)
    IF              reduce using rule 12 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 12 (expression -> expression PLUS expression .)
    $end            reduce using rule 12 (expression -> expression PLUS expression .)
    RBRACES         reduce using rule 12 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62

  ! PLUS            [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! MULTIPLY        [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! GREATERTHAN     [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! LESSTHAN        [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! EQUALS          [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! NOTEQUALS       [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! COMMA           [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! COLON           [ reduce using rule 12 (expression -> expression PLUS expression .) ]


state 87

    (13) expression -> expression MINUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 13 (expression -> expression MINUS expression .)
    LET             reduce using rule 13 (expression -> expression MINUS expression .)
    VAR             reduce using rule 13 (expression -> expression MINUS expression .)
    IF              reduce using rule 13 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 13 (expression -> expression MINUS expression .)
    $end            reduce using rule 13 (expression -> expression MINUS expression .)
    RBRACES         reduce using rule 13 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62

  ! PLUS            [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! GREATERTHAN     [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! LESSTHAN        [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! EQUALS          [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! NOTEQUALS       [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! COMMA           [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! COLON           [ reduce using rule 13 (expression -> expression MINUS expression .) ]


state 88

    (14) expression -> expression MULTIPLY expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 14 (expression -> expression MULTIPLY expression .)
    LET             reduce using rule 14 (expression -> expression MULTIPLY expression .)
    VAR             reduce using rule 14 (expression -> expression MULTIPLY expression .)
    IF              reduce using rule 14 (expression -> expression MULTIPLY expression .)
    PRINT           reduce using rule 14 (expression -> expression MULTIPLY expression .)
    $end            reduce using rule 14 (expression -> expression MULTIPLY expression .)
    RBRACES         reduce using rule 14 (expression -> expression MULTIPLY expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62

  ! PLUS            [ reduce using rule 14 (expression -> expression MULTIPLY expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression MULTIPLY expression .) ]
  ! MULTIPLY        [ reduce using rule 14 (expression -> expression MULTIPLY expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression MULTIPLY expression .) ]
  ! GREATERTHAN     [ reduce using rule 14 (expression -> expression MULTIPLY expression .) ]
  ! LESSTHAN        [ reduce using rule 14 (expression -> expression MULTIPLY expression .) ]
  ! EQUALS          [ reduce using rule 14 (expression -> expression MULTIPLY expression .) ]
  ! NOTEQUALS       [ reduce using rule 14 (expression -> expression MULTIPLY expression .) ]
  ! AND             [ reduce using rule 14 (expression -> expression MULTIPLY expression .) ]
  ! OR              [ reduce using rule 14 (expression -> expression MULTIPLY expression .) ]
  ! COMMA           [ reduce using rule 14 (expression -> expression MULTIPLY expression .) ]
  ! COLON           [ reduce using rule 14 (expression -> expression MULTIPLY expression .) ]


state 89

    (15) expression -> expression DIVIDE expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 15 (expression -> expression DIVIDE expression .)
    LET             reduce using rule 15 (expression -> expression DIVIDE expression .)
    VAR             reduce using rule 15 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 15 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 15 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 15 (expression -> expression DIVIDE expression .)
    RBRACES         reduce using rule 15 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62

  ! PLUS            [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! MULTIPLY        [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! GREATERTHAN     [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! LESSTHAN        [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! EQUALS          [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! NOTEQUALS       [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! COMMA           [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! COLON           [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]


state 90

    (16) expression -> expression GREATERTHAN expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 16 (expression -> expression GREATERTHAN expression .)
    LET             reduce using rule 16 (expression -> expression GREATERTHAN expression .)
    VAR             reduce using rule 16 (expression -> expression GREATERTHAN expression .)
    IF              reduce using rule 16 (expression -> expression GREATERTHAN expression .)
    PRINT           reduce using rule 16 (expression -> expression GREATERTHAN expression .)
    $end            reduce using rule 16 (expression -> expression GREATERTHAN expression .)
    RBRACES         reduce using rule 16 (expression -> expression GREATERTHAN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62

  ! PLUS            [ reduce using rule 16 (expression -> expression GREATERTHAN expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression GREATERTHAN expression .) ]
  ! MULTIPLY        [ reduce using rule 16 (expression -> expression GREATERTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression GREATERTHAN expression .) ]
  ! GREATERTHAN     [ reduce using rule 16 (expression -> expression GREATERTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 16 (expression -> expression GREATERTHAN expression .) ]
  ! EQUALS          [ reduce using rule 16 (expression -> expression GREATERTHAN expression .) ]
  ! NOTEQUALS       [ reduce using rule 16 (expression -> expression GREATERTHAN expression .) ]
  ! AND             [ reduce using rule 16 (expression -> expression GREATERTHAN expression .) ]
  ! OR              [ reduce using rule 16 (expression -> expression GREATERTHAN expression .) ]
  ! COMMA           [ reduce using rule 16 (expression -> expression GREATERTHAN expression .) ]
  ! COLON           [ reduce using rule 16 (expression -> expression GREATERTHAN expression .) ]


state 91

    (17) expression -> expression LESSTHAN expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 17 (expression -> expression LESSTHAN expression .)
    LET             reduce using rule 17 (expression -> expression LESSTHAN expression .)
    VAR             reduce using rule 17 (expression -> expression LESSTHAN expression .)
    IF              reduce using rule 17 (expression -> expression LESSTHAN expression .)
    PRINT           reduce using rule 17 (expression -> expression LESSTHAN expression .)
    $end            reduce using rule 17 (expression -> expression LESSTHAN expression .)
    RBRACES         reduce using rule 17 (expression -> expression LESSTHAN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62

  ! PLUS            [ reduce using rule 17 (expression -> expression LESSTHAN expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression LESSTHAN expression .) ]
  ! MULTIPLY        [ reduce using rule 17 (expression -> expression LESSTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression LESSTHAN expression .) ]
  ! GREATERTHAN     [ reduce using rule 17 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 17 (expression -> expression LESSTHAN expression .) ]
  ! EQUALS          [ reduce using rule 17 (expression -> expression LESSTHAN expression .) ]
  ! NOTEQUALS       [ reduce using rule 17 (expression -> expression LESSTHAN expression .) ]
  ! AND             [ reduce using rule 17 (expression -> expression LESSTHAN expression .) ]
  ! OR              [ reduce using rule 17 (expression -> expression LESSTHAN expression .) ]
  ! COMMA           [ reduce using rule 17 (expression -> expression LESSTHAN expression .) ]
  ! COLON           [ reduce using rule 17 (expression -> expression LESSTHAN expression .) ]


state 92

    (18) expression -> expression EQUALS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 18 (expression -> expression EQUALS expression .)
    LET             reduce using rule 18 (expression -> expression EQUALS expression .)
    VAR             reduce using rule 18 (expression -> expression EQUALS expression .)
    IF              reduce using rule 18 (expression -> expression EQUALS expression .)
    PRINT           reduce using rule 18 (expression -> expression EQUALS expression .)
    $end            reduce using rule 18 (expression -> expression EQUALS expression .)
    RBRACES         reduce using rule 18 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62

  ! PLUS            [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! MULTIPLY        [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! GREATERTHAN     [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! LESSTHAN        [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! NOTEQUALS       [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! COMMA           [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! COLON           [ reduce using rule 18 (expression -> expression EQUALS expression .) ]


state 93

    (19) expression -> expression NOTEQUALS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 19 (expression -> expression NOTEQUALS expression .)
    LET             reduce using rule 19 (expression -> expression NOTEQUALS expression .)
    VAR             reduce using rule 19 (expression -> expression NOTEQUALS expression .)
    IF              reduce using rule 19 (expression -> expression NOTEQUALS expression .)
    PRINT           reduce using rule 19 (expression -> expression NOTEQUALS expression .)
    $end            reduce using rule 19 (expression -> expression NOTEQUALS expression .)
    RBRACES         reduce using rule 19 (expression -> expression NOTEQUALS expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62

  ! PLUS            [ reduce using rule 19 (expression -> expression NOTEQUALS expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression NOTEQUALS expression .) ]
  ! MULTIPLY        [ reduce using rule 19 (expression -> expression NOTEQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression NOTEQUALS expression .) ]
  ! GREATERTHAN     [ reduce using rule 19 (expression -> expression NOTEQUALS expression .) ]
  ! LESSTHAN        [ reduce using rule 19 (expression -> expression NOTEQUALS expression .) ]
  ! EQUALS          [ reduce using rule 19 (expression -> expression NOTEQUALS expression .) ]
  ! NOTEQUALS       [ reduce using rule 19 (expression -> expression NOTEQUALS expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression NOTEQUALS expression .) ]
  ! OR              [ reduce using rule 19 (expression -> expression NOTEQUALS expression .) ]
  ! COMMA           [ reduce using rule 19 (expression -> expression NOTEQUALS expression .) ]
  ! COLON           [ reduce using rule 19 (expression -> expression NOTEQUALS expression .) ]


state 94

    (20) expression -> expression AND expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 20 (expression -> expression AND expression .)
    LET             reduce using rule 20 (expression -> expression AND expression .)
    VAR             reduce using rule 20 (expression -> expression AND expression .)
    IF              reduce using rule 20 (expression -> expression AND expression .)
    PRINT           reduce using rule 20 (expression -> expression AND expression .)
    $end            reduce using rule 20 (expression -> expression AND expression .)
    RBRACES         reduce using rule 20 (expression -> expression AND expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62

  ! PLUS            [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! GREATERTHAN     [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! LESSTHAN        [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! NOTEQUALS       [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! COMMA           [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! COLON           [ reduce using rule 20 (expression -> expression AND expression .) ]


state 95

    (21) expression -> expression OR expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 21 (expression -> expression OR expression .)
    LET             reduce using rule 21 (expression -> expression OR expression .)
    VAR             reduce using rule 21 (expression -> expression OR expression .)
    IF              reduce using rule 21 (expression -> expression OR expression .)
    PRINT           reduce using rule 21 (expression -> expression OR expression .)
    $end            reduce using rule 21 (expression -> expression OR expression .)
    RBRACES         reduce using rule 21 (expression -> expression OR expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62

  ! PLUS            [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! GREATERTHAN     [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! LESSTHAN        [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! NOTEQUALS       [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! COMMA           [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! COLON           [ reduce using rule 21 (expression -> expression OR expression .) ]


state 96

    (22) expression -> expression COMMA expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 22 (expression -> expression COMMA expression .)
    LET             reduce using rule 22 (expression -> expression COMMA expression .)
    VAR             reduce using rule 22 (expression -> expression COMMA expression .)
    IF              reduce using rule 22 (expression -> expression COMMA expression .)
    PRINT           reduce using rule 22 (expression -> expression COMMA expression .)
    $end            reduce using rule 22 (expression -> expression COMMA expression .)
    RBRACES         reduce using rule 22 (expression -> expression COMMA expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62

  ! PLUS            [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! MULTIPLY        [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! GREATERTHAN     [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! LESSTHAN        [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! EQUALS          [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! NOTEQUALS       [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! AND             [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! OR              [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! COMMA           [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! COLON           [ reduce using rule 22 (expression -> expression COMMA expression .) ]


state 97

    (23) expression -> expression COLON expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . GREATERTHAN expression
    (17) expression -> expression . LESSTHAN expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . NOTEQUALS expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . COMMA expression
    (23) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 23 (expression -> expression COLON expression .)
    LET             reduce using rule 23 (expression -> expression COLON expression .)
    VAR             reduce using rule 23 (expression -> expression COLON expression .)
    IF              reduce using rule 23 (expression -> expression COLON expression .)
    PRINT           reduce using rule 23 (expression -> expression COLON expression .)
    $end            reduce using rule 23 (expression -> expression COLON expression .)
    RBRACES         reduce using rule 23 (expression -> expression COLON expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHAN        shift and go to state 56
    EQUALS          shift and go to state 57
    NOTEQUALS       shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    COMMA           shift and go to state 61
    COLON           shift and go to state 62

  ! PLUS            [ reduce using rule 23 (expression -> expression COLON expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression COLON expression .) ]
  ! MULTIPLY        [ reduce using rule 23 (expression -> expression COLON expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression COLON expression .) ]
  ! GREATERTHAN     [ reduce using rule 23 (expression -> expression COLON expression .) ]
  ! LESSTHAN        [ reduce using rule 23 (expression -> expression COLON expression .) ]
  ! EQUALS          [ reduce using rule 23 (expression -> expression COLON expression .) ]
  ! NOTEQUALS       [ reduce using rule 23 (expression -> expression COLON expression .) ]
  ! AND             [ reduce using rule 23 (expression -> expression COLON expression .) ]
  ! OR              [ reduce using rule 23 (expression -> expression COLON expression .) ]
  ! COMMA           [ reduce using rule 23 (expression -> expression COLON expression .) ]
  ! COLON           [ reduce using rule 23 (expression -> expression COLON expression .) ]


state 98

    (29) assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .

    LET             reduce using rule 29 (assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .)
    VAR             reduce using rule 29 (assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .)
    IF              reduce using rule 29 (assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .)
    PRINT           reduce using rule 29 (assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .)
    $end            reduce using rule 29 (assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .)
    RBRACES         reduce using rule 29 (assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .)


state 99

    (30) assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .

    LET             reduce using rule 30 (assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .)
    VAR             reduce using rule 30 (assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .)
    IF              reduce using rule 30 (assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .)
    PRINT           reduce using rule 30 (assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .)
    $end            reduce using rule 30 (assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .)
    RBRACES         reduce using rule 30 (assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .)


state 100

    (31) assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .

    LET             reduce using rule 31 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .)
    VAR             reduce using rule 31 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .)
    IF              reduce using rule 31 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .)
    PRINT           reduce using rule 31 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .)
    $end            reduce using rule 31 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .)
    RBRACES         reduce using rule 31 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .)


state 101

    (32) assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .

    LET             reduce using rule 32 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .)
    VAR             reduce using rule 32 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .)
    IF              reduce using rule 32 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .)
    PRINT           reduce using rule 32 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .)
    $end            reduce using rule 32 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .)
    RBRACES         reduce using rule 32 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .)


state 102

    (33) assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .

    LET             reduce using rule 33 (assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .)
    VAR             reduce using rule 33 (assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .)
    IF              reduce using rule 33 (assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .)
    PRINT           reduce using rule 33 (assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .)
    $end            reduce using rule 33 (assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .)
    RBRACES         reduce using rule 33 (assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .)


state 103

    (34) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET . ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET

    ASSIGN          shift and go to state 108


state 104

    (35) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET . ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET

    ASSIGN          shift and go to state 109


state 105

    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET . ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET

    ASSIGN          shift and go to state 110


state 106

    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET . ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET

    ASSIGN          shift and go to state 111


state 107

    (64) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements . RBRACES
    (65) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements . RBRACES ELSE LBRACES statements RBRACES
    (2) statements -> statements . statement
    (4) statement -> . assignment_to_type
    (5) statement -> . assignment_to_type_collection
    (6) statement -> . variable_declarator VARIABLE ASSIGN expression
    (7) statement -> . ifComp
    (8) statement -> . print_statement
    (29) assignment_to_type -> . variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
    (30) assignment_to_type -> . variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
    (31) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
    (32) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
    (33) assignment_to_type -> . variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
    (34) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (35) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (36) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (37) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (9) variable_declarator -> . LET
    (10) variable_declarator -> . VAR
    (64) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES
    (65) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (11) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACES         shift and go to state 112
    LET             shift and go to state 9
    VAR             shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 13
    assignment_to_type             shift and go to state 4
    assignment_to_type_collection  shift and go to state 5
    variable_declarator            shift and go to state 6
    ifComp                         shift and go to state 7
    print_statement                shift and go to state 8

state 108

    (34) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN . LSQUAREBRACKET mul_integuer RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 113


state 109

    (35) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN . LSQUAREBRACKET mul_string RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 114


state 110

    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN . LSQUAREBRACKET mul_booleano RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 115


state 111

    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN . LSQUAREBRACKET mul_float RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 116


state 112

    (64) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .
    (65) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES . ELSE LBRACES statements RBRACES

    LET             reduce using rule 64 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .)
    VAR             reduce using rule 64 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .)
    IF              reduce using rule 64 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .)
    PRINT           reduce using rule 64 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .)
    $end            reduce using rule 64 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .)
    RBRACES         reduce using rule 64 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .)
    ELSE            shift and go to state 117


state 113

    (34) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET . mul_integuer RSQUAREBRACKET
    (40) mul_integuer -> . mul_integuer COMMA NUMBER
    (41) mul_integuer -> . NUMBER

    NUMBER          shift and go to state 119

    mul_integuer                   shift and go to state 118

state 114

    (35) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET . mul_string RSQUAREBRACKET
    (42) mul_string -> . mul_string COMMA WSTRING
    (43) mul_string -> . WSTRING

    WSTRING         shift and go to state 121

    mul_string                     shift and go to state 120

state 115

    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET . mul_booleano RSQUAREBRACKET
    (44) mul_booleano -> . mul_booleano COMMA boolean_option
    (45) mul_booleano -> . boolean_option
    (46) boolean_option -> . TRUE
    (47) boolean_option -> . FALSE

    TRUE            shift and go to state 124
    FALSE           shift and go to state 125

    mul_booleano                   shift and go to state 122
    boolean_option                 shift and go to state 123

state 116

    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET . mul_float RSQUAREBRACKET
    (48) mul_float -> . mul_float COMMA DECIMAL
    (49) mul_float -> . DECIMAL

    DECIMAL         shift and go to state 127

    mul_float                      shift and go to state 126

state 117

    (65) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE . LBRACES statements RBRACES

    LBRACES         shift and go to state 128


state 118

    (34) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer . RSQUAREBRACKET
    (40) mul_integuer -> mul_integuer . COMMA NUMBER

    RSQUAREBRACKET  shift and go to state 129
    COMMA           shift and go to state 130


state 119

    (41) mul_integuer -> NUMBER .

    RSQUAREBRACKET  reduce using rule 41 (mul_integuer -> NUMBER .)
    COMMA           reduce using rule 41 (mul_integuer -> NUMBER .)


state 120

    (35) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string . RSQUAREBRACKET
    (42) mul_string -> mul_string . COMMA WSTRING

    RSQUAREBRACKET  shift and go to state 131
    COMMA           shift and go to state 132


state 121

    (43) mul_string -> WSTRING .

    RSQUAREBRACKET  reduce using rule 43 (mul_string -> WSTRING .)
    COMMA           reduce using rule 43 (mul_string -> WSTRING .)


state 122

    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano . RSQUAREBRACKET
    (44) mul_booleano -> mul_booleano . COMMA boolean_option

    RSQUAREBRACKET  shift and go to state 133
    COMMA           shift and go to state 134


state 123

    (45) mul_booleano -> boolean_option .

    RSQUAREBRACKET  reduce using rule 45 (mul_booleano -> boolean_option .)
    COMMA           reduce using rule 45 (mul_booleano -> boolean_option .)


state 124

    (46) boolean_option -> TRUE .

    RSQUAREBRACKET  reduce using rule 46 (boolean_option -> TRUE .)
    COMMA           reduce using rule 46 (boolean_option -> TRUE .)


state 125

    (47) boolean_option -> FALSE .

    RSQUAREBRACKET  reduce using rule 47 (boolean_option -> FALSE .)
    COMMA           reduce using rule 47 (boolean_option -> FALSE .)


state 126

    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float . RSQUAREBRACKET
    (48) mul_float -> mul_float . COMMA DECIMAL

    RSQUAREBRACKET  shift and go to state 135
    COMMA           shift and go to state 136


state 127

    (49) mul_float -> DECIMAL .

    RSQUAREBRACKET  reduce using rule 49 (mul_float -> DECIMAL .)
    COMMA           reduce using rule 49 (mul_float -> DECIMAL .)


state 128

    (65) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES . statements RBRACES
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment_to_type
    (5) statement -> . assignment_to_type_collection
    (6) statement -> . variable_declarator VARIABLE ASSIGN expression
    (7) statement -> . ifComp
    (8) statement -> . print_statement
    (29) assignment_to_type -> . variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
    (30) assignment_to_type -> . variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
    (31) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
    (32) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
    (33) assignment_to_type -> . variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
    (34) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (35) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (36) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (37) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (9) variable_declarator -> . LET
    (10) variable_declarator -> . VAR
    (64) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES
    (65) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (11) print_statement -> . PRINT LPAREN expression RPAREN

    LET             shift and go to state 9
    VAR             shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12

    statements                     shift and go to state 137
    statement                      shift and go to state 3
    assignment_to_type             shift and go to state 4
    assignment_to_type_collection  shift and go to state 5
    variable_declarator            shift and go to state 6
    ifComp                         shift and go to state 7
    print_statement                shift and go to state 8

state 129

    (34) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .

    LET             reduce using rule 34 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    VAR             reduce using rule 34 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    IF              reduce using rule 34 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    PRINT           reduce using rule 34 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    $end            reduce using rule 34 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    RBRACES         reduce using rule 34 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)


state 130

    (40) mul_integuer -> mul_integuer COMMA . NUMBER

    NUMBER          shift and go to state 138


state 131

    (35) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .

    LET             reduce using rule 35 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    VAR             reduce using rule 35 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    IF              reduce using rule 35 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    PRINT           reduce using rule 35 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    $end            reduce using rule 35 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    RBRACES         reduce using rule 35 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)


state 132

    (42) mul_string -> mul_string COMMA . WSTRING

    WSTRING         shift and go to state 139


state 133

    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .

    LET             reduce using rule 36 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    VAR             reduce using rule 36 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    IF              reduce using rule 36 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    PRINT           reduce using rule 36 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    $end            reduce using rule 36 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    RBRACES         reduce using rule 36 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)


state 134

    (44) mul_booleano -> mul_booleano COMMA . boolean_option
    (46) boolean_option -> . TRUE
    (47) boolean_option -> . FALSE

    TRUE            shift and go to state 124
    FALSE           shift and go to state 125

    boolean_option                 shift and go to state 140

state 135

    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .

    LET             reduce using rule 37 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    VAR             reduce using rule 37 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    IF              reduce using rule 37 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    PRINT           reduce using rule 37 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    $end            reduce using rule 37 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    RBRACES         reduce using rule 37 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)


state 136

    (48) mul_float -> mul_float COMMA . DECIMAL

    DECIMAL         shift and go to state 141


state 137

    (65) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements . RBRACES
    (2) statements -> statements . statement
    (4) statement -> . assignment_to_type
    (5) statement -> . assignment_to_type_collection
    (6) statement -> . variable_declarator VARIABLE ASSIGN expression
    (7) statement -> . ifComp
    (8) statement -> . print_statement
    (29) assignment_to_type -> . variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
    (30) assignment_to_type -> . variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
    (31) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
    (32) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
    (33) assignment_to_type -> . variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
    (34) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (35) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (36) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (37) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (9) variable_declarator -> . LET
    (10) variable_declarator -> . VAR
    (64) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES
    (65) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (11) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACES         shift and go to state 142
    LET             shift and go to state 9
    VAR             shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12

    statement                      shift and go to state 13
    assignment_to_type             shift and go to state 4
    assignment_to_type_collection  shift and go to state 5
    variable_declarator            shift and go to state 6
    ifComp                         shift and go to state 7
    print_statement                shift and go to state 8

state 138

    (40) mul_integuer -> mul_integuer COMMA NUMBER .

    RSQUAREBRACKET  reduce using rule 40 (mul_integuer -> mul_integuer COMMA NUMBER .)
    COMMA           reduce using rule 40 (mul_integuer -> mul_integuer COMMA NUMBER .)


state 139

    (42) mul_string -> mul_string COMMA WSTRING .

    RSQUAREBRACKET  reduce using rule 42 (mul_string -> mul_string COMMA WSTRING .)
    COMMA           reduce using rule 42 (mul_string -> mul_string COMMA WSTRING .)


state 140

    (44) mul_booleano -> mul_booleano COMMA boolean_option .

    RSQUAREBRACKET  reduce using rule 44 (mul_booleano -> mul_booleano COMMA boolean_option .)
    COMMA           reduce using rule 44 (mul_booleano -> mul_booleano COMMA boolean_option .)


state 141

    (48) mul_float -> mul_float COMMA DECIMAL .

    RSQUAREBRACKET  reduce using rule 48 (mul_float -> mul_float COMMA DECIMAL .)
    COMMA           reduce using rule 48 (mul_float -> mul_float COMMA DECIMAL .)


state 142

    (65) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .

    LET             reduce using rule 65 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .)
    VAR             reduce using rule 65 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .)
    IF              reduce using rule 65 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .)
    PRINT           reduce using rule 65 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .)
    $end            reduce using rule 65 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .)
    RBRACES         reduce using rule 65 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for GREATERTHAN in state 27 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 27 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 27 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 27 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 31 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 31 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 31 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 31 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 32 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 32 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 32 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 32 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 33 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 33 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 33 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 33 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 63 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 63 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for AND in state 63 resolved as shift
WARNING: shift/reduce conflict for OR in state 63 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 63 resolved as shift
WARNING: shift/reduce conflict for COLON in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 86 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 86 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 86 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 86 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 86 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 86 resolved as shift
WARNING: shift/reduce conflict for AND in state 86 resolved as shift
WARNING: shift/reduce conflict for OR in state 86 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 86 resolved as shift
WARNING: shift/reduce conflict for COLON in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 87 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 87 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 87 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 87 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 87 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 87 resolved as shift
WARNING: shift/reduce conflict for AND in state 87 resolved as shift
WARNING: shift/reduce conflict for OR in state 87 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 87 resolved as shift
WARNING: shift/reduce conflict for COLON in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 88 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 88 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 88 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 88 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 88 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 88 resolved as shift
WARNING: shift/reduce conflict for AND in state 88 resolved as shift
WARNING: shift/reduce conflict for OR in state 88 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 88 resolved as shift
WARNING: shift/reduce conflict for COLON in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 89 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 89 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 89 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 89 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 89 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 89 resolved as shift
WARNING: shift/reduce conflict for AND in state 89 resolved as shift
WARNING: shift/reduce conflict for OR in state 89 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 89 resolved as shift
WARNING: shift/reduce conflict for COLON in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 90 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 90 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 90 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 90 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 90 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 90 resolved as shift
WARNING: shift/reduce conflict for AND in state 90 resolved as shift
WARNING: shift/reduce conflict for OR in state 90 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 90 resolved as shift
WARNING: shift/reduce conflict for COLON in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 91 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 91 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 91 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 91 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 91 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 91 resolved as shift
WARNING: shift/reduce conflict for AND in state 91 resolved as shift
WARNING: shift/reduce conflict for OR in state 91 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 91 resolved as shift
WARNING: shift/reduce conflict for COLON in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 92 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 92 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 92 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 92 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 92 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 92 resolved as shift
WARNING: shift/reduce conflict for AND in state 92 resolved as shift
WARNING: shift/reduce conflict for OR in state 92 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 92 resolved as shift
WARNING: shift/reduce conflict for COLON in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 93 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 93 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 93 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 93 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 93 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 93 resolved as shift
WARNING: shift/reduce conflict for AND in state 93 resolved as shift
WARNING: shift/reduce conflict for OR in state 93 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 93 resolved as shift
WARNING: shift/reduce conflict for COLON in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 94 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 94 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 94 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 94 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 94 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 94 resolved as shift
WARNING: shift/reduce conflict for AND in state 94 resolved as shift
WARNING: shift/reduce conflict for OR in state 94 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 94 resolved as shift
WARNING: shift/reduce conflict for COLON in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 95 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 95 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 95 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 95 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 95 resolved as shift
WARNING: shift/reduce conflict for AND in state 95 resolved as shift
WARNING: shift/reduce conflict for OR in state 95 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 95 resolved as shift
WARNING: shift/reduce conflict for COLON in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 96 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 96 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 96 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 96 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 96 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 96 resolved as shift
WARNING: shift/reduce conflict for AND in state 96 resolved as shift
WARNING: shift/reduce conflict for OR in state 96 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 96 resolved as shift
WARNING: shift/reduce conflict for COLON in state 96 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 97 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 97 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 97 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 97 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 97 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 97 resolved as shift
WARNING: shift/reduce conflict for AND in state 97 resolved as shift
WARNING: shift/reduce conflict for OR in state 97 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 97 resolved as shift
WARNING: shift/reduce conflict for COLON in state 97 resolved as shift
