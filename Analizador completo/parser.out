Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    ARROW
    BOOL
    BREAK
    CALLMETHOD
    CASE
    CHARACTER
    CLASS
    COLLECTIONTYPE
    COMMENT
    CONTINUE
    DEFAULT
    DICTIONARYTYPE
    DOUBLE
    ENUM
    FOR
    FUNC
    GUARD
    IMPORT
    IN
    INIT
    MINUSONE
    OPTIONALVARIABLE
    PLUSONE
    PRIVATE
    PUBLIC
    RANGE
    READLN
    REPEAT
    RESIDUE
    RETURN
    SETVARIABLE
    STATIC
    STRUCT
    SWITCH
    TYPEALIAS
    VALUESTYPE
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> assignment_to_type
Rule 5     statement -> assignment_to_type_collection
Rule 6     statement -> assignment_to_type_collection_set
Rule 7     statement -> variable_declarator VARIABLE ASSIGN expression
Rule 8     statement -> ifComp
Rule 9     statement -> print_statement
Rule 10    variable_declarator -> LET
Rule 11    variable_declarator -> VAR
Rule 12    print_statement -> PRINT LPAREN expression RPAREN
Rule 13    expression -> expression PLUS expression
Rule 14    expression -> expression MINUS expression
Rule 15    expression -> expression MULTIPLY expression
Rule 16    expression -> expression DIVIDE expression
Rule 17    expression -> expression GREATERTHAN expression
Rule 18    expression -> expression LESSTHAN expression
Rule 19    expression -> expression EQUALS expression
Rule 20    expression -> expression NOTEQUALS expression
Rule 21    expression -> expression AND expression
Rule 22    expression -> expression OR expression
Rule 23    expression -> expression COMMA expression
Rule 24    expression -> expression COLON expression
Rule 25    expression -> LPAREN expression RPAREN
Rule 26    expression -> NOT expression
Rule 27    expression -> VARIABLE
Rule 28    expression -> type
Rule 29    expression -> comparacion
Rule 30    expression -> boolean_expresion
Rule 31    assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
Rule 32    assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
Rule 33    assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
Rule 34    assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
Rule 35    assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
Rule 36    assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
Rule 37    assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
Rule 38    assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
Rule 39    assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
Rule 40    integer_options -> INTEGER
Rule 41    integer_options -> INT
Rule 42    mul_integuer -> mul_integuer COMMA NUMBER
Rule 43    mul_integuer -> NUMBER
Rule 44    mul_string -> mul_string COMMA WSTRING
Rule 45    mul_string -> WSTRING
Rule 46    mul_booleano -> mul_booleano COMMA boolean_option
Rule 47    mul_booleano -> boolean_option
Rule 48    boolean_option -> TRUE
Rule 49    boolean_option -> FALSE
Rule 50    mul_float -> mul_float COMMA DECIMAL
Rule 51    mul_float -> DECIMAL
Rule 52    comparacion -> VARIABLE operadorComp VARIABLE
Rule 53    comparacion -> DECIMAL operadorComp DECIMAL
Rule 54    comparacion -> WSTRING operadorComp WSTRING
Rule 55    comparacion -> NUMBER operadorComp NUMBER
Rule 56    comparacion -> VARIABLE operadorComp DECIMAL
Rule 57    comparacion -> DECIMAL operadorComp VARIABLE
Rule 58    comparacion -> WSTRING operadorComp VARIABLE
Rule 59    comparacion -> VARIABLE operadorComp WSTRING
Rule 60    comparacion -> NUMBER operadorComp VARIABLE
Rule 61    comparacion -> VARIABLE operadorComp NUMBER
Rule 62    operadorComp -> GREATERTHAN
Rule 63    operadorComp -> LESSTHAN
Rule 64    operadorComp -> EQUALS
Rule 65    operadorComp -> NOTEQUALS
Rule 66    ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES
Rule 67    ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
Rule 68    type -> TRUE
Rule 69    type -> FALSE
Rule 70    type -> DECIMAL
Rule 71    type -> WSTRING
Rule 72    type -> NUMBER
Rule 73    assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
Rule 74    assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
Rule 75    assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
Rule 76    assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
Rule 77    boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
Rule 78    boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
Rule 79    boolean_expresion -> boolean_option logical_operator boolean_option
Rule 80    boolean_expresion -> logical_operator boolean_option
Rule 81    boolean_expresion -> boolean_option logical_operator
Rule 82    logical_operator -> AND
Rule 83    logical_operator -> OR

Terminals, with rules where they appear

AND                  : 21 82
ARRAY                : 
ARROW                : 
ASSIGN               : 7 31 32 33 34 35 36 37 38 39 73 74 75 76
BOOL                 : 
BOOLEAN              : 33 34 38 75
BREAK                : 
CALLMETHOD           : 
CASE                 : 
CHARACTER            : 
CLASS                : 
COLLECTIONTYPE       : 
COLON                : 24 31 32 33 34 35 36 37 38 39 73 74 75 76
COMMA                : 23 42 44 46 50
COMMENT              : 
CONTINUE             : 
DECIMAL              : 35 50 51 53 53 56 57 70
DEFAULT              : 
DICTIONARYTYPE       : 
DIVIDE               : 16
DOUBLE               : 
ELSE                 : 67
ENUM                 : 
EQUALS               : 19 64
FALSE                : 34 49 69
FLOAT                : 35 39 76
FOR                  : 
FUNC                 : 
GREATERTHAN          : 17 62 73 74 75 76
GUARD                : 
IF                   : 66 67
IMPORT               : 
IN                   : 
INIT                 : 
INT                  : 41
INTEGER              : 32 40
LBRACES              : 66 67 67
LESSTHAN             : 18 63 73 74 75 76
LET                  : 10
LPAREN               : 12 25 66 67 77 78
LSQUAREBRACKET       : 36 36 37 37 38 38 39 39 73 74 75 76
MINUS                : 14
MINUSONE             : 
MULTIPLY             : 15
NOT                  : 26
NOTEQUALS            : 20 65
NUMBER               : 32 42 43 55 55 60 61 72
OPTIONALVARIABLE     : 
OR                   : 22 83
PLUS                 : 13
PLUSONE              : 
PRINT                : 12
PRIVATE              : 
PUBLIC               : 
RANGE                : 
RBRACES              : 66 67 67
READLN               : 
REPEAT               : 
RESIDUE              : 
RETURN               : 
RPAREN               : 12 25 66 67 77 78
RSQUAREBRACKET       : 36 36 37 37 38 38 39 39 73 74 75 76
SET                  : 73 74 75 76
SETVARIABLE          : 
STATIC               : 
STRING               : 31 37 74
STRUCT               : 
SWITCH               : 
TRUE                 : 33 48 68
TYPEALIAS            : 
VALUESTYPE           : 
VAR                  : 11
VARIABLE             : 7 27 31 32 33 34 35 36 37 38 39 52 52 56 57 58 59 60 61 73 74 75 76
WHILE                : 
WSTRING              : 31 44 45 54 54 58 59 71
error                : 

Nonterminals, with rules where they appear

assignment_to_type   : 4
assignment_to_type_collection : 5
assignment_to_type_collection_set : 6
boolean_expresion    : 30 77 78
boolean_option       : 46 47 77 77 78 78 79 79 80 81
comparacion          : 29 66 67
expression           : 7 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 26
ifComp               : 8
integer_options      : 36 73
logical_operator     : 77 78 79 80 81
mul_booleano         : 38 46 75
mul_float            : 39 50 76
mul_integuer         : 36 42 73
mul_string           : 37 44 74
operadorComp         : 52 53 54 55 56 57 58 59 60 61
print_statement      : 9
program              : 0
statement            : 2 3
statements           : 1 2 66 67 67
type                 : 28
variable_declarator  : 7 31 32 33 34 35 36 37 38 39 73 74 75 76

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment_to_type
    (5) statement -> . assignment_to_type_collection
    (6) statement -> . assignment_to_type_collection_set
    (7) statement -> . variable_declarator VARIABLE ASSIGN expression
    (8) statement -> . ifComp
    (9) statement -> . print_statement
    (31) assignment_to_type -> . variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
    (32) assignment_to_type -> . variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
    (33) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
    (34) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
    (35) assignment_to_type -> . variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
    (36) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (37) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (38) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (39) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (73) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (74) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (75) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (76) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (10) variable_declarator -> . LET
    (11) variable_declarator -> . VAR
    (66) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES
    (67) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (12) print_statement -> . PRINT LPAREN expression RPAREN

    LET             shift and go to state 10
    VAR             shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    assignment_to_type             shift and go to state 4
    assignment_to_type_collection  shift and go to state 5
    assignment_to_type_collection_set shift and go to state 6
    variable_declarator            shift and go to state 7
    ifComp                         shift and go to state 8
    print_statement                shift and go to state 9

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (2) statements -> statements . statement
    (4) statement -> . assignment_to_type
    (5) statement -> . assignment_to_type_collection
    (6) statement -> . assignment_to_type_collection_set
    (7) statement -> . variable_declarator VARIABLE ASSIGN expression
    (8) statement -> . ifComp
    (9) statement -> . print_statement
    (31) assignment_to_type -> . variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
    (32) assignment_to_type -> . variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
    (33) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
    (34) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
    (35) assignment_to_type -> . variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
    (36) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (37) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (38) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (39) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (73) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (74) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (75) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (76) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (10) variable_declarator -> . LET
    (11) variable_declarator -> . VAR
    (66) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES
    (67) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (12) print_statement -> . PRINT LPAREN expression RPAREN

    $end            reduce using rule 1 (program -> statements .)
    LET             shift and go to state 10
    VAR             shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13

    statement                      shift and go to state 14
    assignment_to_type             shift and go to state 4
    assignment_to_type_collection  shift and go to state 5
    assignment_to_type_collection_set shift and go to state 6
    variable_declarator            shift and go to state 7
    ifComp                         shift and go to state 8
    print_statement                shift and go to state 9

state 3

    (3) statements -> statement .

    LET             reduce using rule 3 (statements -> statement .)
    VAR             reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    PRINT           reduce using rule 3 (statements -> statement .)
    $end            reduce using rule 3 (statements -> statement .)
    RBRACES         reduce using rule 3 (statements -> statement .)


state 4

    (4) statement -> assignment_to_type .

    LET             reduce using rule 4 (statement -> assignment_to_type .)
    VAR             reduce using rule 4 (statement -> assignment_to_type .)
    IF              reduce using rule 4 (statement -> assignment_to_type .)
    PRINT           reduce using rule 4 (statement -> assignment_to_type .)
    $end            reduce using rule 4 (statement -> assignment_to_type .)
    RBRACES         reduce using rule 4 (statement -> assignment_to_type .)


state 5

    (5) statement -> assignment_to_type_collection .

    LET             reduce using rule 5 (statement -> assignment_to_type_collection .)
    VAR             reduce using rule 5 (statement -> assignment_to_type_collection .)
    IF              reduce using rule 5 (statement -> assignment_to_type_collection .)
    PRINT           reduce using rule 5 (statement -> assignment_to_type_collection .)
    $end            reduce using rule 5 (statement -> assignment_to_type_collection .)
    RBRACES         reduce using rule 5 (statement -> assignment_to_type_collection .)


state 6

    (6) statement -> assignment_to_type_collection_set .

    LET             reduce using rule 6 (statement -> assignment_to_type_collection_set .)
    VAR             reduce using rule 6 (statement -> assignment_to_type_collection_set .)
    IF              reduce using rule 6 (statement -> assignment_to_type_collection_set .)
    PRINT           reduce using rule 6 (statement -> assignment_to_type_collection_set .)
    $end            reduce using rule 6 (statement -> assignment_to_type_collection_set .)
    RBRACES         reduce using rule 6 (statement -> assignment_to_type_collection_set .)


state 7

    (7) statement -> variable_declarator . VARIABLE ASSIGN expression
    (31) assignment_to_type -> variable_declarator . VARIABLE COLON STRING ASSIGN WSTRING
    (32) assignment_to_type -> variable_declarator . VARIABLE COLON INTEGER ASSIGN NUMBER
    (33) assignment_to_type -> variable_declarator . VARIABLE COLON BOOLEAN ASSIGN TRUE
    (34) assignment_to_type -> variable_declarator . VARIABLE COLON BOOLEAN ASSIGN FALSE
    (35) assignment_to_type -> variable_declarator . VARIABLE COLON FLOAT ASSIGN DECIMAL
    (36) assignment_to_type_collection -> variable_declarator . VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (37) assignment_to_type_collection -> variable_declarator . VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (38) assignment_to_type_collection -> variable_declarator . VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (39) assignment_to_type_collection -> variable_declarator . VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (73) assignment_to_type_collection_set -> variable_declarator . VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (74) assignment_to_type_collection_set -> variable_declarator . VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (75) assignment_to_type_collection_set -> variable_declarator . VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (76) assignment_to_type_collection_set -> variable_declarator . VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET

    VARIABLE        shift and go to state 15


state 8

    (8) statement -> ifComp .

    LET             reduce using rule 8 (statement -> ifComp .)
    VAR             reduce using rule 8 (statement -> ifComp .)
    IF              reduce using rule 8 (statement -> ifComp .)
    PRINT           reduce using rule 8 (statement -> ifComp .)
    $end            reduce using rule 8 (statement -> ifComp .)
    RBRACES         reduce using rule 8 (statement -> ifComp .)


state 9

    (9) statement -> print_statement .

    LET             reduce using rule 9 (statement -> print_statement .)
    VAR             reduce using rule 9 (statement -> print_statement .)
    IF              reduce using rule 9 (statement -> print_statement .)
    PRINT           reduce using rule 9 (statement -> print_statement .)
    $end            reduce using rule 9 (statement -> print_statement .)
    RBRACES         reduce using rule 9 (statement -> print_statement .)


state 10

    (10) variable_declarator -> LET .

    VARIABLE        reduce using rule 10 (variable_declarator -> LET .)


state 11

    (11) variable_declarator -> VAR .

    VARIABLE        reduce using rule 11 (variable_declarator -> VAR .)


state 12

    (66) ifComp -> IF . LPAREN comparacion RPAREN LBRACES statements RBRACES
    (67) ifComp -> IF . LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES

    LPAREN          shift and go to state 16


state 13

    (12) print_statement -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 17


state 14

    (2) statements -> statements statement .

    LET             reduce using rule 2 (statements -> statements statement .)
    VAR             reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    PRINT           reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)
    RBRACES         reduce using rule 2 (statements -> statements statement .)


state 15

    (7) statement -> variable_declarator VARIABLE . ASSIGN expression
    (31) assignment_to_type -> variable_declarator VARIABLE . COLON STRING ASSIGN WSTRING
    (32) assignment_to_type -> variable_declarator VARIABLE . COLON INTEGER ASSIGN NUMBER
    (33) assignment_to_type -> variable_declarator VARIABLE . COLON BOOLEAN ASSIGN TRUE
    (34) assignment_to_type -> variable_declarator VARIABLE . COLON BOOLEAN ASSIGN FALSE
    (35) assignment_to_type -> variable_declarator VARIABLE . COLON FLOAT ASSIGN DECIMAL
    (36) assignment_to_type_collection -> variable_declarator VARIABLE . COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (37) assignment_to_type_collection -> variable_declarator VARIABLE . COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (38) assignment_to_type_collection -> variable_declarator VARIABLE . COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (39) assignment_to_type_collection -> variable_declarator VARIABLE . COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (73) assignment_to_type_collection_set -> variable_declarator VARIABLE . COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (74) assignment_to_type_collection_set -> variable_declarator VARIABLE . COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (75) assignment_to_type_collection_set -> variable_declarator VARIABLE . COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (76) assignment_to_type_collection_set -> variable_declarator VARIABLE . COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET

    ASSIGN          shift and go to state 18
    COLON           shift and go to state 19


state 16

    (66) ifComp -> IF LPAREN . comparacion RPAREN LBRACES statements RBRACES
    (67) ifComp -> IF LPAREN . comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER

    VARIABLE        shift and go to state 21
    DECIMAL         shift and go to state 22
    WSTRING         shift and go to state 23
    NUMBER          shift and go to state 24

    comparacion                    shift and go to state 20

state 17

    (12) print_statement -> PRINT LPAREN . expression RPAREN
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 26
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 18

    (7) statement -> variable_declarator VARIABLE ASSIGN . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 41
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 19

    (31) assignment_to_type -> variable_declarator VARIABLE COLON . STRING ASSIGN WSTRING
    (32) assignment_to_type -> variable_declarator VARIABLE COLON . INTEGER ASSIGN NUMBER
    (33) assignment_to_type -> variable_declarator VARIABLE COLON . BOOLEAN ASSIGN TRUE
    (34) assignment_to_type -> variable_declarator VARIABLE COLON . BOOLEAN ASSIGN FALSE
    (35) assignment_to_type -> variable_declarator VARIABLE COLON . FLOAT ASSIGN DECIMAL
    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON . LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON . LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (38) assignment_to_type_collection -> variable_declarator VARIABLE COLON . LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (39) assignment_to_type_collection -> variable_declarator VARIABLE COLON . LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (73) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON . SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (74) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON . SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (75) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON . SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (76) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON . SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET

    STRING          shift and go to state 42
    INTEGER         shift and go to state 43
    BOOLEAN         shift and go to state 44
    FLOAT           shift and go to state 45
    LSQUAREBRACKET  shift and go to state 46
    SET             shift and go to state 47


state 20

    (66) ifComp -> IF LPAREN comparacion . RPAREN LBRACES statements RBRACES
    (67) ifComp -> IF LPAREN comparacion . RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES

    RPAREN          shift and go to state 48


state 21

    (52) comparacion -> VARIABLE . operadorComp VARIABLE
    (56) comparacion -> VARIABLE . operadorComp DECIMAL
    (59) comparacion -> VARIABLE . operadorComp WSTRING
    (61) comparacion -> VARIABLE . operadorComp NUMBER
    (62) operadorComp -> . GREATERTHAN
    (63) operadorComp -> . LESSTHAN
    (64) operadorComp -> . EQUALS
    (65) operadorComp -> . NOTEQUALS

    GREATERTHAN     shift and go to state 50
    LESSTHAN        shift and go to state 51
    EQUALS          shift and go to state 52
    NOTEQUALS       shift and go to state 53

    operadorComp                   shift and go to state 49

state 22

    (53) comparacion -> DECIMAL . operadorComp DECIMAL
    (57) comparacion -> DECIMAL . operadorComp VARIABLE
    (62) operadorComp -> . GREATERTHAN
    (63) operadorComp -> . LESSTHAN
    (64) operadorComp -> . EQUALS
    (65) operadorComp -> . NOTEQUALS

    GREATERTHAN     shift and go to state 50
    LESSTHAN        shift and go to state 51
    EQUALS          shift and go to state 52
    NOTEQUALS       shift and go to state 53

    operadorComp                   shift and go to state 54

state 23

    (54) comparacion -> WSTRING . operadorComp WSTRING
    (58) comparacion -> WSTRING . operadorComp VARIABLE
    (62) operadorComp -> . GREATERTHAN
    (63) operadorComp -> . LESSTHAN
    (64) operadorComp -> . EQUALS
    (65) operadorComp -> . NOTEQUALS

    GREATERTHAN     shift and go to state 50
    LESSTHAN        shift and go to state 51
    EQUALS          shift and go to state 52
    NOTEQUALS       shift and go to state 53

    operadorComp                   shift and go to state 55

state 24

    (55) comparacion -> NUMBER . operadorComp NUMBER
    (60) comparacion -> NUMBER . operadorComp VARIABLE
    (62) operadorComp -> . GREATERTHAN
    (63) operadorComp -> . LESSTHAN
    (64) operadorComp -> . EQUALS
    (65) operadorComp -> . NOTEQUALS

    GREATERTHAN     shift and go to state 50
    LESSTHAN        shift and go to state 51
    EQUALS          shift and go to state 52
    NOTEQUALS       shift and go to state 53

    operadorComp                   shift and go to state 56

state 25

    (25) expression -> LPAREN . expression RPAREN
    (77) boolean_expresion -> LPAREN . boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 57
    boolean_option                 shift and go to state 58
    logical_operator               shift and go to state 40
    boolean_expresion              shift and go to state 33
    type                           shift and go to state 31
    comparacion                    shift and go to state 32

state 26

    (12) print_statement -> PRINT LPAREN expression . RPAREN
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

    RPAREN          shift and go to state 61
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73


state 27

    (82) logical_operator -> AND .

    TRUE            reduce using rule 82 (logical_operator -> AND .)
    FALSE           reduce using rule 82 (logical_operator -> AND .)
    LPAREN          reduce using rule 82 (logical_operator -> AND .)
    RPAREN          reduce using rule 82 (logical_operator -> AND .)
    PLUS            reduce using rule 82 (logical_operator -> AND .)
    MINUS           reduce using rule 82 (logical_operator -> AND .)
    MULTIPLY        reduce using rule 82 (logical_operator -> AND .)
    DIVIDE          reduce using rule 82 (logical_operator -> AND .)
    GREATERTHAN     reduce using rule 82 (logical_operator -> AND .)
    LESSTHAN        reduce using rule 82 (logical_operator -> AND .)
    EQUALS          reduce using rule 82 (logical_operator -> AND .)
    NOTEQUALS       reduce using rule 82 (logical_operator -> AND .)
    AND             reduce using rule 82 (logical_operator -> AND .)
    OR              reduce using rule 82 (logical_operator -> AND .)
    COMMA           reduce using rule 82 (logical_operator -> AND .)
    COLON           reduce using rule 82 (logical_operator -> AND .)
    LET             reduce using rule 82 (logical_operator -> AND .)
    VAR             reduce using rule 82 (logical_operator -> AND .)
    IF              reduce using rule 82 (logical_operator -> AND .)
    PRINT           reduce using rule 82 (logical_operator -> AND .)
    $end            reduce using rule 82 (logical_operator -> AND .)
    RBRACES         reduce using rule 82 (logical_operator -> AND .)


state 28

    (83) logical_operator -> OR .

    TRUE            reduce using rule 83 (logical_operator -> OR .)
    FALSE           reduce using rule 83 (logical_operator -> OR .)
    LPAREN          reduce using rule 83 (logical_operator -> OR .)
    RPAREN          reduce using rule 83 (logical_operator -> OR .)
    PLUS            reduce using rule 83 (logical_operator -> OR .)
    MINUS           reduce using rule 83 (logical_operator -> OR .)
    MULTIPLY        reduce using rule 83 (logical_operator -> OR .)
    DIVIDE          reduce using rule 83 (logical_operator -> OR .)
    GREATERTHAN     reduce using rule 83 (logical_operator -> OR .)
    LESSTHAN        reduce using rule 83 (logical_operator -> OR .)
    EQUALS          reduce using rule 83 (logical_operator -> OR .)
    NOTEQUALS       reduce using rule 83 (logical_operator -> OR .)
    AND             reduce using rule 83 (logical_operator -> OR .)
    OR              reduce using rule 83 (logical_operator -> OR .)
    COMMA           reduce using rule 83 (logical_operator -> OR .)
    COLON           reduce using rule 83 (logical_operator -> OR .)
    LET             reduce using rule 83 (logical_operator -> OR .)
    VAR             reduce using rule 83 (logical_operator -> OR .)
    IF              reduce using rule 83 (logical_operator -> OR .)
    PRINT           reduce using rule 83 (logical_operator -> OR .)
    $end            reduce using rule 83 (logical_operator -> OR .)
    RBRACES         reduce using rule 83 (logical_operator -> OR .)


state 29

    (26) expression -> NOT . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 74
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 30

    (27) expression -> VARIABLE .
    (52) comparacion -> VARIABLE . operadorComp VARIABLE
    (56) comparacion -> VARIABLE . operadorComp DECIMAL
    (59) comparacion -> VARIABLE . operadorComp WSTRING
    (61) comparacion -> VARIABLE . operadorComp NUMBER
    (62) operadorComp -> . GREATERTHAN
    (63) operadorComp -> . LESSTHAN
    (64) operadorComp -> . EQUALS
    (65) operadorComp -> . NOTEQUALS

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RPAREN          reduce using rule 27 (expression -> VARIABLE .)
    PLUS            reduce using rule 27 (expression -> VARIABLE .)
    MINUS           reduce using rule 27 (expression -> VARIABLE .)
    MULTIPLY        reduce using rule 27 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 27 (expression -> VARIABLE .)
    AND             reduce using rule 27 (expression -> VARIABLE .)
    OR              reduce using rule 27 (expression -> VARIABLE .)
    COMMA           reduce using rule 27 (expression -> VARIABLE .)
    COLON           reduce using rule 27 (expression -> VARIABLE .)
    LET             reduce using rule 27 (expression -> VARIABLE .)
    VAR             reduce using rule 27 (expression -> VARIABLE .)
    IF              reduce using rule 27 (expression -> VARIABLE .)
    PRINT           reduce using rule 27 (expression -> VARIABLE .)
    $end            reduce using rule 27 (expression -> VARIABLE .)
    RBRACES         reduce using rule 27 (expression -> VARIABLE .)
    GREATERTHAN     shift and go to state 50
    LESSTHAN        shift and go to state 51
    EQUALS          shift and go to state 52
    NOTEQUALS       shift and go to state 53

  ! GREATERTHAN     [ reduce using rule 27 (expression -> VARIABLE .) ]
  ! LESSTHAN        [ reduce using rule 27 (expression -> VARIABLE .) ]
  ! EQUALS          [ reduce using rule 27 (expression -> VARIABLE .) ]
  ! NOTEQUALS       [ reduce using rule 27 (expression -> VARIABLE .) ]

    operadorComp                   shift and go to state 49

state 31

    (28) expression -> type .

    RPAREN          reduce using rule 28 (expression -> type .)
    PLUS            reduce using rule 28 (expression -> type .)
    MINUS           reduce using rule 28 (expression -> type .)
    MULTIPLY        reduce using rule 28 (expression -> type .)
    DIVIDE          reduce using rule 28 (expression -> type .)
    GREATERTHAN     reduce using rule 28 (expression -> type .)
    LESSTHAN        reduce using rule 28 (expression -> type .)
    EQUALS          reduce using rule 28 (expression -> type .)
    NOTEQUALS       reduce using rule 28 (expression -> type .)
    AND             reduce using rule 28 (expression -> type .)
    OR              reduce using rule 28 (expression -> type .)
    COMMA           reduce using rule 28 (expression -> type .)
    COLON           reduce using rule 28 (expression -> type .)
    LET             reduce using rule 28 (expression -> type .)
    VAR             reduce using rule 28 (expression -> type .)
    IF              reduce using rule 28 (expression -> type .)
    PRINT           reduce using rule 28 (expression -> type .)
    $end            reduce using rule 28 (expression -> type .)
    RBRACES         reduce using rule 28 (expression -> type .)


state 32

    (29) expression -> comparacion .

    RPAREN          reduce using rule 29 (expression -> comparacion .)
    PLUS            reduce using rule 29 (expression -> comparacion .)
    MINUS           reduce using rule 29 (expression -> comparacion .)
    MULTIPLY        reduce using rule 29 (expression -> comparacion .)
    DIVIDE          reduce using rule 29 (expression -> comparacion .)
    GREATERTHAN     reduce using rule 29 (expression -> comparacion .)
    LESSTHAN        reduce using rule 29 (expression -> comparacion .)
    EQUALS          reduce using rule 29 (expression -> comparacion .)
    NOTEQUALS       reduce using rule 29 (expression -> comparacion .)
    AND             reduce using rule 29 (expression -> comparacion .)
    OR              reduce using rule 29 (expression -> comparacion .)
    COMMA           reduce using rule 29 (expression -> comparacion .)
    COLON           reduce using rule 29 (expression -> comparacion .)
    LET             reduce using rule 29 (expression -> comparacion .)
    VAR             reduce using rule 29 (expression -> comparacion .)
    IF              reduce using rule 29 (expression -> comparacion .)
    PRINT           reduce using rule 29 (expression -> comparacion .)
    $end            reduce using rule 29 (expression -> comparacion .)
    RBRACES         reduce using rule 29 (expression -> comparacion .)


state 33

    (30) expression -> boolean_expresion .
    (78) boolean_expresion -> boolean_expresion . LPAREN boolean_option logical_operator boolean_option RPAREN

    RPAREN          reduce using rule 30 (expression -> boolean_expresion .)
    PLUS            reduce using rule 30 (expression -> boolean_expresion .)
    MINUS           reduce using rule 30 (expression -> boolean_expresion .)
    MULTIPLY        reduce using rule 30 (expression -> boolean_expresion .)
    DIVIDE          reduce using rule 30 (expression -> boolean_expresion .)
    GREATERTHAN     reduce using rule 30 (expression -> boolean_expresion .)
    LESSTHAN        reduce using rule 30 (expression -> boolean_expresion .)
    EQUALS          reduce using rule 30 (expression -> boolean_expresion .)
    NOTEQUALS       reduce using rule 30 (expression -> boolean_expresion .)
    AND             reduce using rule 30 (expression -> boolean_expresion .)
    OR              reduce using rule 30 (expression -> boolean_expresion .)
    COMMA           reduce using rule 30 (expression -> boolean_expresion .)
    COLON           reduce using rule 30 (expression -> boolean_expresion .)
    LET             reduce using rule 30 (expression -> boolean_expresion .)
    VAR             reduce using rule 30 (expression -> boolean_expresion .)
    IF              reduce using rule 30 (expression -> boolean_expresion .)
    PRINT           reduce using rule 30 (expression -> boolean_expresion .)
    $end            reduce using rule 30 (expression -> boolean_expresion .)
    RBRACES         reduce using rule 30 (expression -> boolean_expresion .)
    LPAREN          shift and go to state 75


state 34

    (68) type -> TRUE .
    (48) boolean_option -> TRUE .

  ! reduce/reduce conflict for AND resolved using rule 48 (boolean_option -> TRUE .)
  ! reduce/reduce conflict for OR resolved using rule 48 (boolean_option -> TRUE .)
    RPAREN          reduce using rule 68 (type -> TRUE .)
    PLUS            reduce using rule 68 (type -> TRUE .)
    MINUS           reduce using rule 68 (type -> TRUE .)
    MULTIPLY        reduce using rule 68 (type -> TRUE .)
    DIVIDE          reduce using rule 68 (type -> TRUE .)
    GREATERTHAN     reduce using rule 68 (type -> TRUE .)
    LESSTHAN        reduce using rule 68 (type -> TRUE .)
    EQUALS          reduce using rule 68 (type -> TRUE .)
    NOTEQUALS       reduce using rule 68 (type -> TRUE .)
    COMMA           reduce using rule 68 (type -> TRUE .)
    COLON           reduce using rule 68 (type -> TRUE .)
    LET             reduce using rule 68 (type -> TRUE .)
    VAR             reduce using rule 68 (type -> TRUE .)
    IF              reduce using rule 68 (type -> TRUE .)
    PRINT           reduce using rule 68 (type -> TRUE .)
    $end            reduce using rule 68 (type -> TRUE .)
    RBRACES         reduce using rule 68 (type -> TRUE .)
    AND             reduce using rule 48 (boolean_option -> TRUE .)
    OR              reduce using rule 48 (boolean_option -> TRUE .)

  ! AND             [ reduce using rule 68 (type -> TRUE .) ]
  ! OR              [ reduce using rule 68 (type -> TRUE .) ]


state 35

    (69) type -> FALSE .
    (49) boolean_option -> FALSE .

  ! reduce/reduce conflict for AND resolved using rule 49 (boolean_option -> FALSE .)
  ! reduce/reduce conflict for OR resolved using rule 49 (boolean_option -> FALSE .)
    RPAREN          reduce using rule 69 (type -> FALSE .)
    PLUS            reduce using rule 69 (type -> FALSE .)
    MINUS           reduce using rule 69 (type -> FALSE .)
    MULTIPLY        reduce using rule 69 (type -> FALSE .)
    DIVIDE          reduce using rule 69 (type -> FALSE .)
    GREATERTHAN     reduce using rule 69 (type -> FALSE .)
    LESSTHAN        reduce using rule 69 (type -> FALSE .)
    EQUALS          reduce using rule 69 (type -> FALSE .)
    NOTEQUALS       reduce using rule 69 (type -> FALSE .)
    COMMA           reduce using rule 69 (type -> FALSE .)
    COLON           reduce using rule 69 (type -> FALSE .)
    LET             reduce using rule 69 (type -> FALSE .)
    VAR             reduce using rule 69 (type -> FALSE .)
    IF              reduce using rule 69 (type -> FALSE .)
    PRINT           reduce using rule 69 (type -> FALSE .)
    $end            reduce using rule 69 (type -> FALSE .)
    RBRACES         reduce using rule 69 (type -> FALSE .)
    AND             reduce using rule 49 (boolean_option -> FALSE .)
    OR              reduce using rule 49 (boolean_option -> FALSE .)

  ! AND             [ reduce using rule 69 (type -> FALSE .) ]
  ! OR              [ reduce using rule 69 (type -> FALSE .) ]


state 36

    (70) type -> DECIMAL .
    (53) comparacion -> DECIMAL . operadorComp DECIMAL
    (57) comparacion -> DECIMAL . operadorComp VARIABLE
    (62) operadorComp -> . GREATERTHAN
    (63) operadorComp -> . LESSTHAN
    (64) operadorComp -> . EQUALS
    (65) operadorComp -> . NOTEQUALS

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RPAREN          reduce using rule 70 (type -> DECIMAL .)
    PLUS            reduce using rule 70 (type -> DECIMAL .)
    MINUS           reduce using rule 70 (type -> DECIMAL .)
    MULTIPLY        reduce using rule 70 (type -> DECIMAL .)
    DIVIDE          reduce using rule 70 (type -> DECIMAL .)
    AND             reduce using rule 70 (type -> DECIMAL .)
    OR              reduce using rule 70 (type -> DECIMAL .)
    COMMA           reduce using rule 70 (type -> DECIMAL .)
    COLON           reduce using rule 70 (type -> DECIMAL .)
    LET             reduce using rule 70 (type -> DECIMAL .)
    VAR             reduce using rule 70 (type -> DECIMAL .)
    IF              reduce using rule 70 (type -> DECIMAL .)
    PRINT           reduce using rule 70 (type -> DECIMAL .)
    $end            reduce using rule 70 (type -> DECIMAL .)
    RBRACES         reduce using rule 70 (type -> DECIMAL .)
    GREATERTHAN     shift and go to state 50
    LESSTHAN        shift and go to state 51
    EQUALS          shift and go to state 52
    NOTEQUALS       shift and go to state 53

  ! GREATERTHAN     [ reduce using rule 70 (type -> DECIMAL .) ]
  ! LESSTHAN        [ reduce using rule 70 (type -> DECIMAL .) ]
  ! EQUALS          [ reduce using rule 70 (type -> DECIMAL .) ]
  ! NOTEQUALS       [ reduce using rule 70 (type -> DECIMAL .) ]

    operadorComp                   shift and go to state 54

state 37

    (71) type -> WSTRING .
    (54) comparacion -> WSTRING . operadorComp WSTRING
    (58) comparacion -> WSTRING . operadorComp VARIABLE
    (62) operadorComp -> . GREATERTHAN
    (63) operadorComp -> . LESSTHAN
    (64) operadorComp -> . EQUALS
    (65) operadorComp -> . NOTEQUALS

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RPAREN          reduce using rule 71 (type -> WSTRING .)
    PLUS            reduce using rule 71 (type -> WSTRING .)
    MINUS           reduce using rule 71 (type -> WSTRING .)
    MULTIPLY        reduce using rule 71 (type -> WSTRING .)
    DIVIDE          reduce using rule 71 (type -> WSTRING .)
    AND             reduce using rule 71 (type -> WSTRING .)
    OR              reduce using rule 71 (type -> WSTRING .)
    COMMA           reduce using rule 71 (type -> WSTRING .)
    COLON           reduce using rule 71 (type -> WSTRING .)
    LET             reduce using rule 71 (type -> WSTRING .)
    VAR             reduce using rule 71 (type -> WSTRING .)
    IF              reduce using rule 71 (type -> WSTRING .)
    PRINT           reduce using rule 71 (type -> WSTRING .)
    $end            reduce using rule 71 (type -> WSTRING .)
    RBRACES         reduce using rule 71 (type -> WSTRING .)
    GREATERTHAN     shift and go to state 50
    LESSTHAN        shift and go to state 51
    EQUALS          shift and go to state 52
    NOTEQUALS       shift and go to state 53

  ! GREATERTHAN     [ reduce using rule 71 (type -> WSTRING .) ]
  ! LESSTHAN        [ reduce using rule 71 (type -> WSTRING .) ]
  ! EQUALS          [ reduce using rule 71 (type -> WSTRING .) ]
  ! NOTEQUALS       [ reduce using rule 71 (type -> WSTRING .) ]

    operadorComp                   shift and go to state 55

state 38

    (72) type -> NUMBER .
    (55) comparacion -> NUMBER . operadorComp NUMBER
    (60) comparacion -> NUMBER . operadorComp VARIABLE
    (62) operadorComp -> . GREATERTHAN
    (63) operadorComp -> . LESSTHAN
    (64) operadorComp -> . EQUALS
    (65) operadorComp -> . NOTEQUALS

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RPAREN          reduce using rule 72 (type -> NUMBER .)
    PLUS            reduce using rule 72 (type -> NUMBER .)
    MINUS           reduce using rule 72 (type -> NUMBER .)
    MULTIPLY        reduce using rule 72 (type -> NUMBER .)
    DIVIDE          reduce using rule 72 (type -> NUMBER .)
    AND             reduce using rule 72 (type -> NUMBER .)
    OR              reduce using rule 72 (type -> NUMBER .)
    COMMA           reduce using rule 72 (type -> NUMBER .)
    COLON           reduce using rule 72 (type -> NUMBER .)
    LET             reduce using rule 72 (type -> NUMBER .)
    VAR             reduce using rule 72 (type -> NUMBER .)
    IF              reduce using rule 72 (type -> NUMBER .)
    PRINT           reduce using rule 72 (type -> NUMBER .)
    $end            reduce using rule 72 (type -> NUMBER .)
    RBRACES         reduce using rule 72 (type -> NUMBER .)
    GREATERTHAN     shift and go to state 50
    LESSTHAN        shift and go to state 51
    EQUALS          shift and go to state 52
    NOTEQUALS       shift and go to state 53

  ! GREATERTHAN     [ reduce using rule 72 (type -> NUMBER .) ]
  ! LESSTHAN        [ reduce using rule 72 (type -> NUMBER .) ]
  ! EQUALS          [ reduce using rule 72 (type -> NUMBER .) ]
  ! NOTEQUALS       [ reduce using rule 72 (type -> NUMBER .) ]

    operadorComp                   shift and go to state 56

state 39

    (79) boolean_expresion -> boolean_option . logical_operator boolean_option
    (81) boolean_expresion -> boolean_option . logical_operator
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    AND             shift and go to state 27
    OR              shift and go to state 28

    logical_operator               shift and go to state 76

state 40

    (80) boolean_expresion -> logical_operator . boolean_option
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79

    boolean_option                 shift and go to state 77

state 41

    (7) statement -> variable_declarator VARIABLE ASSIGN expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

    LET             reduce using rule 7 (statement -> variable_declarator VARIABLE ASSIGN expression .)
    VAR             reduce using rule 7 (statement -> variable_declarator VARIABLE ASSIGN expression .)
    IF              reduce using rule 7 (statement -> variable_declarator VARIABLE ASSIGN expression .)
    PRINT           reduce using rule 7 (statement -> variable_declarator VARIABLE ASSIGN expression .)
    $end            reduce using rule 7 (statement -> variable_declarator VARIABLE ASSIGN expression .)
    RBRACES         reduce using rule 7 (statement -> variable_declarator VARIABLE ASSIGN expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73


state 42

    (31) assignment_to_type -> variable_declarator VARIABLE COLON STRING . ASSIGN WSTRING

    ASSIGN          shift and go to state 80


state 43

    (32) assignment_to_type -> variable_declarator VARIABLE COLON INTEGER . ASSIGN NUMBER

    ASSIGN          shift and go to state 81


state 44

    (33) assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN . ASSIGN TRUE
    (34) assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN . ASSIGN FALSE

    ASSIGN          shift and go to state 82


state 45

    (35) assignment_to_type -> variable_declarator VARIABLE COLON FLOAT . ASSIGN DECIMAL

    ASSIGN          shift and go to state 83


state 46

    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET . integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET . STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (38) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET . BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (39) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET . FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (40) integer_options -> . INTEGER
    (41) integer_options -> . INT

    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86
    FLOAT           shift and go to state 87
    INTEGER         shift and go to state 88
    INT             shift and go to state 89

    integer_options                shift and go to state 84

state 47

    (73) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET . LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (74) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET . LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (75) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET . LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (76) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET . LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET

    LESSTHAN        shift and go to state 90


state 48

    (66) ifComp -> IF LPAREN comparacion RPAREN . LBRACES statements RBRACES
    (67) ifComp -> IF LPAREN comparacion RPAREN . LBRACES statements RBRACES ELSE LBRACES statements RBRACES

    LBRACES         shift and go to state 91


state 49

    (52) comparacion -> VARIABLE operadorComp . VARIABLE
    (56) comparacion -> VARIABLE operadorComp . DECIMAL
    (59) comparacion -> VARIABLE operadorComp . WSTRING
    (61) comparacion -> VARIABLE operadorComp . NUMBER

    VARIABLE        shift and go to state 92
    DECIMAL         shift and go to state 93
    WSTRING         shift and go to state 94
    NUMBER          shift and go to state 95


state 50

    (62) operadorComp -> GREATERTHAN .

    VARIABLE        reduce using rule 62 (operadorComp -> GREATERTHAN .)
    DECIMAL         reduce using rule 62 (operadorComp -> GREATERTHAN .)
    WSTRING         reduce using rule 62 (operadorComp -> GREATERTHAN .)
    NUMBER          reduce using rule 62 (operadorComp -> GREATERTHAN .)


state 51

    (63) operadorComp -> LESSTHAN .

    VARIABLE        reduce using rule 63 (operadorComp -> LESSTHAN .)
    DECIMAL         reduce using rule 63 (operadorComp -> LESSTHAN .)
    WSTRING         reduce using rule 63 (operadorComp -> LESSTHAN .)
    NUMBER          reduce using rule 63 (operadorComp -> LESSTHAN .)


state 52

    (64) operadorComp -> EQUALS .

    VARIABLE        reduce using rule 64 (operadorComp -> EQUALS .)
    DECIMAL         reduce using rule 64 (operadorComp -> EQUALS .)
    WSTRING         reduce using rule 64 (operadorComp -> EQUALS .)
    NUMBER          reduce using rule 64 (operadorComp -> EQUALS .)


state 53

    (65) operadorComp -> NOTEQUALS .

    VARIABLE        reduce using rule 65 (operadorComp -> NOTEQUALS .)
    DECIMAL         reduce using rule 65 (operadorComp -> NOTEQUALS .)
    WSTRING         reduce using rule 65 (operadorComp -> NOTEQUALS .)
    NUMBER          reduce using rule 65 (operadorComp -> NOTEQUALS .)


state 54

    (53) comparacion -> DECIMAL operadorComp . DECIMAL
    (57) comparacion -> DECIMAL operadorComp . VARIABLE

    DECIMAL         shift and go to state 96
    VARIABLE        shift and go to state 97


state 55

    (54) comparacion -> WSTRING operadorComp . WSTRING
    (58) comparacion -> WSTRING operadorComp . VARIABLE

    WSTRING         shift and go to state 98
    VARIABLE        shift and go to state 99


state 56

    (55) comparacion -> NUMBER operadorComp . NUMBER
    (60) comparacion -> NUMBER operadorComp . VARIABLE

    NUMBER          shift and go to state 100
    VARIABLE        shift and go to state 101


state 57

    (25) expression -> LPAREN expression . RPAREN
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

    RPAREN          shift and go to state 102
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73


state 58

    (77) boolean_expresion -> LPAREN boolean_option . logical_operator boolean_option RPAREN boolean_expresion
    (79) boolean_expresion -> boolean_option . logical_operator boolean_option
    (81) boolean_expresion -> boolean_option . logical_operator
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    AND             shift and go to state 27
    OR              shift and go to state 28

    logical_operator               shift and go to state 103

state 59

    (48) boolean_option -> TRUE .
    (68) type -> TRUE .

  ! reduce/reduce conflict for AND resolved using rule 48 (boolean_option -> TRUE .)
  ! reduce/reduce conflict for OR resolved using rule 48 (boolean_option -> TRUE .)
    AND             reduce using rule 48 (boolean_option -> TRUE .)
    OR              reduce using rule 48 (boolean_option -> TRUE .)
    RPAREN          reduce using rule 68 (type -> TRUE .)
    PLUS            reduce using rule 68 (type -> TRUE .)
    MINUS           reduce using rule 68 (type -> TRUE .)
    MULTIPLY        reduce using rule 68 (type -> TRUE .)
    DIVIDE          reduce using rule 68 (type -> TRUE .)
    GREATERTHAN     reduce using rule 68 (type -> TRUE .)
    LESSTHAN        reduce using rule 68 (type -> TRUE .)
    EQUALS          reduce using rule 68 (type -> TRUE .)
    NOTEQUALS       reduce using rule 68 (type -> TRUE .)
    COMMA           reduce using rule 68 (type -> TRUE .)
    COLON           reduce using rule 68 (type -> TRUE .)

  ! AND             [ reduce using rule 68 (type -> TRUE .) ]
  ! OR              [ reduce using rule 68 (type -> TRUE .) ]


state 60

    (49) boolean_option -> FALSE .
    (69) type -> FALSE .

  ! reduce/reduce conflict for AND resolved using rule 49 (boolean_option -> FALSE .)
  ! reduce/reduce conflict for OR resolved using rule 49 (boolean_option -> FALSE .)
    AND             reduce using rule 49 (boolean_option -> FALSE .)
    OR              reduce using rule 49 (boolean_option -> FALSE .)
    RPAREN          reduce using rule 69 (type -> FALSE .)
    PLUS            reduce using rule 69 (type -> FALSE .)
    MINUS           reduce using rule 69 (type -> FALSE .)
    MULTIPLY        reduce using rule 69 (type -> FALSE .)
    DIVIDE          reduce using rule 69 (type -> FALSE .)
    GREATERTHAN     reduce using rule 69 (type -> FALSE .)
    LESSTHAN        reduce using rule 69 (type -> FALSE .)
    EQUALS          reduce using rule 69 (type -> FALSE .)
    NOTEQUALS       reduce using rule 69 (type -> FALSE .)
    COMMA           reduce using rule 69 (type -> FALSE .)
    COLON           reduce using rule 69 (type -> FALSE .)

  ! AND             [ reduce using rule 69 (type -> FALSE .) ]
  ! OR              [ reduce using rule 69 (type -> FALSE .) ]


state 61

    (12) print_statement -> PRINT LPAREN expression RPAREN .

    LET             reduce using rule 12 (print_statement -> PRINT LPAREN expression RPAREN .)
    VAR             reduce using rule 12 (print_statement -> PRINT LPAREN expression RPAREN .)
    IF              reduce using rule 12 (print_statement -> PRINT LPAREN expression RPAREN .)
    PRINT           reduce using rule 12 (print_statement -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 12 (print_statement -> PRINT LPAREN expression RPAREN .)
    RBRACES         reduce using rule 12 (print_statement -> PRINT LPAREN expression RPAREN .)


state 62

    (13) expression -> expression PLUS . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 104
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 63

    (14) expression -> expression MINUS . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 105
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 64

    (15) expression -> expression MULTIPLY . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 106
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 65

    (16) expression -> expression DIVIDE . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 107
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 66

    (17) expression -> expression GREATERTHAN . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 108
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 67

    (18) expression -> expression LESSTHAN . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 109
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 68

    (19) expression -> expression EQUALS . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 110
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 69

    (20) expression -> expression NOTEQUALS . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 111
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 70

    (21) expression -> expression AND . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 112
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 71

    (22) expression -> expression OR . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 113
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 72

    (23) expression -> expression COMMA . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 114
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 73

    (24) expression -> expression COLON . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULTIPLY expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression GREATERTHAN expression
    (18) expression -> . expression LESSTHAN expression
    (19) expression -> . expression EQUALS expression
    (20) expression -> . expression NOTEQUALS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . expression COMMA expression
    (24) expression -> . expression COLON expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NOT expression
    (27) expression -> . VARIABLE
    (28) expression -> . type
    (29) expression -> . comparacion
    (30) expression -> . boolean_expresion
    (68) type -> . TRUE
    (69) type -> . FALSE
    (70) type -> . DECIMAL
    (71) type -> . WSTRING
    (72) type -> . NUMBER
    (52) comparacion -> . VARIABLE operadorComp VARIABLE
    (53) comparacion -> . DECIMAL operadorComp DECIMAL
    (54) comparacion -> . WSTRING operadorComp WSTRING
    (55) comparacion -> . NUMBER operadorComp NUMBER
    (56) comparacion -> . VARIABLE operadorComp DECIMAL
    (57) comparacion -> . DECIMAL operadorComp VARIABLE
    (58) comparacion -> . WSTRING operadorComp VARIABLE
    (59) comparacion -> . VARIABLE operadorComp WSTRING
    (60) comparacion -> . NUMBER operadorComp VARIABLE
    (61) comparacion -> . VARIABLE operadorComp NUMBER
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 25
    NOT             shift and go to state 29
    VARIABLE        shift and go to state 30
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    DECIMAL         shift and go to state 36
    WSTRING         shift and go to state 37
    NUMBER          shift and go to state 38
    AND             shift and go to state 27
    OR              shift and go to state 28

    expression                     shift and go to state 115
    type                           shift and go to state 31
    comparacion                    shift and go to state 32
    boolean_expresion              shift and go to state 33
    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40

state 74

    (26) expression -> NOT expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 26 (expression -> NOT expression .)
    LET             reduce using rule 26 (expression -> NOT expression .)
    VAR             reduce using rule 26 (expression -> NOT expression .)
    IF              reduce using rule 26 (expression -> NOT expression .)
    PRINT           reduce using rule 26 (expression -> NOT expression .)
    $end            reduce using rule 26 (expression -> NOT expression .)
    RBRACES         reduce using rule 26 (expression -> NOT expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73

  ! PLUS            [ reduce using rule 26 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> NOT expression .) ]
  ! MULTIPLY        [ reduce using rule 26 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> NOT expression .) ]
  ! GREATERTHAN     [ reduce using rule 26 (expression -> NOT expression .) ]
  ! LESSTHAN        [ reduce using rule 26 (expression -> NOT expression .) ]
  ! EQUALS          [ reduce using rule 26 (expression -> NOT expression .) ]
  ! NOTEQUALS       [ reduce using rule 26 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 26 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 26 (expression -> NOT expression .) ]
  ! COMMA           [ reduce using rule 26 (expression -> NOT expression .) ]
  ! COLON           [ reduce using rule 26 (expression -> NOT expression .) ]


state 75

    (78) boolean_expresion -> boolean_expresion LPAREN . boolean_option logical_operator boolean_option RPAREN
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79

    boolean_option                 shift and go to state 116

state 76

    (79) boolean_expresion -> boolean_option logical_operator . boolean_option
    (81) boolean_expresion -> boolean_option logical_operator .
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE

    LPAREN          reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    RPAREN          reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    PLUS            reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    MINUS           reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    MULTIPLY        reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    DIVIDE          reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    GREATERTHAN     reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    LESSTHAN        reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    EQUALS          reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    NOTEQUALS       reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    AND             reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    OR              reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    COMMA           reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    COLON           reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    LET             reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    VAR             reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    IF              reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    PRINT           reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    $end            reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    RBRACES         reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79

    boolean_option                 shift and go to state 117

state 77

    (80) boolean_expresion -> logical_operator boolean_option .

    LPAREN          reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    RPAREN          reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    PLUS            reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    MINUS           reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    MULTIPLY        reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    DIVIDE          reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    GREATERTHAN     reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    LESSTHAN        reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    EQUALS          reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    NOTEQUALS       reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    AND             reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    OR              reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    COMMA           reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    COLON           reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    LET             reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    VAR             reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    IF              reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    PRINT           reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    $end            reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)
    RBRACES         reduce using rule 80 (boolean_expresion -> logical_operator boolean_option .)


state 78

    (48) boolean_option -> TRUE .

    LPAREN          reduce using rule 48 (boolean_option -> TRUE .)
    RPAREN          reduce using rule 48 (boolean_option -> TRUE .)
    PLUS            reduce using rule 48 (boolean_option -> TRUE .)
    MINUS           reduce using rule 48 (boolean_option -> TRUE .)
    MULTIPLY        reduce using rule 48 (boolean_option -> TRUE .)
    DIVIDE          reduce using rule 48 (boolean_option -> TRUE .)
    GREATERTHAN     reduce using rule 48 (boolean_option -> TRUE .)
    LESSTHAN        reduce using rule 48 (boolean_option -> TRUE .)
    EQUALS          reduce using rule 48 (boolean_option -> TRUE .)
    NOTEQUALS       reduce using rule 48 (boolean_option -> TRUE .)
    AND             reduce using rule 48 (boolean_option -> TRUE .)
    OR              reduce using rule 48 (boolean_option -> TRUE .)
    COMMA           reduce using rule 48 (boolean_option -> TRUE .)
    COLON           reduce using rule 48 (boolean_option -> TRUE .)
    LET             reduce using rule 48 (boolean_option -> TRUE .)
    VAR             reduce using rule 48 (boolean_option -> TRUE .)
    IF              reduce using rule 48 (boolean_option -> TRUE .)
    PRINT           reduce using rule 48 (boolean_option -> TRUE .)
    $end            reduce using rule 48 (boolean_option -> TRUE .)
    RBRACES         reduce using rule 48 (boolean_option -> TRUE .)
    RSQUAREBRACKET  reduce using rule 48 (boolean_option -> TRUE .)


state 79

    (49) boolean_option -> FALSE .

    LPAREN          reduce using rule 49 (boolean_option -> FALSE .)
    RPAREN          reduce using rule 49 (boolean_option -> FALSE .)
    PLUS            reduce using rule 49 (boolean_option -> FALSE .)
    MINUS           reduce using rule 49 (boolean_option -> FALSE .)
    MULTIPLY        reduce using rule 49 (boolean_option -> FALSE .)
    DIVIDE          reduce using rule 49 (boolean_option -> FALSE .)
    GREATERTHAN     reduce using rule 49 (boolean_option -> FALSE .)
    LESSTHAN        reduce using rule 49 (boolean_option -> FALSE .)
    EQUALS          reduce using rule 49 (boolean_option -> FALSE .)
    NOTEQUALS       reduce using rule 49 (boolean_option -> FALSE .)
    AND             reduce using rule 49 (boolean_option -> FALSE .)
    OR              reduce using rule 49 (boolean_option -> FALSE .)
    COMMA           reduce using rule 49 (boolean_option -> FALSE .)
    COLON           reduce using rule 49 (boolean_option -> FALSE .)
    LET             reduce using rule 49 (boolean_option -> FALSE .)
    VAR             reduce using rule 49 (boolean_option -> FALSE .)
    IF              reduce using rule 49 (boolean_option -> FALSE .)
    PRINT           reduce using rule 49 (boolean_option -> FALSE .)
    $end            reduce using rule 49 (boolean_option -> FALSE .)
    RBRACES         reduce using rule 49 (boolean_option -> FALSE .)
    RSQUAREBRACKET  reduce using rule 49 (boolean_option -> FALSE .)


state 80

    (31) assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN . WSTRING

    WSTRING         shift and go to state 118


state 81

    (32) assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN . NUMBER

    NUMBER          shift and go to state 119


state 82

    (33) assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN . TRUE
    (34) assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN . FALSE

    TRUE            shift and go to state 120
    FALSE           shift and go to state 121


state 83

    (35) assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN . DECIMAL

    DECIMAL         shift and go to state 122


state 84

    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options . RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 123


state 85

    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING . RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 124


state 86

    (38) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN . RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 125


state 87

    (39) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT . RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 126


state 88

    (40) integer_options -> INTEGER .

    RSQUAREBRACKET  reduce using rule 40 (integer_options -> INTEGER .)
    GREATERTHAN     reduce using rule 40 (integer_options -> INTEGER .)


state 89

    (41) integer_options -> INT .

    RSQUAREBRACKET  reduce using rule 41 (integer_options -> INT .)
    GREATERTHAN     reduce using rule 41 (integer_options -> INT .)


state 90

    (73) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN . integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (74) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN . STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (75) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN . BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (76) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN . FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (40) integer_options -> . INTEGER
    (41) integer_options -> . INT

    STRING          shift and go to state 128
    BOOLEAN         shift and go to state 129
    FLOAT           shift and go to state 130
    INTEGER         shift and go to state 88
    INT             shift and go to state 89

    integer_options                shift and go to state 127

state 91

    (66) ifComp -> IF LPAREN comparacion RPAREN LBRACES . statements RBRACES
    (67) ifComp -> IF LPAREN comparacion RPAREN LBRACES . statements RBRACES ELSE LBRACES statements RBRACES
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment_to_type
    (5) statement -> . assignment_to_type_collection
    (6) statement -> . assignment_to_type_collection_set
    (7) statement -> . variable_declarator VARIABLE ASSIGN expression
    (8) statement -> . ifComp
    (9) statement -> . print_statement
    (31) assignment_to_type -> . variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
    (32) assignment_to_type -> . variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
    (33) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
    (34) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
    (35) assignment_to_type -> . variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
    (36) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (37) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (38) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (39) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (73) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (74) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (75) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (76) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (10) variable_declarator -> . LET
    (11) variable_declarator -> . VAR
    (66) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES
    (67) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (12) print_statement -> . PRINT LPAREN expression RPAREN

    LET             shift and go to state 10
    VAR             shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13

    statements                     shift and go to state 131
    statement                      shift and go to state 3
    assignment_to_type             shift and go to state 4
    assignment_to_type_collection  shift and go to state 5
    assignment_to_type_collection_set shift and go to state 6
    variable_declarator            shift and go to state 7
    ifComp                         shift and go to state 8
    print_statement                shift and go to state 9

state 92

    (52) comparacion -> VARIABLE operadorComp VARIABLE .

    RPAREN          reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    PLUS            reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    MINUS           reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    MULTIPLY        reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    DIVIDE          reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    GREATERTHAN     reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    LESSTHAN        reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    EQUALS          reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    NOTEQUALS       reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    AND             reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    OR              reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    COMMA           reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    COLON           reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    LET             reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    VAR             reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    IF              reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    PRINT           reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    $end            reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)
    RBRACES         reduce using rule 52 (comparacion -> VARIABLE operadorComp VARIABLE .)


state 93

    (56) comparacion -> VARIABLE operadorComp DECIMAL .

    RPAREN          reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    PLUS            reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    MINUS           reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    MULTIPLY        reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    DIVIDE          reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    GREATERTHAN     reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    LESSTHAN        reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    EQUALS          reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    NOTEQUALS       reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    AND             reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    OR              reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    COMMA           reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    COLON           reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    LET             reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    VAR             reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    IF              reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    PRINT           reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    $end            reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)
    RBRACES         reduce using rule 56 (comparacion -> VARIABLE operadorComp DECIMAL .)


state 94

    (59) comparacion -> VARIABLE operadorComp WSTRING .

    RPAREN          reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    PLUS            reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    MINUS           reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    MULTIPLY        reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    DIVIDE          reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    GREATERTHAN     reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    LESSTHAN        reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    EQUALS          reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    NOTEQUALS       reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    AND             reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    OR              reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    COMMA           reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    COLON           reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    LET             reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    VAR             reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    IF              reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    PRINT           reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    $end            reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)
    RBRACES         reduce using rule 59 (comparacion -> VARIABLE operadorComp WSTRING .)


state 95

    (61) comparacion -> VARIABLE operadorComp NUMBER .

    RPAREN          reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    PLUS            reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    MINUS           reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    MULTIPLY        reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    DIVIDE          reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    GREATERTHAN     reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    LESSTHAN        reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    EQUALS          reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    NOTEQUALS       reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    AND             reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    OR              reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    COMMA           reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    COLON           reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    LET             reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    VAR             reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    IF              reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    PRINT           reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    $end            reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)
    RBRACES         reduce using rule 61 (comparacion -> VARIABLE operadorComp NUMBER .)


state 96

    (53) comparacion -> DECIMAL operadorComp DECIMAL .

    RPAREN          reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    PLUS            reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    MINUS           reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    MULTIPLY        reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    DIVIDE          reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    GREATERTHAN     reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    LESSTHAN        reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    EQUALS          reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    NOTEQUALS       reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    AND             reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    OR              reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    COMMA           reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    COLON           reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    LET             reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    VAR             reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    IF              reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    PRINT           reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    $end            reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)
    RBRACES         reduce using rule 53 (comparacion -> DECIMAL operadorComp DECIMAL .)


state 97

    (57) comparacion -> DECIMAL operadorComp VARIABLE .

    RPAREN          reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    PLUS            reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    MINUS           reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    MULTIPLY        reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    DIVIDE          reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    GREATERTHAN     reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    LESSTHAN        reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    EQUALS          reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    NOTEQUALS       reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    AND             reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    OR              reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    COMMA           reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    COLON           reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    LET             reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    VAR             reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    IF              reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    PRINT           reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    $end            reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)
    RBRACES         reduce using rule 57 (comparacion -> DECIMAL operadorComp VARIABLE .)


state 98

    (54) comparacion -> WSTRING operadorComp WSTRING .

    RPAREN          reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    PLUS            reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    MINUS           reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    MULTIPLY        reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    DIVIDE          reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    GREATERTHAN     reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    LESSTHAN        reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    EQUALS          reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    NOTEQUALS       reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    AND             reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    OR              reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    COMMA           reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    COLON           reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    LET             reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    VAR             reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    IF              reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    PRINT           reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    $end            reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)
    RBRACES         reduce using rule 54 (comparacion -> WSTRING operadorComp WSTRING .)


state 99

    (58) comparacion -> WSTRING operadorComp VARIABLE .

    RPAREN          reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    PLUS            reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    MINUS           reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    MULTIPLY        reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    DIVIDE          reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    GREATERTHAN     reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    LESSTHAN        reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    EQUALS          reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    NOTEQUALS       reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    AND             reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    OR              reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    COMMA           reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    COLON           reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    LET             reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    VAR             reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    IF              reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    PRINT           reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    $end            reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)
    RBRACES         reduce using rule 58 (comparacion -> WSTRING operadorComp VARIABLE .)


state 100

    (55) comparacion -> NUMBER operadorComp NUMBER .

    RPAREN          reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    PLUS            reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    MINUS           reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    MULTIPLY        reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    DIVIDE          reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    GREATERTHAN     reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    LESSTHAN        reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    EQUALS          reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    NOTEQUALS       reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    AND             reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    OR              reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    COMMA           reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    COLON           reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    LET             reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    VAR             reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    IF              reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    PRINT           reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    $end            reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)
    RBRACES         reduce using rule 55 (comparacion -> NUMBER operadorComp NUMBER .)


state 101

    (60) comparacion -> NUMBER operadorComp VARIABLE .

    RPAREN          reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    PLUS            reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    MINUS           reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    MULTIPLY        reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    DIVIDE          reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    GREATERTHAN     reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    LESSTHAN        reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    EQUALS          reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    NOTEQUALS       reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    AND             reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    OR              reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    COMMA           reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    COLON           reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    LET             reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    VAR             reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    IF              reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    PRINT           reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    $end            reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)
    RBRACES         reduce using rule 60 (comparacion -> NUMBER operadorComp VARIABLE .)


state 102

    (25) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    NOTEQUALS       reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    LET             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    VAR             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    RBRACES         reduce using rule 25 (expression -> LPAREN expression RPAREN .)


state 103

    (77) boolean_expresion -> LPAREN boolean_option logical_operator . boolean_option RPAREN boolean_expresion
    (79) boolean_expresion -> boolean_option logical_operator . boolean_option
    (81) boolean_expresion -> boolean_option logical_operator .
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE

    LPAREN          reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    RPAREN          reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    PLUS            reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    MINUS           reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    MULTIPLY        reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    DIVIDE          reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    GREATERTHAN     reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    LESSTHAN        reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    EQUALS          reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    NOTEQUALS       reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    AND             reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    OR              reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    COMMA           reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    COLON           reduce using rule 81 (boolean_expresion -> boolean_option logical_operator .)
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79

    boolean_option                 shift and go to state 132

state 104

    (13) expression -> expression PLUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 13 (expression -> expression PLUS expression .)
    LET             reduce using rule 13 (expression -> expression PLUS expression .)
    VAR             reduce using rule 13 (expression -> expression PLUS expression .)
    IF              reduce using rule 13 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 13 (expression -> expression PLUS expression .)
    $end            reduce using rule 13 (expression -> expression PLUS expression .)
    RBRACES         reduce using rule 13 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73

  ! PLUS            [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! MULTIPLY        [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! GREATERTHAN     [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! LESSTHAN        [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! EQUALS          [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! NOTEQUALS       [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! COMMA           [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! COLON           [ reduce using rule 13 (expression -> expression PLUS expression .) ]


state 105

    (14) expression -> expression MINUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 14 (expression -> expression MINUS expression .)
    LET             reduce using rule 14 (expression -> expression MINUS expression .)
    VAR             reduce using rule 14 (expression -> expression MINUS expression .)
    IF              reduce using rule 14 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 14 (expression -> expression MINUS expression .)
    $end            reduce using rule 14 (expression -> expression MINUS expression .)
    RBRACES         reduce using rule 14 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73

  ! PLUS            [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! GREATERTHAN     [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! LESSTHAN        [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! EQUALS          [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! NOTEQUALS       [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! COMMA           [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! COLON           [ reduce using rule 14 (expression -> expression MINUS expression .) ]


state 106

    (15) expression -> expression MULTIPLY expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 15 (expression -> expression MULTIPLY expression .)
    LET             reduce using rule 15 (expression -> expression MULTIPLY expression .)
    VAR             reduce using rule 15 (expression -> expression MULTIPLY expression .)
    IF              reduce using rule 15 (expression -> expression MULTIPLY expression .)
    PRINT           reduce using rule 15 (expression -> expression MULTIPLY expression .)
    $end            reduce using rule 15 (expression -> expression MULTIPLY expression .)
    RBRACES         reduce using rule 15 (expression -> expression MULTIPLY expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73

  ! PLUS            [ reduce using rule 15 (expression -> expression MULTIPLY expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression MULTIPLY expression .) ]
  ! MULTIPLY        [ reduce using rule 15 (expression -> expression MULTIPLY expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression MULTIPLY expression .) ]
  ! GREATERTHAN     [ reduce using rule 15 (expression -> expression MULTIPLY expression .) ]
  ! LESSTHAN        [ reduce using rule 15 (expression -> expression MULTIPLY expression .) ]
  ! EQUALS          [ reduce using rule 15 (expression -> expression MULTIPLY expression .) ]
  ! NOTEQUALS       [ reduce using rule 15 (expression -> expression MULTIPLY expression .) ]
  ! AND             [ reduce using rule 15 (expression -> expression MULTIPLY expression .) ]
  ! OR              [ reduce using rule 15 (expression -> expression MULTIPLY expression .) ]
  ! COMMA           [ reduce using rule 15 (expression -> expression MULTIPLY expression .) ]
  ! COLON           [ reduce using rule 15 (expression -> expression MULTIPLY expression .) ]


state 107

    (16) expression -> expression DIVIDE expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 16 (expression -> expression DIVIDE expression .)
    LET             reduce using rule 16 (expression -> expression DIVIDE expression .)
    VAR             reduce using rule 16 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 16 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 16 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 16 (expression -> expression DIVIDE expression .)
    RBRACES         reduce using rule 16 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73

  ! PLUS            [ reduce using rule 16 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression DIVIDE expression .) ]
  ! MULTIPLY        [ reduce using rule 16 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression DIVIDE expression .) ]
  ! GREATERTHAN     [ reduce using rule 16 (expression -> expression DIVIDE expression .) ]
  ! LESSTHAN        [ reduce using rule 16 (expression -> expression DIVIDE expression .) ]
  ! EQUALS          [ reduce using rule 16 (expression -> expression DIVIDE expression .) ]
  ! NOTEQUALS       [ reduce using rule 16 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 16 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 16 (expression -> expression DIVIDE expression .) ]
  ! COMMA           [ reduce using rule 16 (expression -> expression DIVIDE expression .) ]
  ! COLON           [ reduce using rule 16 (expression -> expression DIVIDE expression .) ]


state 108

    (17) expression -> expression GREATERTHAN expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 17 (expression -> expression GREATERTHAN expression .)
    LET             reduce using rule 17 (expression -> expression GREATERTHAN expression .)
    VAR             reduce using rule 17 (expression -> expression GREATERTHAN expression .)
    IF              reduce using rule 17 (expression -> expression GREATERTHAN expression .)
    PRINT           reduce using rule 17 (expression -> expression GREATERTHAN expression .)
    $end            reduce using rule 17 (expression -> expression GREATERTHAN expression .)
    RBRACES         reduce using rule 17 (expression -> expression GREATERTHAN expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73

  ! PLUS            [ reduce using rule 17 (expression -> expression GREATERTHAN expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression GREATERTHAN expression .) ]
  ! MULTIPLY        [ reduce using rule 17 (expression -> expression GREATERTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression GREATERTHAN expression .) ]
  ! GREATERTHAN     [ reduce using rule 17 (expression -> expression GREATERTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 17 (expression -> expression GREATERTHAN expression .) ]
  ! EQUALS          [ reduce using rule 17 (expression -> expression GREATERTHAN expression .) ]
  ! NOTEQUALS       [ reduce using rule 17 (expression -> expression GREATERTHAN expression .) ]
  ! AND             [ reduce using rule 17 (expression -> expression GREATERTHAN expression .) ]
  ! OR              [ reduce using rule 17 (expression -> expression GREATERTHAN expression .) ]
  ! COMMA           [ reduce using rule 17 (expression -> expression GREATERTHAN expression .) ]
  ! COLON           [ reduce using rule 17 (expression -> expression GREATERTHAN expression .) ]


state 109

    (18) expression -> expression LESSTHAN expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 18 (expression -> expression LESSTHAN expression .)
    LET             reduce using rule 18 (expression -> expression LESSTHAN expression .)
    VAR             reduce using rule 18 (expression -> expression LESSTHAN expression .)
    IF              reduce using rule 18 (expression -> expression LESSTHAN expression .)
    PRINT           reduce using rule 18 (expression -> expression LESSTHAN expression .)
    $end            reduce using rule 18 (expression -> expression LESSTHAN expression .)
    RBRACES         reduce using rule 18 (expression -> expression LESSTHAN expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73

  ! PLUS            [ reduce using rule 18 (expression -> expression LESSTHAN expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression LESSTHAN expression .) ]
  ! MULTIPLY        [ reduce using rule 18 (expression -> expression LESSTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression LESSTHAN expression .) ]
  ! GREATERTHAN     [ reduce using rule 18 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 18 (expression -> expression LESSTHAN expression .) ]
  ! EQUALS          [ reduce using rule 18 (expression -> expression LESSTHAN expression .) ]
  ! NOTEQUALS       [ reduce using rule 18 (expression -> expression LESSTHAN expression .) ]
  ! AND             [ reduce using rule 18 (expression -> expression LESSTHAN expression .) ]
  ! OR              [ reduce using rule 18 (expression -> expression LESSTHAN expression .) ]
  ! COMMA           [ reduce using rule 18 (expression -> expression LESSTHAN expression .) ]
  ! COLON           [ reduce using rule 18 (expression -> expression LESSTHAN expression .) ]


state 110

    (19) expression -> expression EQUALS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 19 (expression -> expression EQUALS expression .)
    LET             reduce using rule 19 (expression -> expression EQUALS expression .)
    VAR             reduce using rule 19 (expression -> expression EQUALS expression .)
    IF              reduce using rule 19 (expression -> expression EQUALS expression .)
    PRINT           reduce using rule 19 (expression -> expression EQUALS expression .)
    $end            reduce using rule 19 (expression -> expression EQUALS expression .)
    RBRACES         reduce using rule 19 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73

  ! PLUS            [ reduce using rule 19 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression EQUALS expression .) ]
  ! MULTIPLY        [ reduce using rule 19 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression EQUALS expression .) ]
  ! GREATERTHAN     [ reduce using rule 19 (expression -> expression EQUALS expression .) ]
  ! LESSTHAN        [ reduce using rule 19 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 19 (expression -> expression EQUALS expression .) ]
  ! NOTEQUALS       [ reduce using rule 19 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 19 (expression -> expression EQUALS expression .) ]
  ! COMMA           [ reduce using rule 19 (expression -> expression EQUALS expression .) ]
  ! COLON           [ reduce using rule 19 (expression -> expression EQUALS expression .) ]


state 111

    (20) expression -> expression NOTEQUALS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 20 (expression -> expression NOTEQUALS expression .)
    LET             reduce using rule 20 (expression -> expression NOTEQUALS expression .)
    VAR             reduce using rule 20 (expression -> expression NOTEQUALS expression .)
    IF              reduce using rule 20 (expression -> expression NOTEQUALS expression .)
    PRINT           reduce using rule 20 (expression -> expression NOTEQUALS expression .)
    $end            reduce using rule 20 (expression -> expression NOTEQUALS expression .)
    RBRACES         reduce using rule 20 (expression -> expression NOTEQUALS expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73

  ! PLUS            [ reduce using rule 20 (expression -> expression NOTEQUALS expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression NOTEQUALS expression .) ]
  ! MULTIPLY        [ reduce using rule 20 (expression -> expression NOTEQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression NOTEQUALS expression .) ]
  ! GREATERTHAN     [ reduce using rule 20 (expression -> expression NOTEQUALS expression .) ]
  ! LESSTHAN        [ reduce using rule 20 (expression -> expression NOTEQUALS expression .) ]
  ! EQUALS          [ reduce using rule 20 (expression -> expression NOTEQUALS expression .) ]
  ! NOTEQUALS       [ reduce using rule 20 (expression -> expression NOTEQUALS expression .) ]
  ! AND             [ reduce using rule 20 (expression -> expression NOTEQUALS expression .) ]
  ! OR              [ reduce using rule 20 (expression -> expression NOTEQUALS expression .) ]
  ! COMMA           [ reduce using rule 20 (expression -> expression NOTEQUALS expression .) ]
  ! COLON           [ reduce using rule 20 (expression -> expression NOTEQUALS expression .) ]


state 112

    (21) expression -> expression AND expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 21 (expression -> expression AND expression .)
    LET             reduce using rule 21 (expression -> expression AND expression .)
    VAR             reduce using rule 21 (expression -> expression AND expression .)
    IF              reduce using rule 21 (expression -> expression AND expression .)
    PRINT           reduce using rule 21 (expression -> expression AND expression .)
    $end            reduce using rule 21 (expression -> expression AND expression .)
    RBRACES         reduce using rule 21 (expression -> expression AND expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73

  ! PLUS            [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! GREATERTHAN     [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! LESSTHAN        [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! NOTEQUALS       [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! COMMA           [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! COLON           [ reduce using rule 21 (expression -> expression AND expression .) ]


state 113

    (22) expression -> expression OR expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 22 (expression -> expression OR expression .)
    LET             reduce using rule 22 (expression -> expression OR expression .)
    VAR             reduce using rule 22 (expression -> expression OR expression .)
    IF              reduce using rule 22 (expression -> expression OR expression .)
    PRINT           reduce using rule 22 (expression -> expression OR expression .)
    $end            reduce using rule 22 (expression -> expression OR expression .)
    RBRACES         reduce using rule 22 (expression -> expression OR expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73

  ! PLUS            [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! GREATERTHAN     [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! LESSTHAN        [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! NOTEQUALS       [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! COMMA           [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! COLON           [ reduce using rule 22 (expression -> expression OR expression .) ]


state 114

    (23) expression -> expression COMMA expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 23 (expression -> expression COMMA expression .)
    LET             reduce using rule 23 (expression -> expression COMMA expression .)
    VAR             reduce using rule 23 (expression -> expression COMMA expression .)
    IF              reduce using rule 23 (expression -> expression COMMA expression .)
    PRINT           reduce using rule 23 (expression -> expression COMMA expression .)
    $end            reduce using rule 23 (expression -> expression COMMA expression .)
    RBRACES         reduce using rule 23 (expression -> expression COMMA expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73

  ! PLUS            [ reduce using rule 23 (expression -> expression COMMA expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression COMMA expression .) ]
  ! MULTIPLY        [ reduce using rule 23 (expression -> expression COMMA expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression COMMA expression .) ]
  ! GREATERTHAN     [ reduce using rule 23 (expression -> expression COMMA expression .) ]
  ! LESSTHAN        [ reduce using rule 23 (expression -> expression COMMA expression .) ]
  ! EQUALS          [ reduce using rule 23 (expression -> expression COMMA expression .) ]
  ! NOTEQUALS       [ reduce using rule 23 (expression -> expression COMMA expression .) ]
  ! AND             [ reduce using rule 23 (expression -> expression COMMA expression .) ]
  ! OR              [ reduce using rule 23 (expression -> expression COMMA expression .) ]
  ! COMMA           [ reduce using rule 23 (expression -> expression COMMA expression .) ]
  ! COLON           [ reduce using rule 23 (expression -> expression COMMA expression .) ]


state 115

    (24) expression -> expression COLON expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULTIPLY expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . GREATERTHAN expression
    (18) expression -> expression . LESSTHAN expression
    (19) expression -> expression . EQUALS expression
    (20) expression -> expression . NOTEQUALS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (23) expression -> expression . COMMA expression
    (24) expression -> expression . COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    RPAREN          reduce using rule 24 (expression -> expression COLON expression .)
    LET             reduce using rule 24 (expression -> expression COLON expression .)
    VAR             reduce using rule 24 (expression -> expression COLON expression .)
    IF              reduce using rule 24 (expression -> expression COLON expression .)
    PRINT           reduce using rule 24 (expression -> expression COLON expression .)
    $end            reduce using rule 24 (expression -> expression COLON expression .)
    RBRACES         reduce using rule 24 (expression -> expression COLON expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    GREATERTHAN     shift and go to state 66
    LESSTHAN        shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    COMMA           shift and go to state 72
    COLON           shift and go to state 73

  ! PLUS            [ reduce using rule 24 (expression -> expression COLON expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression COLON expression .) ]
  ! MULTIPLY        [ reduce using rule 24 (expression -> expression COLON expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression COLON expression .) ]
  ! GREATERTHAN     [ reduce using rule 24 (expression -> expression COLON expression .) ]
  ! LESSTHAN        [ reduce using rule 24 (expression -> expression COLON expression .) ]
  ! EQUALS          [ reduce using rule 24 (expression -> expression COLON expression .) ]
  ! NOTEQUALS       [ reduce using rule 24 (expression -> expression COLON expression .) ]
  ! AND             [ reduce using rule 24 (expression -> expression COLON expression .) ]
  ! OR              [ reduce using rule 24 (expression -> expression COLON expression .) ]
  ! COMMA           [ reduce using rule 24 (expression -> expression COLON expression .) ]
  ! COLON           [ reduce using rule 24 (expression -> expression COLON expression .) ]


state 116

    (78) boolean_expresion -> boolean_expresion LPAREN boolean_option . logical_operator boolean_option RPAREN
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    AND             shift and go to state 27
    OR              shift and go to state 28

    logical_operator               shift and go to state 133

state 117

    (79) boolean_expresion -> boolean_option logical_operator boolean_option .

    LPAREN          reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    RPAREN          reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    PLUS            reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    MINUS           reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    MULTIPLY        reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    DIVIDE          reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    GREATERTHAN     reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    LESSTHAN        reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    EQUALS          reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    NOTEQUALS       reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    AND             reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    OR              reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    COMMA           reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    COLON           reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    LET             reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    VAR             reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    IF              reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    PRINT           reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    $end            reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    RBRACES         reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)


state 118

    (31) assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .

    LET             reduce using rule 31 (assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .)
    VAR             reduce using rule 31 (assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .)
    IF              reduce using rule 31 (assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .)
    PRINT           reduce using rule 31 (assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .)
    $end            reduce using rule 31 (assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .)
    RBRACES         reduce using rule 31 (assignment_to_type -> variable_declarator VARIABLE COLON STRING ASSIGN WSTRING .)


state 119

    (32) assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .

    LET             reduce using rule 32 (assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .)
    VAR             reduce using rule 32 (assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .)
    IF              reduce using rule 32 (assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .)
    PRINT           reduce using rule 32 (assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .)
    $end            reduce using rule 32 (assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .)
    RBRACES         reduce using rule 32 (assignment_to_type -> variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER .)


state 120

    (33) assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .

    LET             reduce using rule 33 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .)
    VAR             reduce using rule 33 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .)
    IF              reduce using rule 33 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .)
    PRINT           reduce using rule 33 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .)
    $end            reduce using rule 33 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .)
    RBRACES         reduce using rule 33 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE .)


state 121

    (34) assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .

    LET             reduce using rule 34 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .)
    VAR             reduce using rule 34 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .)
    IF              reduce using rule 34 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .)
    PRINT           reduce using rule 34 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .)
    $end            reduce using rule 34 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .)
    RBRACES         reduce using rule 34 (assignment_to_type -> variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE .)


state 122

    (35) assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .

    LET             reduce using rule 35 (assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .)
    VAR             reduce using rule 35 (assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .)
    IF              reduce using rule 35 (assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .)
    PRINT           reduce using rule 35 (assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .)
    $end            reduce using rule 35 (assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .)
    RBRACES         reduce using rule 35 (assignment_to_type -> variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL .)


state 123

    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET . ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET

    ASSIGN          shift and go to state 134


state 124

    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET . ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET

    ASSIGN          shift and go to state 135


state 125

    (38) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET . ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET

    ASSIGN          shift and go to state 136


state 126

    (39) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET . ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET

    ASSIGN          shift and go to state 137


state 127

    (73) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options . GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET

    GREATERTHAN     shift and go to state 138


state 128

    (74) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING . GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET

    GREATERTHAN     shift and go to state 139


state 129

    (75) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN . GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET

    GREATERTHAN     shift and go to state 140


state 130

    (76) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT . GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET

    GREATERTHAN     shift and go to state 141


state 131

    (66) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements . RBRACES
    (67) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements . RBRACES ELSE LBRACES statements RBRACES
    (2) statements -> statements . statement
    (4) statement -> . assignment_to_type
    (5) statement -> . assignment_to_type_collection
    (6) statement -> . assignment_to_type_collection_set
    (7) statement -> . variable_declarator VARIABLE ASSIGN expression
    (8) statement -> . ifComp
    (9) statement -> . print_statement
    (31) assignment_to_type -> . variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
    (32) assignment_to_type -> . variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
    (33) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
    (34) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
    (35) assignment_to_type -> . variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
    (36) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (37) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (38) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (39) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (73) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (74) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (75) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (76) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (10) variable_declarator -> . LET
    (11) variable_declarator -> . VAR
    (66) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES
    (67) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (12) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACES         shift and go to state 142
    LET             shift and go to state 10
    VAR             shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13

    statement                      shift and go to state 14
    assignment_to_type             shift and go to state 4
    assignment_to_type_collection  shift and go to state 5
    assignment_to_type_collection_set shift and go to state 6
    variable_declarator            shift and go to state 7
    ifComp                         shift and go to state 8
    print_statement                shift and go to state 9

state 132

    (77) boolean_expresion -> LPAREN boolean_option logical_operator boolean_option . RPAREN boolean_expresion
    (79) boolean_expresion -> boolean_option logical_operator boolean_option .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 143
    LPAREN          reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    PLUS            reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    MINUS           reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    MULTIPLY        reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    DIVIDE          reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    GREATERTHAN     reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    LESSTHAN        reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    EQUALS          reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    NOTEQUALS       reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    AND             reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    OR              reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    COMMA           reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)
    COLON           reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .)

  ! RPAREN          [ reduce using rule 79 (boolean_expresion -> boolean_option logical_operator boolean_option .) ]


state 133

    (78) boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator . boolean_option RPAREN
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79

    boolean_option                 shift and go to state 144

state 134

    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN . LSQUAREBRACKET mul_integuer RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 145


state 135

    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN . LSQUAREBRACKET mul_string RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 146


state 136

    (38) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN . LSQUAREBRACKET mul_booleano RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 147


state 137

    (39) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN . LSQUAREBRACKET mul_float RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 148


state 138

    (73) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN . ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET

    ASSIGN          shift and go to state 149


state 139

    (74) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN . ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET

    ASSIGN          shift and go to state 150


state 140

    (75) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN . ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET

    ASSIGN          shift and go to state 151


state 141

    (76) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN . ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET

    ASSIGN          shift and go to state 152


state 142

    (66) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .
    (67) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES . ELSE LBRACES statements RBRACES

    LET             reduce using rule 66 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .)
    VAR             reduce using rule 66 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .)
    IF              reduce using rule 66 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .)
    PRINT           reduce using rule 66 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .)
    $end            reduce using rule 66 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .)
    RBRACES         reduce using rule 66 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES .)
    ELSE            shift and go to state 153


state 143

    (77) boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN . boolean_expresion
    (77) boolean_expresion -> . LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (78) boolean_expresion -> . boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN
    (79) boolean_expresion -> . boolean_option logical_operator boolean_option
    (80) boolean_expresion -> . logical_operator boolean_option
    (81) boolean_expresion -> . boolean_option logical_operator
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    LPAREN          shift and go to state 154
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    AND             shift and go to state 27
    OR              shift and go to state 28

    boolean_option                 shift and go to state 39
    logical_operator               shift and go to state 40
    boolean_expresion              shift and go to state 155

state 144

    (78) boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option . RPAREN

    RPAREN          shift and go to state 156


state 145

    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET . mul_integuer RSQUAREBRACKET
    (42) mul_integuer -> . mul_integuer COMMA NUMBER
    (43) mul_integuer -> . NUMBER

    NUMBER          shift and go to state 158

    mul_integuer                   shift and go to state 157

state 146

    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET . mul_string RSQUAREBRACKET
    (44) mul_string -> . mul_string COMMA WSTRING
    (45) mul_string -> . WSTRING

    WSTRING         shift and go to state 160

    mul_string                     shift and go to state 159

state 147

    (38) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET . mul_booleano RSQUAREBRACKET
    (46) mul_booleano -> . mul_booleano COMMA boolean_option
    (47) mul_booleano -> . boolean_option
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79

    mul_booleano                   shift and go to state 161
    boolean_option                 shift and go to state 162

state 148

    (39) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET . mul_float RSQUAREBRACKET
    (50) mul_float -> . mul_float COMMA DECIMAL
    (51) mul_float -> . DECIMAL

    DECIMAL         shift and go to state 164

    mul_float                      shift and go to state 163

state 149

    (73) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN . LSQUAREBRACKET mul_integuer RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 165


state 150

    (74) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN . LSQUAREBRACKET mul_string RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 166


state 151

    (75) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN . LSQUAREBRACKET mul_booleano RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 167


state 152

    (76) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN . LSQUAREBRACKET mul_float RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 168


state 153

    (67) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE . LBRACES statements RBRACES

    LBRACES         shift and go to state 169


state 154

    (77) boolean_expresion -> LPAREN . boolean_option logical_operator boolean_option RPAREN boolean_expresion
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79

    boolean_option                 shift and go to state 170

state 155

    (77) boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .
    (78) boolean_expresion -> boolean_expresion . LPAREN boolean_option logical_operator boolean_option RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    PLUS            reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    MINUS           reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    MULTIPLY        reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    DIVIDE          reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    GREATERTHAN     reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    LESSTHAN        reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    EQUALS          reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    NOTEQUALS       reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    AND             reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    OR              reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    COMMA           reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    COLON           reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    LET             reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    VAR             reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    IF              reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    PRINT           reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    $end            reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    RBRACES         reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .)
    LPAREN          shift and go to state 75

  ! LPAREN          [ reduce using rule 77 (boolean_expresion -> LPAREN boolean_option logical_operator boolean_option RPAREN boolean_expresion .) ]


state 156

    (78) boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .

    LPAREN          reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    RPAREN          reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    PLUS            reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    MINUS           reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    MULTIPLY        reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    DIVIDE          reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    GREATERTHAN     reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    LESSTHAN        reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    EQUALS          reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    NOTEQUALS       reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    AND             reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    OR              reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    COMMA           reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    COLON           reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    LET             reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    VAR             reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    IF              reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    PRINT           reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    $end            reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)
    RBRACES         reduce using rule 78 (boolean_expresion -> boolean_expresion LPAREN boolean_option logical_operator boolean_option RPAREN .)


state 157

    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer . RSQUAREBRACKET
    (42) mul_integuer -> mul_integuer . COMMA NUMBER

    RSQUAREBRACKET  shift and go to state 171
    COMMA           shift and go to state 172


state 158

    (43) mul_integuer -> NUMBER .

    RSQUAREBRACKET  reduce using rule 43 (mul_integuer -> NUMBER .)
    COMMA           reduce using rule 43 (mul_integuer -> NUMBER .)


state 159

    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string . RSQUAREBRACKET
    (44) mul_string -> mul_string . COMMA WSTRING

    RSQUAREBRACKET  shift and go to state 173
    COMMA           shift and go to state 174


state 160

    (45) mul_string -> WSTRING .

    RSQUAREBRACKET  reduce using rule 45 (mul_string -> WSTRING .)
    COMMA           reduce using rule 45 (mul_string -> WSTRING .)


state 161

    (38) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano . RSQUAREBRACKET
    (46) mul_booleano -> mul_booleano . COMMA boolean_option

    RSQUAREBRACKET  shift and go to state 175
    COMMA           shift and go to state 176


state 162

    (47) mul_booleano -> boolean_option .

    RSQUAREBRACKET  reduce using rule 47 (mul_booleano -> boolean_option .)
    COMMA           reduce using rule 47 (mul_booleano -> boolean_option .)


state 163

    (39) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float . RSQUAREBRACKET
    (50) mul_float -> mul_float . COMMA DECIMAL

    RSQUAREBRACKET  shift and go to state 177
    COMMA           shift and go to state 178


state 164

    (51) mul_float -> DECIMAL .

    RSQUAREBRACKET  reduce using rule 51 (mul_float -> DECIMAL .)
    COMMA           reduce using rule 51 (mul_float -> DECIMAL .)


state 165

    (73) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET . mul_integuer RSQUAREBRACKET
    (42) mul_integuer -> . mul_integuer COMMA NUMBER
    (43) mul_integuer -> . NUMBER

    NUMBER          shift and go to state 158

    mul_integuer                   shift and go to state 179

state 166

    (74) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET . mul_string RSQUAREBRACKET
    (44) mul_string -> . mul_string COMMA WSTRING
    (45) mul_string -> . WSTRING

    WSTRING         shift and go to state 160

    mul_string                     shift and go to state 180

state 167

    (75) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET . mul_booleano RSQUAREBRACKET
    (46) mul_booleano -> . mul_booleano COMMA boolean_option
    (47) mul_booleano -> . boolean_option
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79

    mul_booleano                   shift and go to state 181
    boolean_option                 shift and go to state 162

state 168

    (76) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET . mul_float RSQUAREBRACKET
    (50) mul_float -> . mul_float COMMA DECIMAL
    (51) mul_float -> . DECIMAL

    DECIMAL         shift and go to state 164

    mul_float                      shift and go to state 182

state 169

    (67) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES . statements RBRACES
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment_to_type
    (5) statement -> . assignment_to_type_collection
    (6) statement -> . assignment_to_type_collection_set
    (7) statement -> . variable_declarator VARIABLE ASSIGN expression
    (8) statement -> . ifComp
    (9) statement -> . print_statement
    (31) assignment_to_type -> . variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
    (32) assignment_to_type -> . variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
    (33) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
    (34) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
    (35) assignment_to_type -> . variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
    (36) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (37) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (38) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (39) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (73) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (74) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (75) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (76) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (10) variable_declarator -> . LET
    (11) variable_declarator -> . VAR
    (66) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES
    (67) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (12) print_statement -> . PRINT LPAREN expression RPAREN

    LET             shift and go to state 10
    VAR             shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13

    statements                     shift and go to state 183
    statement                      shift and go to state 3
    assignment_to_type             shift and go to state 4
    assignment_to_type_collection  shift and go to state 5
    assignment_to_type_collection_set shift and go to state 6
    variable_declarator            shift and go to state 7
    ifComp                         shift and go to state 8
    print_statement                shift and go to state 9

state 170

    (77) boolean_expresion -> LPAREN boolean_option . logical_operator boolean_option RPAREN boolean_expresion
    (82) logical_operator -> . AND
    (83) logical_operator -> . OR

    AND             shift and go to state 27
    OR              shift and go to state 28

    logical_operator               shift and go to state 184

state 171

    (36) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .

    LET             reduce using rule 36 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    VAR             reduce using rule 36 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    IF              reduce using rule 36 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    PRINT           reduce using rule 36 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    $end            reduce using rule 36 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    RBRACES         reduce using rule 36 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)


state 172

    (42) mul_integuer -> mul_integuer COMMA . NUMBER

    NUMBER          shift and go to state 185


state 173

    (37) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .

    LET             reduce using rule 37 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    VAR             reduce using rule 37 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    IF              reduce using rule 37 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    PRINT           reduce using rule 37 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    $end            reduce using rule 37 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    RBRACES         reduce using rule 37 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)


state 174

    (44) mul_string -> mul_string COMMA . WSTRING

    WSTRING         shift and go to state 186


state 175

    (38) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .

    LET             reduce using rule 38 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    VAR             reduce using rule 38 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    IF              reduce using rule 38 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    PRINT           reduce using rule 38 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    $end            reduce using rule 38 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    RBRACES         reduce using rule 38 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)


state 176

    (46) mul_booleano -> mul_booleano COMMA . boolean_option
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79

    boolean_option                 shift and go to state 187

state 177

    (39) assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .

    LET             reduce using rule 39 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    VAR             reduce using rule 39 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    IF              reduce using rule 39 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    PRINT           reduce using rule 39 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    $end            reduce using rule 39 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    RBRACES         reduce using rule 39 (assignment_to_type_collection -> variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)


state 178

    (50) mul_float -> mul_float COMMA . DECIMAL

    DECIMAL         shift and go to state 188


state 179

    (73) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer . RSQUAREBRACKET
    (42) mul_integuer -> mul_integuer . COMMA NUMBER

    RSQUAREBRACKET  shift and go to state 189
    COMMA           shift and go to state 172


state 180

    (74) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string . RSQUAREBRACKET
    (44) mul_string -> mul_string . COMMA WSTRING

    RSQUAREBRACKET  shift and go to state 190
    COMMA           shift and go to state 174


state 181

    (75) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano . RSQUAREBRACKET
    (46) mul_booleano -> mul_booleano . COMMA boolean_option

    RSQUAREBRACKET  shift and go to state 191
    COMMA           shift and go to state 176


state 182

    (76) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float . RSQUAREBRACKET
    (50) mul_float -> mul_float . COMMA DECIMAL

    RSQUAREBRACKET  shift and go to state 192
    COMMA           shift and go to state 178


state 183

    (67) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements . RBRACES
    (2) statements -> statements . statement
    (4) statement -> . assignment_to_type
    (5) statement -> . assignment_to_type_collection
    (6) statement -> . assignment_to_type_collection_set
    (7) statement -> . variable_declarator VARIABLE ASSIGN expression
    (8) statement -> . ifComp
    (9) statement -> . print_statement
    (31) assignment_to_type -> . variable_declarator VARIABLE COLON STRING ASSIGN WSTRING
    (32) assignment_to_type -> . variable_declarator VARIABLE COLON INTEGER ASSIGN NUMBER
    (33) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN TRUE
    (34) assignment_to_type -> . variable_declarator VARIABLE COLON BOOLEAN ASSIGN FALSE
    (35) assignment_to_type -> . variable_declarator VARIABLE COLON FLOAT ASSIGN DECIMAL
    (36) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET integer_options RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (37) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET STRING RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (38) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET BOOLEAN RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (39) assignment_to_type_collection -> . variable_declarator VARIABLE COLON LSQUAREBRACKET FLOAT RSQUAREBRACKET ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (73) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET
    (74) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET
    (75) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET
    (76) assignment_to_type_collection_set -> . variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET
    (10) variable_declarator -> . LET
    (11) variable_declarator -> . VAR
    (66) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES
    (67) ifComp -> . IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES
    (12) print_statement -> . PRINT LPAREN expression RPAREN

    RBRACES         shift and go to state 193
    LET             shift and go to state 10
    VAR             shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13

    statement                      shift and go to state 14
    assignment_to_type             shift and go to state 4
    assignment_to_type_collection  shift and go to state 5
    assignment_to_type_collection_set shift and go to state 6
    variable_declarator            shift and go to state 7
    ifComp                         shift and go to state 8
    print_statement                shift and go to state 9

state 184

    (77) boolean_expresion -> LPAREN boolean_option logical_operator . boolean_option RPAREN boolean_expresion
    (48) boolean_option -> . TRUE
    (49) boolean_option -> . FALSE

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79

    boolean_option                 shift and go to state 194

state 185

    (42) mul_integuer -> mul_integuer COMMA NUMBER .

    RSQUAREBRACKET  reduce using rule 42 (mul_integuer -> mul_integuer COMMA NUMBER .)
    COMMA           reduce using rule 42 (mul_integuer -> mul_integuer COMMA NUMBER .)


state 186

    (44) mul_string -> mul_string COMMA WSTRING .

    RSQUAREBRACKET  reduce using rule 44 (mul_string -> mul_string COMMA WSTRING .)
    COMMA           reduce using rule 44 (mul_string -> mul_string COMMA WSTRING .)


state 187

    (46) mul_booleano -> mul_booleano COMMA boolean_option .

    RSQUAREBRACKET  reduce using rule 46 (mul_booleano -> mul_booleano COMMA boolean_option .)
    COMMA           reduce using rule 46 (mul_booleano -> mul_booleano COMMA boolean_option .)


state 188

    (50) mul_float -> mul_float COMMA DECIMAL .

    RSQUAREBRACKET  reduce using rule 50 (mul_float -> mul_float COMMA DECIMAL .)
    COMMA           reduce using rule 50 (mul_float -> mul_float COMMA DECIMAL .)


state 189

    (73) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .

    LET             reduce using rule 73 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    VAR             reduce using rule 73 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    IF              reduce using rule 73 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    PRINT           reduce using rule 73 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    $end            reduce using rule 73 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)
    RBRACES         reduce using rule 73 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN integer_options GREATERTHAN ASSIGN LSQUAREBRACKET mul_integuer RSQUAREBRACKET .)


state 190

    (74) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .

    LET             reduce using rule 74 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    VAR             reduce using rule 74 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    IF              reduce using rule 74 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    PRINT           reduce using rule 74 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    $end            reduce using rule 74 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)
    RBRACES         reduce using rule 74 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN STRING GREATERTHAN ASSIGN LSQUAREBRACKET mul_string RSQUAREBRACKET .)


state 191

    (75) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .

    LET             reduce using rule 75 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    VAR             reduce using rule 75 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    IF              reduce using rule 75 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    PRINT           reduce using rule 75 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    $end            reduce using rule 75 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)
    RBRACES         reduce using rule 75 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN BOOLEAN GREATERTHAN ASSIGN LSQUAREBRACKET mul_booleano RSQUAREBRACKET .)


state 192

    (76) assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .

    LET             reduce using rule 76 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    VAR             reduce using rule 76 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    IF              reduce using rule 76 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    PRINT           reduce using rule 76 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    $end            reduce using rule 76 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)
    RBRACES         reduce using rule 76 (assignment_to_type_collection_set -> variable_declarator VARIABLE COLON SET LESSTHAN FLOAT GREATERTHAN ASSIGN LSQUAREBRACKET mul_float RSQUAREBRACKET .)


state 193

    (67) ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .

    LET             reduce using rule 67 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .)
    VAR             reduce using rule 67 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .)
    IF              reduce using rule 67 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .)
    PRINT           reduce using rule 67 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .)
    $end            reduce using rule 67 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .)
    RBRACES         reduce using rule 67 (ifComp -> IF LPAREN comparacion RPAREN LBRACES statements RBRACES ELSE LBRACES statements RBRACES .)


state 194

    (77) boolean_expresion -> LPAREN boolean_option logical_operator boolean_option . RPAREN boolean_expresion

    RPAREN          shift and go to state 143

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for GREATERTHAN in state 30 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 30 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 30 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 30 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 36 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 36 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 36 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 36 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 37 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 37 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 37 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 37 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 38 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 38 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 38 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 38 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 74 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 74 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 74 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 74 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 74 resolved as shift
WARNING: shift/reduce conflict for COLON in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 104 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 104 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 104 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 104 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 104 resolved as shift
WARNING: shift/reduce conflict for OR in state 104 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 104 resolved as shift
WARNING: shift/reduce conflict for COLON in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 105 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 105 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 105 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 105 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 105 resolved as shift
WARNING: shift/reduce conflict for AND in state 105 resolved as shift
WARNING: shift/reduce conflict for OR in state 105 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 105 resolved as shift
WARNING: shift/reduce conflict for COLON in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 106 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 106 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 106 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 106 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 106 resolved as shift
WARNING: shift/reduce conflict for COLON in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 107 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 107 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 107 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 107 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 107 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 107 resolved as shift
WARNING: shift/reduce conflict for AND in state 107 resolved as shift
WARNING: shift/reduce conflict for OR in state 107 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 107 resolved as shift
WARNING: shift/reduce conflict for COLON in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 108 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 108 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 108 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 108 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 108 resolved as shift
WARNING: shift/reduce conflict for AND in state 108 resolved as shift
WARNING: shift/reduce conflict for OR in state 108 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 108 resolved as shift
WARNING: shift/reduce conflict for COLON in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 109 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 109 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 109 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 109 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 109 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 109 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 109 resolved as shift
WARNING: shift/reduce conflict for AND in state 109 resolved as shift
WARNING: shift/reduce conflict for OR in state 109 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 109 resolved as shift
WARNING: shift/reduce conflict for COLON in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 110 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 110 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 110 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 110 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 110 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 110 resolved as shift
WARNING: shift/reduce conflict for AND in state 110 resolved as shift
WARNING: shift/reduce conflict for OR in state 110 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 110 resolved as shift
WARNING: shift/reduce conflict for COLON in state 110 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 111 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 111 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 111 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 111 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 111 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 111 resolved as shift
WARNING: shift/reduce conflict for AND in state 111 resolved as shift
WARNING: shift/reduce conflict for OR in state 111 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 111 resolved as shift
WARNING: shift/reduce conflict for COLON in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 112 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 112 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 112 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 112 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 112 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 112 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 112 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 112 resolved as shift
WARNING: shift/reduce conflict for AND in state 112 resolved as shift
WARNING: shift/reduce conflict for OR in state 112 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 112 resolved as shift
WARNING: shift/reduce conflict for COLON in state 112 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 113 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 113 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 113 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 113 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 113 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 113 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 113 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 113 resolved as shift
WARNING: shift/reduce conflict for AND in state 113 resolved as shift
WARNING: shift/reduce conflict for OR in state 113 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 113 resolved as shift
WARNING: shift/reduce conflict for COLON in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 114 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 114 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 114 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 114 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 114 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 114 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 114 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 114 resolved as shift
WARNING: shift/reduce conflict for AND in state 114 resolved as shift
WARNING: shift/reduce conflict for OR in state 114 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 114 resolved as shift
WARNING: shift/reduce conflict for COLON in state 114 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 115 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 115 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 115 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 115 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 115 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 115 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 115 resolved as shift
WARNING: shift/reduce conflict for AND in state 115 resolved as shift
WARNING: shift/reduce conflict for OR in state 115 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 115 resolved as shift
WARNING: shift/reduce conflict for COLON in state 115 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 132 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 155 resolved as shift
WARNING: reduce/reduce conflict in state 34 resolved using rule (boolean_option -> TRUE)
WARNING: rejected rule (type -> TRUE) in state 34
WARNING: reduce/reduce conflict in state 35 resolved using rule (boolean_option -> FALSE)
WARNING: rejected rule (type -> FALSE) in state 35
WARNING: reduce/reduce conflict in state 59 resolved using rule (boolean_option -> TRUE)
WARNING: rejected rule (type -> TRUE) in state 59
WARNING: reduce/reduce conflict in state 60 resolved using rule (boolean_option -> FALSE)
WARNING: rejected rule (type -> FALSE) in state 60
